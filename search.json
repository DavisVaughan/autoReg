[{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Automatic Regression Modeling","text":"can install autoReg package github.","code":"#install.packages(\"devtools\") devtools::install_github(\"cardiomoon/autoReg\")"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"load-package","dir":"Articles","previous_headings":"","what":"Load package","title":"Automatic Regression Modeling","text":"load package, use library() function.","code":"library(autoReg) library(dplyr)  Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"linear-model-with-multiple-variables","dir":"Articles","previous_headings":"","what":"Linear model with multiple variables","title":"Automatic Regression Modeling","text":"package autoReg aims automatic selection explanatory variables regression models. Let’s begin famous mtcars data. select mpg(miles per gallon) dependent variable select wt(weight), hp(horse power) (transmission, 0=automatic, 1=manual) explanatory variables included possible interaction. autoReg() function make table summarizing result analysis. can make publication-ready table easily using myft(). makes flextable object can use HTML, PDF, microsoft word powerpoint file. Dependent: mpg  unit value Coefficient (multivariable) wt [1.5,5.4] Mean ± SD 3.2 ± 1.0 -4.80 (-13.06 3.46, p=.242) hp [52,335] Mean ± SD 146.7 ± 68.6 -0.09 (-0.22 0.04, p=.183) [0,1] Mean ± SD 0.4 ± 0.5 12.84 (-16.52 42.19, p=.376) wt:hp    0.01 (-0.03 0.05, p=.458) wt:   -5.36 (-14.85 4.13, p=.255) hp:   -0.03 (-0.22 0.15, p=.717) wt:hp::   0.02 (-0.04 0.07, p=.503)  result multivariable analysis, found explanatory variable significant.","code":"fit=lm(mpg~wt*hp*am,data=mtcars) autoReg(fit)  ————————————————————————————————————————————————————————————————————————————————————— Dependent: mpg                    unit         value      Coefficient (multivariable)  ————————————————————————————————————————————————————————————————————————————————————— wt                [1.5,5.4]  Mean ± SD     3.2 ± 1.0   -4.80 (-13.06 to 3.46, p=.242)  hp                 [52,335]  Mean ± SD  146.7 ± 68.6    -0.09 (-0.22 to 0.04, p=.183)  am                    [0,1]  Mean ± SD     0.4 ± 0.5  12.84 (-16.52 to 42.19, p=.376)  wt:hp                                                    0.01 (-0.03 to 0.05, p=.458)  wt:am                                                  -5.36 (-14.85 to 4.13, p=.255)  hp:am                                                   -0.03 (-0.22 to 0.15, p=.717)  wt:hp:am                  :                              0.02 (-0.04 to 0.07, p=.503)  ————————————————————————————————————————————————————————————————————————————————————— autoReg(fit) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"selection-of-explanatory-variable-from-univariable-model","dir":"Articles","previous_headings":"Linear model with multiple variables","what":"Selection of explanatory variable from univariable model","title":"Automatic Regression Modeling","text":"can start univariable model. list univariable model, can select potentially significant explanatory variable(p value 0.2 example). autoReg() function automatically select univariable model given p value threshold(default value 0.2). Dependent: mpg  unit value Coefficient (univariable) Coefficient (multivariable) wt [1.5,5.4] Mean ± SD 3.2 ± 1.0 -5.34 (-6.49 -4.20, p<.001) -7.50 (-13.21 -1.80, p=.012) hp [52,335] Mean ± SD 146.7 ± 68.6 -0.07 (-0.09 -0.05, p<.001) -0.11 (-0.20 -0.02, p=.022) [0,1] Mean ± SD 0.4 ± 0.5 7.24 (3.64 10.85, p<.001) 1.91 (-11.29 15.10, p=.769) wt:hp    -0.01 (-0.02 -0.01, p<.001) 0.02 (-0.00 0.05, p=.072) wt:   1.89 (0.25 3.52, p=.025) -0.60 (-4.92 3.73, p=.778) hp:   0.01 (-0.02 0.04, p=.452)  wt:hp::   -0.00 (-0.01 0.01, p=.982)   can see table, coefficients hp:(interaction hp ) wt:hp:(interaction wt hp ) p-values 0.2. variables excluded remaining variables used multivariable model. want use explanatory variables multivariable model, set threshold 1.","code":"autoReg(fit,uni=TRUE, threshold=0.2) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"stepwise-backward-elimination","dir":"Articles","previous_headings":"Linear model with multiple variables","what":"Stepwise backward elimination","title":"Automatic Regression Modeling","text":"multivariable model, can perform stepwise backward elimination step() function. can perform univariable analysis variable selection, multivariable analysis stepwise backward elimination one step. Dependent: mpg  unit value Coefficient (univariable) Coefficient (multivariable) Coefficient (final) hp [52,335] Mean ± SD 146.7 ± 68.6 -0.07 (-0.09 -0.05, p<.001) -0.11 (-0.20 -0.02, p=.022) -0.12 (-0.17 -0.07, p<.001) wt [1.5,5.4] Mean ± SD 3.2 ± 1.0 -5.34 (-6.49 -4.20, p<.001) -7.50 (-13.21 -1.80, p=.012) -8.22 (-10.82 -5.62, p<.001) [0,1] Mean ± SD 0.4 ± 0.5 7.24 (3.64 10.85, p<.001) 1.91 (-11.29 15.10, p=.769)  hp:wt    -0.01 (-0.02 -0.01, p<.001) 0.02 (-0.00 0.05, p=.072) 0.03 (0.01 0.04, p<.001) hp:   0.01 (-0.02 0.04, p=.452)   wt:   1.89 (0.25 3.52, p=.025) -0.60 (-4.92 3.73, p=.778)  hp:wt::   -0.00 (-0.01 0.01, p=.982)","code":"fit=lm(mpg~hp+wt+am+wt:hp+wt:am,data=mtcars) final=step(fit,trace=0) summary(final)  Call: lm(formula = mpg ~ hp + wt + hp:wt, data = mtcars)  Residuals:     Min      1Q  Median      3Q     Max  -3.0632 -1.6491 -0.7362  1.4211  4.5513   Coefficients:             Estimate Std. Error t value Pr(>|t|)     (Intercept) 49.80842    3.60516  13.816 5.01e-14 *** hp          -0.12010    0.02470  -4.863 4.04e-05 *** wt          -8.21662    1.26971  -6.471 5.20e-07 *** hp:wt        0.02785    0.00742   3.753 0.000811 *** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  Residual standard error: 2.153 on 28 degrees of freedom Multiple R-squared:  0.8848,    Adjusted R-squared:  0.8724  F-statistic: 71.66 on 3 and 28 DF,  p-value: 2.981e-13 fit=lm(mpg~hp*wt*am,data=mtcars) autoReg(fit,uni=TRUE,final=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"linear-model-with-interaction-between-categorical-variable","dir":"Articles","previous_headings":"","what":"Linear model with interaction between categorical variable","title":"Automatic Regression Modeling","text":"can use autoReg() function models interaction categorical variable(s). Dependent: Sepal.Length  unit value Coefficient (univariable) Coefficient (multivariable) Coefficient (final) Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 -0.22 (-0.53 0.08, p=.152) 0.69 (0.36 1.02, p<.001) 0.80 (0.59 1.01, p<.001) Species setosa     (N=50) Mean ± SD 5.0 ± 0.4     versicolor (N=50) Mean ± SD 5.9 ± 0.5 0.93 (0.73 1.13, p<.001) 0.90 (-0.68 2.48, p=.261) 1.46 (1.24 1.68, p<.001)  virginica  (N=50) Mean ± SD 6.6 ± 0.6 1.58 (1.38 1.79, p<.001) 1.27 (-0.35 2.88, p=.123) 1.95 (1.75 2.14, p<.001) Sepal.Width:Species setosa   0.48 (0.29 0.67, p<.001)   Sepal.Width:Species versicolor   0.93 (0.69 1.17, p<.001) 0.17 (-0.34 0.69, p=.503)  Sepal.Width:Species virginica   1.08 (0.86 1.30, p<.001) 0.21 (-0.29 0.72, p=.411)","code":"fit=lm(Sepal.Length~Sepal.Width*Species,data=iris) autoReg(fit,uni=TRUE, final=TRUE) %>% myft()"},{"path":[]},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"original-data","dir":"Articles","previous_headings":"Missing data - automatic multiple imputation","what":"Original data","title":"Automatic Regression Modeling","text":"Let us think linear regression model iris data. model, Sepal.Length dependent variable Sepal.Width Species explanatory variables. can make table summarizing result follows. name levels unit value Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 Species setosa     (N=50) Mean ± SD 5.0 ± 0.4  versicolor (N=50) Mean ± SD 5.9 ± 0.5  virginica  (N=50) Mean ± SD 6.6 ± 0.6 name levels unit value Coefficient (original data) Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 0.80 (0.59 1.01, p<.001) Species setosa     (N=50) Mean ± SD 5.0 ± 0.4   versicolor (N=50) Mean ± SD 5.9 ± 0.5 1.46 (1.24 1.68, p<.001)  virginica  (N=50) Mean ± SD 6.6 ± 0.6 1.95 (1.75 2.14, p<.001)","code":"df=gaze(Sepal.Length~Sepal.Width+Species,data=iris) df %>% myft() fit=lm(Sepal.Length~Sepal.Width+Species,data=iris) df=addFitSummary(df,fit,\"Coefficient (original data)\") df %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"missed-data","dir":"Articles","previous_headings":"Missing data - automatic multiple imputation","what":"Missed data","title":"Automatic Regression Modeling","text":"simulation MCAR(missing completely random) data, one third Sepal.Width records replace NA(missing). want perform missing data analysis, use gaze() function missing=TRUE. Dependent:Sepal.Width levels missing (N=100) Missing (N=50) p Sepal.Length Mean ± SD 5.9 ± 0.8 5.7 ± 0.8 .092 Petal.Length Mean ± SD 3.9 ± 1.7 3.4 ± 1.8 .126 Petal.Width Mean ± SD 1.3 ± 0.8 1.1 ± 0.8 .136 Species setosa 30 (30%) 20 (40%) .432  versicolor 34 (34%) 16 (32%)   virginica 36 (36%) 14 (28%)  analysis data. name levels unit value Coefficient (original data) Coefficient (missed data) Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 0.80 (0.59 1.01, p<.001) 0.71 (0.47 0.96, p<.001) Species setosa     (N=50) Mean ± SD 5.0 ± 0.4    versicolor (N=50) Mean ± SD 5.9 ± 0.5 1.46 (1.24 1.68, p<.001) 1.38 (1.10 1.66, p<.001)  virginica  (N=50) Mean ± SD 6.6 ± 0.6 1.95 (1.75 2.14, p<.001) 1.95 (1.69 2.20, p<.001)","code":"iris1=iris set.seed=123 no=sample(1:150,50,replace=FALSE) iris1$Sepal.Width[no]=NA gaze(Sepal.Width~.,data=iris1,missing=TRUE) %>% myft() fit1=lm(Sepal.Length~Sepal.Width+Species,data=iris1) df=addFitSummary(df,fit1,\"Coefficient (missed data)\") df %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"multiple-imputation","dir":"Articles","previous_headings":"Missing data - automatic multiple imputation","what":"Multiple imputation","title":"Automatic Regression Modeling","text":"can multiple imputation using imputedReg() function. function perform multiple imputation using mice() function mice package. default value number multiple imputation 20. can adjust number m argument. can set random number generator seed argument. name levels unit value Coefficient (original data) Coefficient (missed data) Coefficient (imputed) Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 0.80 (0.59 1.01, p<.001) 0.71 (0.47 0.96, p<.001) 0.76 (0.55 0.98, p<.001) Species setosa     (N=50) Mean ± SD 5.0 ± 0.4     versicolor (N=50) Mean ± SD 5.9 ± 0.5 1.46 (1.24 1.68, p<.001) 1.38 (1.10 1.66, p<.001) 1.44 (1.20 1.67, p<.001)  virginica  (N=50) Mean ± SD 6.6 ± 0.6 1.95 (1.75 2.14, p<.001) 1.95 (1.69 2.20, p<.001) 1.97 (1.76 2.19, p<.001) can make plot summarizing models modelPlot() function.","code":"fit2=imputedReg(fit1, m=20,seed=1234) df=addFitSummary(df,fit2,statsname=\"Coefficient (imputed)\") df %>% myft() modelPlot(fit1,imputed=TRUE)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started","text":"can install autoReg package github.","code":"#install.packages(\"devtools\") devtools::install_github(\"cardiomoon/autoReg\")"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"load-package","dir":"Articles","previous_headings":"","what":"Load package","title":"Getting started","text":"load package, use library() function.","code":"library(autoReg)"},{"path":[]},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"summarizing-baseline-characteristics-gaze","dir":"Articles","previous_headings":"Main features","what":"1.Summarizing baseline characteristics : gaze()","title":"Getting started","text":"can make table summarizing baseline characteristics easily.","code":"library(moonBook) # For use of example data acs gaze(sex~.,data=acs) ————————————————————————————————————————————————————————————————————————   Dependent:sex        levels           Female          Male        p           (N)                             (N=287)        (N=570)            ———————————————————————————————————————————————————————————————————————— age               Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  cardiogenicShock  No                    275 (95.8%)     530 (93%)   .136                    Yes                     12 (4.2%)       40 (7%)         entry             Femoral               119 (41.5%)   193 (33.9%)   .035                    Radial                168 (58.5%)   377 (66.1%)         Dx                NSTEMI                 50 (17.4%)   103 (18.1%)   .012                    STEMI                  84 (29.3%)   220 (38.6%)                           Unstable Angina       153 (53.3%)   247 (43.3%)         EF                Mean ± SD             56.3 ± 10.1    55.6 ± 9.4   .387  height            Mean ± SD             153.8 ± 6.2   167.9 ± 6.1  <.001  weight            Mean ± SD              57.2 ± 9.3   68.7 ± 10.3  <.001  BMI               Mean ± SD              24.2 ± 3.6    24.3 ± 3.2   .611  obesity           No                    194 (67.6%)   373 (65.4%)   .580                    Yes                    93 (32.4%)   197 (34.6%)         TC                Mean ± SD            188.9 ± 51.1  183.3 ± 45.9   .124  LDLC              Mean ± SD            117.8 ± 41.2  116.0 ± 41.1   .561  HDLC              Mean ± SD             39.0 ± 11.5   37.8 ± 10.9   .145  TG                Mean ± SD            119.9 ± 76.2  127.9 ± 97.3   .195  DM                No                    173 (60.3%)   380 (66.7%)   .077                    Yes                   114 (39.7%)   190 (33.3%)         HBP               No                     83 (28.9%)   273 (47.9%)  <.001                    Yes                   204 (71.1%)   297 (52.1%)         smoking           Ex-smoker              49 (17.1%)   155 (27.2%)  <.001                    Never                 209 (72.8%)   123 (21.6%)                           Smoker                 29 (10.1%)   292 (51.2%)         ————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"for-easy-reproducible-research-myft","dir":"Articles","previous_headings":"Main features","what":"For easy reproducible research : myft()","title":"Getting started","text":"can make publication-ready table easily using myft(). makes flextable object can use either HTML PDF format. name levels Female (N=287) Male (N=570) p age Mean ± SD 68.7 ± 10.7 60.6 ± 11.2 <.001 cardiogenicShock 275 (95.8%) 530 (93%) .136  Yes 12 (4.2%) 40 (7%)  entry Femoral 119 (41.5%) 193 (33.9%) .035  Radial 168 (58.5%) 377 (66.1%)  Dx NSTEMI 50 (17.4%) 103 (18.1%) .012  STEMI 84 (29.3%) 220 (38.6%)   Unstable Angina 153 (53.3%) 247 (43.3%)  EF Mean ± SD 56.3 ± 10.1 55.6 ± 9.4 .387 height Mean ± SD 153.8 ± 6.2 167.9 ± 6.1 <.001 weight Mean ± SD 57.2 ± 9.3 68.7 ± 10.3 <.001 BMI Mean ± SD 24.2 ± 3.6 24.3 ± 3.2 .611 obesity 194 (67.6%) 373 (65.4%) .580  Yes 93 (32.4%) 197 (34.6%)  TC Mean ± SD 188.9 ± 51.1 183.3 ± 45.9 .124 LDLC Mean ± SD 117.8 ± 41.2 116.0 ± 41.1 .561 HDLC Mean ± SD 39.0 ± 11.5 37.8 ± 10.9 .145 TG Mean ± SD 119.9 ± 76.2 127.9 ± 97.3 .195 DM 173 (60.3%) 380 (66.7%) .077  Yes 114 (39.7%) 190 (33.3%)  HBP 83 (28.9%) 273 (47.9%) <.001  Yes 204 (71.1%) 297 (52.1%)  smoking Ex-smoker 49 (17.1%) 155 (27.2%) <.001  Never 209 (72.8%) 123 (21.6%)   Smoker 29 (10.1%) 292 (51.2%)  can also make powerpoint file using rrtable::table2pptx() function. can make microsoft word file using rrtable::table2docx() function.","code":"library(dplyr) # for use of `%>%`  Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union ft=gaze(sex~.,data=acs) %>% myft() ft library(rrtable)  table2pptx(ft) Exported table as Report.pptx table2docx(ft) Exported table as Report.docx"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"summarizing-baseline-characteristics-with-two-or-more-grouping-variables","dir":"Articles","previous_headings":"Main features","what":"Summarizing baseline characteristics with two or more grouping variables","title":"Getting started","text":"can get table summarizing baseline characteristics two grouping variables. sex (N) Female (N=287) Male (N=570) name levels NSTEMI (N=50) STEMI (N=84) Unstable Angina (N=153) p NSTEMI (N=103) STEMI (N=220) Unstable Angina (N=247) p age Mean ± SD 70.9 ± 11.4 69.1 ± 10.4 67.7 ± 10.7 .177 61.1 ± 11.6 59.4 ± 11.7 61.4 ± 10.6 .133 cardiogenicShock 49 (98%) 73 (86.9%) 153 (100%) <.001 100 (97.1%) 183 (83.2%) 247 (100%) <.001  Yes 1 (2%) 11 (13.1%) 0 (0%)  3 (2.9%) 37 (16.8%) 0 (0%)  entry Femoral 22 (44%) 45 (53.6%) 52 (34%) .013 36 (35%) 88 (40%) 69 (27.9%) .022  Radial 28 (56%) 39 (46.4%) 101 (66%)  67 (65%) 132 (60%) 178 (72.1%)  EF Mean ± SD 54.8 ± 9.1 52.3 ± 10.9 59.4 ± 8.8 <.001 55.1 ± 9.4 52.4 ± 8.9 59.1 ± 8.7 <.001 height Mean ± SD 154.2 ± 5.1 155.7 ± 5.4 152.6 ± 6.7 .002 167.5 ± 5.7 168.7 ± 6.0 167.3 ± 6.4 .055 weight Mean ± SD 57.2 ± 10.3 57.4 ± 9.0 57.1 ± 9.1 .978 67.5 ± 8.4 68.8 ± 10.9 69.0 ± 10.6 .479 BMI Mean ± SD 24.1 ± 4.3 23.6 ± 3.2 24.5 ± 3.5 .215 24.1 ± 2.6 24.1 ± 3.4 24.6 ± 3.4 .205 obesity 35 (70%) 60 (71.4%) 99 (64.7%) .528 71 (68.9%) 149 (67.7%) 153 (61.9%) .301  Yes 15 (30%) 24 (28.6%) 54 (35.3%)  32 (31.1%) 71 (32.3%) 94 (38.1%)  TC Mean ± SD 196.3 ± 52.7 180.7 ± 45.7 191.1 ± 53.1 .192 192.6 ± 54.3 184.1 ± 42.6 178.7 ± 44.6 .036 LDLC Mean ± SD 127.7 ± 39.5 111.0 ± 40.0 118.3 ± 41.8 .088 125.4 ± 47.1 118.9 ± 39.1 109.5 ± 39.2 .002 HDLC Mean ± SD 40.1 ± 13.8 39.5 ± 11.2 38.5 ± 10.8 .627 38.4 ± 10.9 38.1 ± 10.9 37.4 ± 10.9 .655 TG Mean ± SD 112.5 ± 51.1 112.3 ± 87.2 126.3 ± 76.0 .316 138.0 ± 100.2 104.3 ± 65.5 144.3 ± 114.2 <.001 DM 25 (50%) 54 (64.3%) 94 (61.4%) .240 71 (68.9%) 154 (70%) 155 (62.8%) .219  Yes 25 (50%) 30 (35.7%) 59 (38.6%)  32 (31.1%) 66 (30%) 92 (37.2%)  HBP 19 (38%) 28 (33.3%) 36 (23.5%) .084 43 (41.7%) 122 (55.5%) 108 (43.7%) .016  Yes 31 (62%) 56 (66.7%) 117 (76.5%)  60 (58.3%) 98 (44.5%) 139 (56.3%)  smoking Ex-smoker 8 (16%) 13 (15.5%) 28 (18.3%) .184 34 (33%) 53 (24.1%) 68 (27.5%) .002  Never 37 (74%) 57 (67.9%) 115 (75.2%)  13 (12.6%) 40 (18.2%) 70 (28.3%)   Smoker 5 (10%) 14 (16.7%) 10 (6.5%)  56 (54.4%) 127 (57.7%) 109 (44.1%)  can also use three grouping variables.resultant table long review, can try. sexDM(N) FemaleNo(N=173) FemaleYes(N=114) MaleNo(N=380) MaleYes(N=190) name levels (N=54) Yes (N=119) p (N=29) Yes (N=85) p (N=205) Yes (N=175) p (N=68) Yes (N=122) p age Mean ± SD 68.5 ± 14.2 69.6 ± 9.9 .589 67.1 ± 7.8 68.0 ± 10.3 .660 57.7 ± 11.5 64.5 ± 10.4 <.001 56.9 ± 10.4 61.9 ± 10.3 .002","code":"gaze(sex+Dx~.,data=acs) %>% myft() gaze(sex+DM+HBP~age,data=acs) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"for-automatic-selection-of-explanatory-variables-autoreg","dir":"Articles","previous_headings":"Main features","what":"2. For automatic selection of explanatory variables : autoReg()","title":"Getting started","text":"can make table summarizing results regression analysis. example, let us perform logistic regression colon cancer data. can make table result. can make publication-ready table. Dependent: status  0 (N=925) 1 (N=897) (multivariable) rx Obs 282 (30.5%) 342 (38.1%)   Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) sex Mean ± SD 0.5 ± 0.5 0.5 ± 0.5 0.95 (0.78-1.15, p=.589) age Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) obstruct Mean ± SD 0.2 ± 0.4 0.2 ± 0.4 1.33 (1.04-1.70, p=.023) perfor Mean ± SD 0.0 ± 0.2 0.0 ± 0.2 1.38 (0.78-2.44, p=.274) nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001)  want make table explanation, can make categorical variables numeric variables. example, explanatory variables obstruct(obstruction colon tumor) perfor(perforation colon) coded 0 1, “” “Yes” actually. Also dependent variable status coded 0 1, “Alive” “Died”. Dependent: status.factor  Alive (N=925) Died (N=897) (multivariable) rx Obs 282 (30.5%) 342 (38.1%)   Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) sex.factor Female 436 (47.1%) 434 (48.4%)   Male 489 (52.9%) 463 (51.6%) 0.95 (0.78-1.15, p=.589) age Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) obstruct.factor 764 (82.6%) 706 (78.7%)   Yes 161 (17.4%) 191 (21.3%) 1.33 (1.04-1.70, p=.023) perfor.factor 903 (97.6%) 865 (96.4%)   Yes 22 (2.4%) 32 (3.6%) 1.38 (0.78-2.44, p=.274) nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001)  can add labels names variables setLabel() function. Dependent: Mortality  Alive (N=925) Died (N=897) (multivariable) Treatment Obs 282 (30.5%) 342 (38.1%)   Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)   Male 489 (52.9%) 463 (51.6%) 0.95 (0.78-1.15, p=.589) Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) Obstruction 764 (82.6%) 706 (78.7%)   Yes 161 (17.4%) 191 (21.3%) 1.33 (1.04-1.70, p=.023) Perforation 903 (97.6%) 865 (96.4%)   Yes 22 (2.4%) 32 (3.6%) 1.38 (0.78-2.44, p=.274) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001)  want show reference values table, can shorten table. Dependent: Mortality  Alive (N=925) Died (N=897) (multivariable) Treatment Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) Sex Male 489 (52.9%) 463 (51.6%) 0.95 (0.78-1.15, p=.589) Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) Obstruction Yes 161 (17.4%) 191 (21.3%) 1.33 (1.04-1.70, p=.023) Perforation Yes 22 (2.4%) 32 (3.6%) 1.38 (0.78-2.44, p=.274) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001)","code":"library(survival)   # For use of data colon data(cancer)    fit=glm(status~rx+sex+age+obstruct+perfor+nodes,data=colon,family=\"binomial\") summary(fit)  Call: glm(formula = status ~ rx + sex + age + obstruct + perfor + nodes,      family = \"binomial\", data = colon)  Deviance Residuals:      Min       1Q   Median       3Q      Max   -2.4950  -1.0594  -0.7885   1.1619   1.6424    Coefficients:              Estimate Std. Error z value Pr(>|z|)     (Intercept) -0.645417   0.285558  -2.260   0.0238 *   rxLev       -0.067422   0.118907  -0.567   0.5707     rxLev+5FU   -0.627480   0.121684  -5.157 2.51e-07 *** sex         -0.053541   0.098975  -0.541   0.5885     age          0.002307   0.004234   0.545   0.5859     obstruct     0.283703   0.125194   2.266   0.0234 *   perfor       0.319281   0.292034   1.093   0.2743     nodes        0.190563   0.018255  10.439  < 2e-16 *** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  (Dispersion parameter for binomial family taken to be 1)      Null deviance: 2525.4  on 1821  degrees of freedom Residual deviance: 2342.4  on 1814  degrees of freedom   (36 observations deleted due to missingness) AIC: 2358.4  Number of Fisher Scoring iterations: 4 autoReg(fit) —————————————————————————————————————————————————————————————————————————————————— Dependent: status                 0 (N=925)    1 (N=897)        OR (multivariable)  —————————————————————————————————————————————————————————————————————————————————— rx                         Obs  282 (30.5%)  342 (38.1%)                                                       Lev  285 (30.8%)    323 (36%)  0.93 (0.74-1.18, p=.571)                         Lev+5FU  358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  sex                  Mean ± SD    0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  age                  Mean ± SD  60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.586)  obstruct             Mean ± SD    0.2 ± 0.4    0.2 ± 0.4  1.33 (1.04-1.70, p=.023)  perfor               Mean ± SD    0.0 ± 0.2    0.0 ± 0.2  1.38 (0.78-2.44, p=.274)  nodes                Mean ± SD    2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.25, p<.001)  —————————————————————————————————————————————————————————————————————————————————— autoReg(fit) %>% myft() colon$status.factor=factor(colon$status,labels=c(\"Alive\",\"Died\")) colon$obstruct.factor=factor(colon$obstruct,labels=c(\"No\",\"Yes\")) colon$perfor.factor=factor(colon$perfor,labels=c(\"No\",\"Yes\")) colon$sex.factor=factor(colon$sex,labels=c(\"Female\",\"Male\"))  fit=glm(status.factor~rx+sex.factor+age+obstruct.factor+perfor.factor+nodes,data=colon,family=\"binomial\") result=autoReg(fit)  result %>% myft() colon$status.factor=setLabel(colon$status.factor,\"Mortality\") colon$rx=setLabel(colon$rx,\"Treatment\") colon$age=setLabel(colon$age,\"Age(Years)\") colon$sex.factor=setLabel(colon$sex.factor,\"Sex\") colon$obstruct.factor=setLabel(colon$obstruct.factor,\"Obstruction\") colon$perfor.factor=setLabel(colon$perfor.factor,\"Perforation\") colon$nodes=setLabel(colon$nodes,\"Positive nodes\")  fit=glm(status.factor~rx+sex.factor+age+obstruct.factor+perfor.factor+nodes,data=colon,family=\"binomial\") result=autoReg(fit)  result %>% myft() shorten(result) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"add-univariate-models-to-table-and-automatic-selection-of-explanatory-variables","dir":"Articles","previous_headings":"Main features","what":"Add univariate models to table and automatic selection of explanatory variables","title":"Getting started","text":"can add results univariate analyses table. time, autoReg() function automatically select explanatory variables threshold(default value 0.2) perform multivariate analysis. table, p values explanatory variables sex.factor age default threshold(0.2), excluded multivariate model. Dependent: Mortality  Alive (N=925) Died (N=897) (univariable) (multivariable) Treatment Obs 282 (30.5%) 342 (38.1%)    Lev 285 (30.8%) 323 (36%) 0.93 (0.75-1.17, p=.554) 0.93 (0.74-1.18, p=.570)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.43-0.67, p<.001) 0.54 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)    Male 489 (52.9%) 463 (51.6%) 0.95 (0.79-1.14, p=.594)  Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.00, p=.305)  Obstruction 764 (82.6%) 706 (78.7%)    Yes 161 (17.4%) 191 (21.3%) 1.28 (1.02-1.62, p=.036) 1.32 (1.04-1.69, p=.025) Perforation 903 (97.6%) 865 (96.4%)    Yes 22 (2.4%) 32 (3.6%) 1.52 (0.88-2.63, p=.137) 1.38 (0.78-2.44, p=.273) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001) 1.21 (1.17-1.25, p<.001)  want include explanatory variables multivariate model, just set threshold 1. Dependent: Mortality  Alive (N=925) Died (N=897) (univariable) (multivariable) Treatment Obs 282 (30.5%) 342 (38.1%)    Lev 285 (30.8%) 323 (36%) 0.93 (0.75-1.17, p=.554) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.43-0.67, p<.001) 0.53 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)    Male 489 (52.9%) 463 (51.6%) 0.95 (0.79-1.14, p=.594) 0.95 (0.78-1.15, p=.589) Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.00, p=.305) 1.00 (0.99-1.01, p=.586) Obstruction 764 (82.6%) 706 (78.7%)    Yes 161 (17.4%) 191 (21.3%) 1.28 (1.02-1.62, p=.036) 1.33 (1.04-1.70, p=.023) Perforation 903 (97.6%) 865 (96.4%)    Yes 22 (2.4%) 32 (3.6%) 1.52 (0.88-2.63, p=.137) 1.38 (0.78-2.44, p=.274) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001) 1.21 (1.17-1.25, p<.001)  can perform stepwise backward elimination select variables make final model. Just set final=TRUE. Dependent: Mortality  Alive (N=925) Died (N=897) (univariable) (multivariable) (final) Treatment Obs 282 (30.5%) 342 (38.1%)     Lev 285 (30.8%) 323 (36%) 0.93 (0.75-1.17, p=.554) 0.93 (0.74-1.18, p=.571) 0.94 (0.74-1.18, p=.575)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.43-0.67, p<.001) 0.53 (0.42-0.68, p<.001) 0.54 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)     Male 489 (52.9%) 463 (51.6%) 0.95 (0.79-1.14, p=.594) 0.95 (0.78-1.15, p=.589)  Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.00, p=.305) 1.00 (0.99-1.01, p=.586)  Obstruction 764 (82.6%) 706 (78.7%)     Yes 161 (17.4%) 191 (21.3%) 1.28 (1.02-1.62, p=.036) 1.33 (1.04-1.70, p=.023) 1.34 (1.05-1.71, p=.019) Perforation 903 (97.6%) 865 (96.4%)     Yes 22 (2.4%) 32 (3.6%) 1.52 (0.88-2.63, p=.137) 1.38 (0.78-2.44, p=.274)  Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001) 1.21 (1.17-1.25, p<.001) 1.21 (1.17-1.25, p<.001)","code":"autoReg(fit, uni=TRUE) %>% myft() autoReg(fit, uni=TRUE,threshold=1) %>% myft() autoReg(fit, uni=TRUE,threshold=1, final=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"multiple-imputation-with-mice","dir":"Articles","previous_headings":"Main features > Add univariate models to table and automatic selection of explanatory variables","what":"Multiple imputation with mice()","title":"Getting started","text":"argument imputed=TRUE, autoReg() function make multiple imputed model using mice::mice() function. default, 20 imputations performed. want, can change number imputations m argument. Dependent: Mortality  Alive (N=925) Died (N=897) (multivariable) (imputed) Treatment Obs 282 (30.5%) 342 (38.1%)    Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) 0.53 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)    Male 489 (52.9%) 463 (51.6%) 0.95 (0.78-1.15, p=.589) 0.95 (0.78-1.15, p=.589) Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) 1.00 (0.99-1.01, p=.586) Obstruction 764 (82.6%) 706 (78.7%)    Yes 161 (17.4%) 191 (21.3%) 1.33 (1.04-1.70, p=.023) 1.33 (1.04-1.70, p=.024) Perforation 903 (97.6%) 865 (96.4%)    Yes 22 (2.4%) 32 (3.6%) 1.38 (0.78-2.44, p=.274) 1.38 (0.78-2.44, p=.274) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001) 1.21 (1.17-1.25, p<.001)","code":"autoReg(fit, imputed=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"summarize-regression-model-results-in-a-plot-modelplot","dir":"Articles","previous_headings":"Main features","what":"Summarize regression model results in a plot : modelPlot()","title":"Getting started","text":"can draw plot summarizing model modelPlot()  can make powerpoint file plot using rrtable::plot2pptx(). can summarize models plot. want summarize univariate multivariate model plot, just set uni=TRUE adjust threshold. can decide whether show reference show.ref argument.","code":"x=modelPlot(fit) x plot2pptx(print(x)) Exported plot as Report.pptx modelPlot(fit,uni=TRUE,threshold=1,show.ref=FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"loading-package","dir":"Articles","previous_headings":"","what":"Loading package","title":"Statistical tests in gaze","text":"","code":"library(autoReg) library(dplyr) # for use of pipe operator `%>%`  Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"statistical-tests-for-numeric-variables","dir":"Articles","previous_headings":"","what":"Statistical tests for numeric variables","title":"Statistical tests in gaze","text":"gaze() function autoReg package perform statistical tests compare means /among groups. acs data included moonBook package dataset containing demographic laboratory data 857 patients acute coronary syndrome(ACS). make table comparing baseline characteristics, use gaze() function. can make publication-ready table myft() function can used HTML, pdf, microsoft word powerpoint file. name levels Female (N=287) Male (N=570) p age Mean ± SD 68.7 ± 10.7 60.6 ± 11.2 <.001 cardiogenicShock 275 (95.8%) 530 (93%) .136  Yes 12 (4.2%) 40 (7%)  entry Femoral 119 (41.5%) 193 (33.9%) .035  Radial 168 (58.5%) 377 (66.1%)  Dx NSTEMI 50 (17.4%) 103 (18.1%) .012  STEMI 84 (29.3%) 220 (38.6%)   Unstable Angina 153 (53.3%) 247 (43.3%)  EF Mean ± SD 56.3 ± 10.1 55.6 ± 9.4 .387 height Mean ± SD 153.8 ± 6.2 167.9 ± 6.1 <.001 weight Mean ± SD 57.2 ± 9.3 68.7 ± 10.3 <.001 BMI Mean ± SD 24.2 ± 3.6 24.3 ± 3.2 .611 obesity 194 (67.6%) 373 (65.4%) .580  Yes 93 (32.4%) 197 (34.6%)  TC Mean ± SD 188.9 ± 51.1 183.3 ± 45.9 .124 LDLC Mean ± SD 117.8 ± 41.2 116.0 ± 41.1 .561 HDLC Mean ± SD 39.0 ± 11.5 37.8 ± 10.9 .145 TG Mean ± SD 119.9 ± 76.2 127.9 ± 97.3 .195 DM 173 (60.3%) 380 (66.7%) .077  Yes 114 (39.7%) 190 (33.3%)  HBP 83 (28.9%) 273 (47.9%) <.001  Yes 204 (71.1%) 297 (52.1%)  smoking Ex-smoker 49 (17.1%) 155 (27.2%) <.001  Never 209 (72.8%) 123 (21.6%)   Smoker 29 (10.1%) 292 (51.2%)  can select statistical method comparing means /among groups argument method. Possible values methods : 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1.","code":"data(acs, package=\"moonBook\") gaze(sex~.,data=acs) ————————————————————————————————————————————————————————————————————————   Dependent:sex        levels           Female          Male        p           (N)                             (N=287)        (N=570)            ———————————————————————————————————————————————————————————————————————— age               Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  cardiogenicShock  No                    275 (95.8%)     530 (93%)   .136                    Yes                     12 (4.2%)       40 (7%)         entry             Femoral               119 (41.5%)   193 (33.9%)   .035                    Radial                168 (58.5%)   377 (66.1%)         Dx                NSTEMI                 50 (17.4%)   103 (18.1%)   .012                    STEMI                  84 (29.3%)   220 (38.6%)                           Unstable Angina       153 (53.3%)   247 (43.3%)         EF                Mean ± SD             56.3 ± 10.1    55.6 ± 9.4   .387  height            Mean ± SD             153.8 ± 6.2   167.9 ± 6.1  <.001  weight            Mean ± SD              57.2 ± 9.3   68.7 ± 10.3  <.001  BMI               Mean ± SD              24.2 ± 3.6    24.3 ± 3.2   .611  obesity           No                    194 (67.6%)   373 (65.4%)   .580                    Yes                    93 (32.4%)   197 (34.6%)         TC                Mean ± SD            188.9 ± 51.1  183.3 ± 45.9   .124  LDLC              Mean ± SD            117.8 ± 41.2  116.0 ± 41.1   .561  HDLC              Mean ± SD             39.0 ± 11.5   37.8 ± 10.9   .145  TG                Mean ± SD            119.9 ± 76.2  127.9 ± 97.3   .195  DM                No                    173 (60.3%)   380 (66.7%)   .077                    Yes                   114 (39.7%)   190 (33.3%)         HBP               No                     83 (28.9%)   273 (47.9%)  <.001                    Yes                   204 (71.1%)   297 (52.1%)         smoking           Ex-smoker              49 (17.1%)   155 (27.2%)  <.001                    Never                 209 (72.8%)   123 (21.6%)                           Smoker                 29 (10.1%)   292 (51.2%)         ———————————————————————————————————————————————————————————————————————— gaze(sex~.,data=acs) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"comparison-of-two-groups","dir":"Articles","previous_headings":"Statistical tests for numeric variables","what":"1. Comparison of two groups","title":"Statistical tests in gaze","text":"Ejection fraction(EF) refers well left ventricle (right ventricle) pumps blood heart beat. normal values approximately 56-78%.","code":""},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"parametric-method","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 1. Comparison of two groups","what":"(1) Parametric method","title":"Statistical tests in gaze","text":"want compare EF means males females acs data parametric method, compare variances two samples. variances two groups equal, pooled variance used estimate variance. Otherwise Welch (Satterthwaite) approximation degrees freedom used. result var.test significant. reject null hypothesis :\\(H_0 : true\\  ratio\\  \\  variance\\ \\  equal\\  \\  0\\). result, perform t-test using pooled variance. result t.test significant(\\(p=.387\\)). p value table result test. Alternatively, result var.test() significant, perform t.test Welch approximation degrees freedom.","code":"gaze(sex~EF,data=acs)  # default: method=1  ——————————————————————————————————————————————————————————————  Dependent:sex   levels        Female          Male       p          (N)                     (N=287)        (N=570)           —————————————————————————————————————————————————————————————— EF             Mean ± SD       56.3 ± 10.1    55.6 ± 9.4  .387  —————————————————————————————————————————————————————————————— var.test(EF~sex,data=acs)  # F Test to Compare Two Variances      F test to compare two variances  data:  EF by sex F = 1.144, num df = 239, denom df = 482, p-value = 0.2214 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval:  0.9221264 1.4309581 sample estimates: ratio of variances            1.143983 t.test(EF~sex,data=acs,var.equal=TRUE)      Two Sample t-test  data:  EF by sex t = 0.86514, df = 721, p-value = 0.3872 alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 95 percent confidence interval:  -0.8346856  2.1498875 sample estimates: mean in group Female   mean in group Male              56.27375             55.61615 t.test(EF~sex,data=acs) # default value: var.equal=FALSE      Welch Two Sample t-test  data:  EF by sex t = 0.8458, df = 449.65, p-value = 0.3981 alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 95 percent confidence interval:  -0.8703566  2.1855585 sample estimates: mean in group Female   mean in group Male              56.27375             55.61615"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"non-parametric-method","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 1. Comparison of two groups","what":"(2) Non-parametric method","title":"Statistical tests in gaze","text":"choose method=2, Wilcoxon rank sum test(also known Mann-Whitney test) performed.","code":"gaze(sex~EF,data=acs, method=2)  # method=2 forces analysis as continuous non-normal  —————————————————————————————————————————————————————————————————————————————  Dependent:sex     levels           Female                Male           p          (N)                           (N=287)              (N=570)              ————————————————————————————————————————————————————————————————————————————— EF             Median (IQR)    59.2 (51.4 to 63.1)  57.3 (50.0 to 61.8)  .053  ————————————————————————————————————————————————————————————————————————————— wilcox.test(EF~sex,data=acs)      Wilcoxon rank sum test with continuity correction  data:  EF by sex W = 63078, p-value = 0.05295 alternative hypothesis: true location shift is not equal to 0"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"performs-test-for-normality","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 1. Comparison of two groups","what":"(3) Performs test for normality","title":"Statistical tests in gaze","text":"method=3, perform Shapiro-Wilk test Anderson-Daring test normality(nortest::ad.test) decide normal non-normal. number cases 5000, Shapiro-Wilk test performed. 5000, Anderson-Daring test normality performed. result shapiro.test() significant. perform Wilcoxon rank sum test.","code":"gaze(sex~EF,data=acs, method=3)  —————————————————————————————————————————————————————————————————————————————  Dependent:sex     levels           Female                Male           p          (N)                           (N=287)              (N=570)              ————————————————————————————————————————————————————————————————————————————— EF             Median (IQR)    59.2 (51.4 to 63.1)  57.3 (50.0 to 61.8)  .053  ————————————————————————————————————————————————————————————————————————————— nrow(acs) [1] 857 out=lm(age~sex,data=acs) shapiro.test(resid(out))      Shapiro-Wilk normality test  data:  resid(out) W = 0.99343, p-value = 0.000808"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"comparison-of-three-or-more-groups","dir":"Articles","previous_headings":"Statistical tests for numeric variables","what":"2. Comparison of three or more groups","title":"Statistical tests in gaze","text":"‘Dx’ column acs data diagnosis. three groups : Unstable Angina, NSTEMI STEMI. can make table summarizing baseline characteristics among three groups. parametric method comparing means three groups ANOVA, whereas non-parametric method Kruskal-Wallis rank sum test. name levels NSTEMI (N=153) STEMI (N=304) Unstable Angina (N=400) p age Mean ± SD 64.3 ± 12.3 62.1 ± 12.1 63.8 ± 11.0 .073 sex Female 50 (32.7%) 84 (27.6%) 153 (38.2%) .012  Male 103 (67.3%) 220 (72.4%) 247 (61.8%)  cardiogenicShock 149 (97.4%) 256 (84.2%) 400 (100%) <.001  Yes 4 (2.6%) 48 (15.8%) 0 (0%)  entry Femoral 58 (37.9%) 133 (43.8%) 121 (30.2%) .001  Radial 95 (62.1%) 171 (56.2%) 279 (69.8%)  EF Mean ± SD 55.0 ± 9.3 52.4 ± 9.5 59.2 ± 8.7 <.001 height Mean ± SD 163.3 ± 8.2 165.1 ± 8.2 161.7 ± 9.7 <.001 weight Mean ± SD 64.3 ± 10.2 65.7 ± 11.6 64.5 ± 11.6 .361 BMI Mean ± SD 24.1 ± 3.2 24.0 ± 3.3 24.6 ± 3.4 .064 obesity 106 (69.3%) 209 (68.8%) 252 (63%) .186  Yes 47 (30.7%) 95 (31.2%) 148 (37%)  TC Mean ± SD 193.7 ± 53.6 183.2 ± 43.4 183.5 ± 48.3 .057 LDLC Mean ± SD 126.1 ± 44.7 116.7 ± 39.5 112.9 ± 40.4 .004 HDLC Mean ± SD 38.9 ± 11.9 38.5 ± 11.0 37.8 ± 10.9 .501 TG Mean ± SD 130.1 ± 88.5 106.5 ± 72.0 137.4 ± 101.6 <.001 DM 96 (62.7%) 208 (68.4%) 249 (62.2%) .209  Yes 57 (37.3%) 96 (31.6%) 151 (37.8%)  HBP 62 (40.5%) 150 (49.3%) 144 (36%) .002  Yes 91 (59.5%) 154 (50.7%) 256 (64%)  smoking Ex-smoker 42 (27.5%) 66 (21.7%) 96 (24%) <.001  Never 50 (32.7%) 97 (31.9%) 185 (46.2%)   Smoker 61 (39.9%) 141 (46.4%) 119 (29.8%)","code":"gaze(Dx~.,data=acs) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"parametric-method-1","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 2. Comparison of three or more groups","what":"(1) Parametric method","title":"Statistical tests in gaze","text":"Now focus comparing means age among three groups. can perform ANOVA follows analysis variance table can get p value 0.073.","code":"gaze(Dx~age,data=acs)  # default : method=1 ———————————————————————————————————————————————————————————————————————————————————————  Dependent:Dx   levels        NSTEMI          STEMI          Unstable Angina       p         (N)                     (N=153)         (N=304)             (N=400)                ——————————————————————————————————————————————————————————————————————————————————————— age           Mean ± SD       64.3 ± 12.3    62.1 ± 12.1              63.8 ± 11.0  .073  ——————————————————————————————————————————————————————————————————————————————————————— out=lm(age~Dx,data=acs) anova(out) Analysis of Variance Table  Response: age            Df Sum Sq Mean Sq F value  Pr(>F)   Dx          2    715  357.62   2.624 0.07309 . Residuals 854 116389  136.29                   --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"non-parametric-method-1","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 2. Comparison of three or more groups","what":"(2) Non-parametric method","title":"Statistical tests in gaze","text":"name levels NSTEMI (N=153) STEMI (N=304) Unstable Angina (N=400) p age Median (IQR) 65.0 (55.0 75.0) 62.0 (53.0 71.0) 65.0 (56.0 72.0) .109 p value table result Kruskal-Wallis rank sum test.","code":"gaze(Dx~age,data=acs, method=2) %>% myft() kruskal.test(age~Dx,data=acs)      Kruskal-Wallis rank sum test  data:  age by Dx Kruskal-Wallis chi-squared = 4.424, df = 2, p-value = 0.1095 if(sum(result)<=5000) out4=shapiro.test(resid(out3))       else out4=nortest::ad.test(resid(out3))       out5=kruskal.test(as.numeric(x),factor(y))       p=c(out4$p.value,anova(out3)$Pr[1],out5$p.value)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"performs-test-for-normality-1","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 2. Comparison of three or more groups","what":"(3) Performs test for normality","title":"Statistical tests in gaze","text":"name levels NSTEMI (N=153) STEMI (N=304) Unstable Angina (N=400) p age Median (IQR) 65.0 (55.0 75.0) 62.0 (53.0 71.0) 65.0 (56.0 72.0) .109 method=3, gaze() performs normality test. Since result normality test significant(\\(p<0.001\\)), perform Kruskal-Wallis test.","code":"gaze(Dx~age,data=acs, method=3) %>% myft() out=lm(age~Dx,data=acs) shapiro.test(resid(out))      Shapiro-Wilk normality test  data:  resid(out) W = 0.99102, p-value = 4.413e-05"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"statistical-tests-for-categorical-variables","dir":"Articles","previous_headings":"","what":"Statistical tests for categorical variables","title":"Statistical tests in gaze","text":"statistical methods categorical variables gaze() follows: 0 : Perform chi-squared test first. warning present, perform Fisher’s exact test 1 : Perform chi-squared test without continuity correction 2 : Perform chi-squared test continuity correction (default value) 3 : perform Fisher’s exact test 4 : perform test trend proportions can choose setting catMethod argument(default value 2).","code":""},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"default-method-chi-squared-test-with-continuity-correction","dir":"Articles","previous_headings":"Statistical tests for categorical variables","what":"(1) Default method : chi-squared test with continuity correction","title":"Statistical tests in gaze","text":"default method categorical variables chi-squared test Yates’s correction continuity(https://en.wikipedia.org/wiki/Yates%27s_correction_for_continuity). can get result following R code:","code":"gaze(sex~Dx,data=acs) # default : catMethod=2 ————————————————————————————————————————————————————————————————————  Dependent:sex      levels           Female          Male       p          (N)                           (N=287)        (N=570)           ———————————————————————————————————————————————————————————————————— Dx             NSTEMI                 50 (17.4%)   103 (18.1%)  .012                 STEMI                  84 (29.3%)   220 (38.6%)                       Unstable Angina       153 (53.3%)   247 (43.3%)        ———————————————————————————————————————————————————————————————————— result=table(acs$Dx,acs$sex) chisq.test(result)  # default: correct = TRUE      Pearson's Chi-squared test  data:  result X-squared = 8.7983, df = 2, p-value = 0.01229"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"chi-squared-test-without-continuity-correction","dir":"Articles","previous_headings":"Statistical tests for categorical variables","what":"(2) Chi-squared test without continuity correction","title":"Statistical tests in gaze","text":"want perform chi-squared test without continuity correction, just set catMethod=1. default method SPSS. can get result following R code:","code":"gaze(sex~Dx,data=acs, catMethod=1) # Perform chisq.test without continuity correction ————————————————————————————————————————————————————————————————————  Dependent:sex      levels           Female          Male       p          (N)                           (N=287)        (N=570)           ———————————————————————————————————————————————————————————————————— Dx             NSTEMI                 50 (17.4%)   103 (18.1%)  .012                 STEMI                  84 (29.3%)   220 (38.6%)                       Unstable Angina       153 (53.3%)   247 (43.3%)        ———————————————————————————————————————————————————————————————————— result=table(acs$Dx,acs$sex) chisq.test(result, correct=FALSE)  # without continuity correction      Pearson's Chi-squared test  data:  result X-squared = 8.7983, df = 2, p-value = 0.01229"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"fishers-exact-test","dir":"Articles","previous_headings":"Statistical tests for categorical variables","what":"(3) Fisher’s exact test","title":"Statistical tests in gaze","text":"want perform Fisher’s exact test, set catMethod=3. can get result following R code:","code":"gaze(sex~Dx,data=acs, catMethod=3) # Perform Fisher's exact test ————————————————————————————————————————————————————————————————————  Dependent:sex      levels           Female          Male       p          (N)                           (N=287)        (N=570)           ———————————————————————————————————————————————————————————————————— Dx             NSTEMI                 50 (17.4%)   103 (18.1%)  .012                 STEMI                  84 (29.3%)   220 (38.6%)                       Unstable Angina       153 (53.3%)   247 (43.3%)        ———————————————————————————————————————————————————————————————————— result=table(acs$Dx,acs$sex) fisher.test(result)        Fisher's Exact Test for Count Data  data:  result p-value = 0.01191 alternative hypothesis: two.sided"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"test-for-trend-in-proportions","dir":"Articles","previous_headings":"Statistical tests for categorical variables","what":"(4) Test for trend in proportions","title":"Statistical tests in gaze","text":"want perform test trend proportions, set catMethod=4. can perform test grouping variable two group(male female example). can get result following R code:","code":"gaze(sex~Dx,data=acs, catMethod=4) # Perform test for trend in proportions ————————————————————————————————————————————————————————————————————  Dependent:sex      levels           Female          Male       p          (N)                           (N=287)        (N=570)           ———————————————————————————————————————————————————————————————————— Dx             NSTEMI                 50 (17.4%)   103 (18.1%)  .050                 STEMI                  84 (29.3%)   220 (38.6%)                       Unstable Angina       153 (53.3%)   247 (43.3%)        ———————————————————————————————————————————————————————————————————— result=table(acs$Dx,acs$sex) result                                     Female Male   NSTEMI              50  103   STEMI               84  220   Unstable Angina    153  247 prop.trend.test(result[,2],rowSums(result))       Chi-squared Test for Trend in Proportions  data:  result[, 2] out of rowSums(result) ,  using scores: 1 2 3 X-squared = 3.8332, df = 1, p-value = 0.05025"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"make-a-combining-table-with-two-or-more-grouping-variables","dir":"Articles","previous_headings":"","what":"Make a combining table with two or more grouping variables","title":"Statistical tests in gaze","text":"can make combining table two grouping variables. sex (N) Female (N=287) Male (N=570) name levels NSTEMI (N=50) STEMI (N=84) Unstable Angina (N=153) p NSTEMI (N=103) STEMI (N=220) Unstable Angina (N=247) p age Mean ± SD 70.9 ± 11.4 69.1 ± 10.4 67.7 ± 10.7 .177 61.1 ± 11.6 59.4 ± 11.7 61.4 ± 10.6 .133 cardiogenicShock 49 (98%) 73 (86.9%) 153 (100%) <.001 100 (97.1%) 183 (83.2%) 247 (100%) <.001  Yes 1 (2%) 11 (13.1%) 0 (0%)  3 (2.9%) 37 (16.8%) 0 (0%)  entry Femoral 22 (44%) 45 (53.6%) 52 (34%) .013 36 (35%) 88 (40%) 69 (27.9%) .022  Radial 28 (56%) 39 (46.4%) 101 (66%)  67 (65%) 132 (60%) 178 (72.1%)  EF Mean ± SD 54.8 ± 9.1 52.3 ± 10.9 59.4 ± 8.8 <.001 55.1 ± 9.4 52.4 ± 8.9 59.1 ± 8.7 <.001 height Mean ± SD 154.2 ± 5.1 155.7 ± 5.4 152.6 ± 6.7 .002 167.5 ± 5.7 168.7 ± 6.0 167.3 ± 6.4 .055 weight Mean ± SD 57.2 ± 10.3 57.4 ± 9.0 57.1 ± 9.1 .978 67.5 ± 8.4 68.8 ± 10.9 69.0 ± 10.6 .479 BMI Mean ± SD 24.1 ± 4.3 23.6 ± 3.2 24.5 ± 3.5 .215 24.1 ± 2.6 24.1 ± 3.4 24.6 ± 3.4 .205 obesity 35 (70%) 60 (71.4%) 99 (64.7%) .528 71 (68.9%) 149 (67.7%) 153 (61.9%) .301  Yes 15 (30%) 24 (28.6%) 54 (35.3%)  32 (31.1%) 71 (32.3%) 94 (38.1%)  TC Mean ± SD 196.3 ± 52.7 180.7 ± 45.7 191.1 ± 53.1 .192 192.6 ± 54.3 184.1 ± 42.6 178.7 ± 44.6 .036 LDLC Mean ± SD 127.7 ± 39.5 111.0 ± 40.0 118.3 ± 41.8 .088 125.4 ± 47.1 118.9 ± 39.1 109.5 ± 39.2 .002 HDLC Mean ± SD 40.1 ± 13.8 39.5 ± 11.2 38.5 ± 10.8 .627 38.4 ± 10.9 38.1 ± 10.9 37.4 ± 10.9 .655 TG Mean ± SD 112.5 ± 51.1 112.3 ± 87.2 126.3 ± 76.0 .316 138.0 ± 100.2 104.3 ± 65.5 144.3 ± 114.2 <.001 DM 25 (50%) 54 (64.3%) 94 (61.4%) .240 71 (68.9%) 154 (70%) 155 (62.8%) .219  Yes 25 (50%) 30 (35.7%) 59 (38.6%)  32 (31.1%) 66 (30%) 92 (37.2%)  HBP 19 (38%) 28 (33.3%) 36 (23.5%) .084 43 (41.7%) 122 (55.5%) 108 (43.7%) .016  Yes 31 (62%) 56 (66.7%) 117 (76.5%)  60 (58.3%) 98 (44.5%) 139 (56.3%)  smoking Ex-smoker 8 (16%) 13 (15.5%) 28 (18.3%) .184 34 (33%) 53 (24.1%) 68 (27.5%) .002  Never 37 (74%) 57 (67.9%) 115 (75.2%)  13 (12.6%) 40 (18.2%) 70 (28.3%)   Smoker 5 (10%) 14 (16.7%) 10 (6.5%)  56 (54.4%) 127 (57.7%) 109 (44.1%)  can select whether show total column. sex (N) Female (N=287) Male (N=570) name levels NSTEMI (N=50) STEMI (N=84) Unstable Angina (N=153) total (N=287) p NSTEMI (N=103) STEMI (N=220) Unstable Angina (N=247) total (N=570) p age Mean ± SD 70.9 ± 11.4 69.1 ± 10.4 67.7 ± 10.7 68.7 ± 10.7 .177 61.1 ± 11.6 59.4 ± 11.7 61.4 ± 10.6 60.6 ± 11.2 .133 cardiogenicShock 49 (98%) 73 (86.9%) 153 (100%) 275 (95.8%) <.001 100 (97.1%) 183 (83.2%) 247 (100%) 530 (93%) <.001  Yes 1 (2%) 11 (13.1%) 0 (0%) 12 (4.2%)  3 (2.9%) 37 (16.8%) 0 (0%) 40 (7%)  entry Femoral 22 (44%) 45 (53.6%) 52 (34%) 119 (41.5%) .013 36 (35%) 88 (40%) 69 (27.9%) 193 (33.9%) .022  Radial 28 (56%) 39 (46.4%) 101 (66%) 168 (58.5%)  67 (65%) 132 (60%) 178 (72.1%) 377 (66.1%)  EF Mean ± SD 54.8 ± 9.1 52.3 ± 10.9 59.4 ± 8.8 56.3 ± 10.1 <.001 55.1 ± 9.4 52.4 ± 8.9 59.1 ± 8.7 55.6 ± 9.4 <.001 height Mean ± SD 154.2 ± 5.1 155.7 ± 5.4 152.6 ± 6.7 153.8 ± 6.2 .002 167.5 ± 5.7 168.7 ± 6.0 167.3 ± 6.4 167.9 ± 6.1 .055 weight Mean ± SD 57.2 ± 10.3 57.4 ± 9.0 57.1 ± 9.1 57.2 ± 9.3 .978 67.5 ± 8.4 68.8 ± 10.9 69.0 ± 10.6 68.7 ± 10.3 .479 BMI Mean ± SD 24.1 ± 4.3 23.6 ± 3.2 24.5 ± 3.5 24.2 ± 3.6 .215 24.1 ± 2.6 24.1 ± 3.4 24.6 ± 3.4 24.3 ± 3.2 .205 obesity 35 (70%) 60 (71.4%) 99 (64.7%) 194 (67.6%) .528 71 (68.9%) 149 (67.7%) 153 (61.9%) 373 (65.4%) .301  Yes 15 (30%) 24 (28.6%) 54 (35.3%) 93 (32.4%)  32 (31.1%) 71 (32.3%) 94 (38.1%) 197 (34.6%)  TC Mean ± SD 196.3 ± 52.7 180.7 ± 45.7 191.1 ± 53.1 188.9 ± 51.1 .192 192.6 ± 54.3 184.1 ± 42.6 178.7 ± 44.6 183.3 ± 45.9 .036 LDLC Mean ± SD 127.7 ± 39.5 111.0 ± 40.0 118.3 ± 41.8 117.8 ± 41.2 .088 125.4 ± 47.1 118.9 ± 39.1 109.5 ± 39.2 116.0 ± 41.1 .002 HDLC Mean ± SD 40.1 ± 13.8 39.5 ± 11.2 38.5 ± 10.8 39.0 ± 11.5 .627 38.4 ± 10.9 38.1 ± 10.9 37.4 ± 10.9 37.8 ± 10.9 .655 TG Mean ± SD 112.5 ± 51.1 112.3 ± 87.2 126.3 ± 76.0 119.9 ± 76.2 .316 138.0 ± 100.2 104.3 ± 65.5 144.3 ± 114.2 127.9 ± 97.3 <.001 DM 25 (50%) 54 (64.3%) 94 (61.4%) 173 (60.3%) .240 71 (68.9%) 154 (70%) 155 (62.8%) 380 (66.7%) .219  Yes 25 (50%) 30 (35.7%) 59 (38.6%) 114 (39.7%)  32 (31.1%) 66 (30%) 92 (37.2%) 190 (33.3%)  HBP 19 (38%) 28 (33.3%) 36 (23.5%) 83 (28.9%) .084 43 (41.7%) 122 (55.5%) 108 (43.7%) 273 (47.9%) .016  Yes 31 (62%) 56 (66.7%) 117 (76.5%) 204 (71.1%)  60 (58.3%) 98 (44.5%) 139 (56.3%) 297 (52.1%)  smoking Ex-smoker 8 (16%) 13 (15.5%) 28 (18.3%) 49 (17.1%) .184 34 (33%) 53 (24.1%) 68 (27.5%) 155 (27.2%) .002  Never 37 (74%) 57 (67.9%) 115 (75.2%) 209 (72.8%)  13 (12.6%) 40 (18.2%) 70 (28.3%) 123 (21.6%)   Smoker 5 (10%) 14 (16.7%) 10 (6.5%) 29 (10.1%)  56 (54.4%) 127 (57.7%) 109 (44.1%) 292 (51.2%)","code":"gaze(sex+Dx~.,data=acs) %>% myft() gaze(sex+Dx~.,data=acs,show.total=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"missing-data-analysis","dir":"Articles","previous_headings":"","what":"Missing data analysis","title":"Statistical tests in gaze","text":"can use gaze() missing data analysis. Set missing argument TRUE. Dependent:EF levels missing (N=723) Missing (N=134) p age Mean ± SD 63.1 ± 11.9 64.3 ± 10.6 .303 sex Female 240 (33.2%) 47 (35.1%) .746  Male 483 (66.8%) 87 (64.9%)  cardiogenicShock 686 (94.9%) 119 (88.8%) .012  Yes 37 (5.1%) 15 (11.2%)  entry Femoral 262 (36.2%) 50 (37.3%) .889  Radial 461 (63.8%) 84 (62.7%)  Dx NSTEMI 139 (19.2%) 14 (10.4%) <.001  STEMI 272 (37.6%) 32 (23.9%)   Unstable Angina 312 (43.2%) 88 (65.7%)  height Mean ± SD 163.2 ± 9.1 163.1 ± 9.3 .908 weight Mean ± SD 64.7 ± 11.4 66.3 ± 10.7 .251 BMI Mean ± SD 24.2 ± 3.4 24.9 ± 3.1 .093 obesity 465 (64.3%) 102 (76.1%) .011  Yes 258 (35.7%) 32 (23.9%)  TC Mean ± SD 186.1 ± 47.5 179.9 ± 49.0 .183 LDLC Mean ± SD 117.5 ± 40.5 111.1 ± 44.3 .110 HDLC Mean ± SD 38.5 ± 11.0 36.9 ± 11.6 .135 TG Mean ± SD 123.7 ± 87.2 134.1 ± 108.9 .309 DM 462 (63.9%) 91 (67.9%) .428  Yes 261 (36.1%) 43 (32.1%)  HBP 303 (41.9%) 53 (39.6%) .680  Yes 420 (58.1%) 81 (60.4%)  smoking Ex-smoker 172 (23.8%) 32 (23.9%) .033  Never 268 (37.1%) 64 (47.8%)   Smoker 283 (39.1%) 38 (28.4%)  missing data, show table summarizing missing numbers. name levels N stats n age Mean ± SD 857 63.3 ± 11.7 857 cardiogenicShock 857 805 (93.9%) 805  Yes  52 (6.1%) 52 entry Femoral 857 312 (36.4%) 312  Radial  545 (63.6%) 545 Dx NSTEMI 857 153 (17.9%) 153  STEMI  304 (35.5%) 304  Unstable Angina  400 (46.7%) 400 EF Mean ± SD 723 55.8 ± 9.6 723 height Mean ± SD 764 163.2 ± 9.1 764 weight Mean ± SD 766 64.8 ± 11.4 766 BMI Mean ± SD 764 24.3 ± 3.3 764 obesity 857 567 (66.2%) 567  Yes  290 (33.8%) 290 TC Mean ± SD 834 185.2 ± 47.8 834 LDLC Mean ± SD 833 116.6 ± 41.1 833 HDLC Mean ± SD 834 38.2 ± 11.1 834 TG Mean ± SD 842 125.2 ± 90.9 842 DM 857 553 (64.5%) 553  Yes  304 (35.5%) 304 HBP 857 356 (41.5%) 356  Yes  501 (58.5%) 501 smoking Ex-smoker 857 204 (23.8%) 204  Never  332 (38.7%) 332  Smoker  321 (37.5%) 321","code":"gaze(EF~.,data=acs, missing=TRUE) %>% myft() gaze(sex~.,data=acs,missing=TRUE) %>% myft() There is no missing data in column 'sex'"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"what-is-survival-analysis","dir":"Articles","previous_headings":"","what":"What is survival analysis ?","title":"Survival Analysis","text":"Survival analysis study survival times factors influence . Types studies survival outcomes include clinical trials, prospective retrospective observational studies, animal experiments. Examples survival times include time birth death, time entry clinical trial death disease progression, time birth development breast cancer(, age onset). survival endpoint can also refer positive event. example, one might interested time entry clinical trial tumor response. Package autoReg provides number functions make analyses easy perform. writing package autoReg vignette, inspired package finalfit Ewen Harrison.","code":""},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Survival Analysis","text":"can install autoReg package github.","code":"#install.packages(\"devtools\") devtools::install_github(\"cardiomoon/autoReg\")"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"load-package","dir":"Articles","previous_headings":"","what":"Load package","title":"Survival Analysis","text":"load package, use library() function.","code":"library(autoReg) library(survival) library(dplyr)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"data-melanoma","dir":"Articles","previous_headings":"","what":"Data melanoma","title":"Survival Analysis","text":"data melanoma included boot package data 205 patients malignant melanoma. patient tumor removed surgery Department Plastic Surgery, University Hospital Odense, Denmark period 1962 1977. surgery consisted complete removal tumor together 2.5cm surrounding skin. Among measurements taken thickness tumor whether ulcerated . thought important prognostic variables patients thick /ulcerated tumor increased chance death melanoma. Patients followed end 1977. patient status end study coded status variable. 1 indicates died melanoma 2 indicates still alive 3 indicates died causes unrelated melanoma. three options coding . Overall survival: considering -cause mortality, comparing 2 (alive) 1 (died melanoma)/3 (died ) logical expression status!=2 (e.g. status equal 2) Cause-specific survival: considering disease-specific mortality comparing 2 (alive)/3 (died ) 1 (died melanoma) status==1 (e.g. status equal 1 ) Competing risks: comparing 2 (alive) 1 (died melanoma) accounting 3 (died ); make new variable statusCRR sex variable melanoma coded 0=female 1=male. ulcer variable coded 1=present 2= absent. possible use variables analysis, change variables factor proper labels(just aesthetic purpose).","code":"data(melanoma,package=\"boot\") gaze(melanoma) ———————————————————————————————————————    name      levels         stats       ——————————————————————————————————————— time       Mean ± SD    2152.8 ± 1122.1  status     Mean ± SD          1.8 ± 0.6  sex        Mean ± SD          0.4 ± 0.5  age        Mean ± SD        52.5 ± 16.7  year       Mean ± SD       1969.9 ± 2.6  thickness  Mean ± SD          2.9 ± 3.0  ulcer      Mean ± SD          0.4 ± 0.5  ——————————————————————————————————————— melanoma$status1 = ifelse(melanoma$status==1,1,ifelse(melanoma$status==2,0,2)) melanoma$statusCRR=factor(melanoma$status1,labels=c(\"survived\",\"melanoma\",\"other cause\")) melanoma$sex=factor(melanoma$sex,labels=c(\"Female\",\"Male\")) melanoma$ulcer=factor(melanoma$ulcer,labels=c(\"Absent\",\"Present\")) gaze(melanoma,show.n=TRUE) ———————————————————————————————————————————————————    name       levels      N        stats        n   ——————————————————————————————————————————————————— time       Mean ± SD      205  2152.8 ± 1122.1  205  status     Mean ± SD      205        1.8 ± 0.6  205  sex        Female         205      126 (61.5%)  126             Male                     79 (38.5%)   79  age        Mean ± SD      205      52.5 ± 16.7  205  year       Mean ± SD      205     1969.9 ± 2.6  205  thickness  Mean ± SD      205        2.9 ± 3.0  205  ulcer      Absent         205      115 (56.1%)  115             Present                  90 (43.9%)   90  status1    Mean ± SD      205        0.4 ± 0.6  205  statusCRR  survived       205      134 (65.4%)  134             melanoma                 57 (27.8%)   57             other cause               14 (6.8%)   14  ———————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"survival-analysis-for-whole-group","dir":"Articles","previous_headings":"","what":"Survival analysis for whole group","title":"Survival Analysis","text":"can estimate survival whole group survfit() function survival package.","code":"fit=survfit(Surv(time/365.25,status!=2)~1,data=melanoma) fit Call: survfit(formula = Surv(time/365.25, status != 2) ~ 1, data = melanoma)         n events median 0.95LCL 0.95UCL [1,] 205     71     NA    9.14      NA"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"life-table","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Life table","title":"Survival Analysis","text":"life table tabular form KM plot. shows survival proportion, together confidence limits.","code":"summary(fit,times=0:5) Call: survfit(formula = Surv(time/365.25, status != 2) ~ 1, data = melanoma)   time n.risk n.event survival std.err lower 95% CI upper 95% CI     0    205       0    1.000  0.0000        1.000        1.000     1    193      11    0.946  0.0158        0.916        0.978     2    183      10    0.897  0.0213        0.856        0.940     3    167      16    0.819  0.0270        0.767        0.873     4    160       7    0.784  0.0288        0.730        0.843     5    122      10    0.732  0.0313        0.673        0.796"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"kaplan-meier-plot","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Kaplan-Meier Plot","title":"Survival Analysis","text":"can plot survival curves using ggsurvplot() survminer package. numerous options available help page.","code":"library(survminer) ggsurvplot(fit)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"cox-proportional-hazard-model","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Cox-proportional hazard model","title":"Survival Analysis","text":"coxph() function survival package fits Cox proportional hazards regression model. Time dependent variables, time dependent strata, multiple events per subject, extensions incorporated using counting process formulation Andersen Gill. can summarize results coxph() autoReg() function. list univariable model, can select potentially significant explanatory variable(p value 0.2 example). autoReg() function automatically select univariable model given p value threshold(default value 0.2). want use explanatory variables multivariable model, set threshold 1. Dependent: Surv(time, status != 2) HR (univariable) HR (multivariable) age Mean ± SD 52.5 ± 16.7 1.03 (1.01-1.05, p<.001) 1.02 (1.01-1.04, p=.005) sex Female 126 (61.5%)    Male 79 (38.5%) 1.93 (1.21-3.07, p=.006) 1.51 (0.94-2.42, p=.085) thickness Mean ± SD 2.9 ± 3.0 1.16 (1.10-1.23, p<.001) 1.10 (1.03-1.18, p=.004) ulcer Absent 115 (56.1%)    Present 90 (43.9%) 3.52 (2.14-5.80, p<.001) 2.59 (1.53-4.38, p<.001) n=205, events=71, Likelihood ratio test=47.89 4 df(p<.001) want, can decorate table follows: Dependent: Surv(time, status != 2) HR (univariable) HR (multivariable) Age(years) Mean ± SD 52.5 ± 16.7 1.03 (1.01-1.05, p<.001) 1.02 (1.01-1.04, p=.005) Sex Female 126 (61.5%)    Male 79 (38.5%) 1.93 (1.21-3.07, p=.006) 1.51 (0.94-2.42, p=.085) Tumor thickness (mm) Mean ± SD 2.9 ± 3.0 1.16 (1.10-1.23, p<.001) 1.10 (1.03-1.18, p=.004) Ulceration Absent 115 (56.1%)    Present 90 (43.9%) 3.52 (2.14-5.80, p<.001) 2.59 (1.53-4.38, p<.001) n=205, events=71, Likelihood ratio test=47.89 4 df(p<.001)","code":"fit=coxph(Surv(time,status!=2)~age+sex+thickness+ulcer,data=melanoma) x=autoReg(fit,uni=TRUE,threshold=1) x %>% myft() x$name=c(\"Age(years)\",\"Sex\",\"\",\"Tumor thickness (mm)\",\"Ulceration\",\"\") names(x)[1]=\"Overall Survival\" x %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"hazard-ratio-plot-modelplot","dir":"Articles","previous_headings":"Survival analysis for whole group > Cox-proportional hazard model","what":"Hazard ratio plot : modelPlot()","title":"Survival Analysis","text":"can draw hazard ratio plot  want add another model summary table, addFitSummary() can . Dependent: Surv(time, status != 2) HR (univariable) HR (multivariable) HR (final) Age(years) Mean ± SD 52.5 ± 16.7 1.03 (1.01-1.05, p<.001) 1.02 (1.01-1.04, p=.005) 1.02 (1.01-1.04, p=.003) Sex Female 126 (61.5%)     Male 79 (38.5%) 1.93 (1.21-3.07, p=.006) 1.51 (0.94-2.42, p=.085)  Tumor thickness (mm) Mean ± SD 2.9 ± 3.0 1.16 (1.10-1.23, p<.001) 1.10 (1.03-1.18, p=.004) 1.10 (1.03-1.18, p=.003) Ulceration Absent 115 (56.1%)     Present 90 (43.9%) 3.52 (2.14-5.80, p<.001) 2.59 (1.53-4.38, p<.001) 2.72 (1.61-4.57, p<.001) n=205, events=71, Likelihood ratio test=47.89 4 df(p<.001)","code":"modelPlot(fit,uni=TRUE, threshold=1,show.ref=FALSE) final=coxph(Surv(time,status!=2)~age+thickness+ulcer,data=melanoma) x=x %>% addFitSummary(final,statsname=\"HR (final)\")  x %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"testing-for-proportional-hazards","dir":"Articles","previous_headings":"Survival analysis for whole group > Cox-proportional hazard model","what":"Testing for proportional hazards","title":"Survival Analysis","text":"assumption Cox proportional hazard regression hazard (think risk) associated particular variable change time. example, magnitude increase risk death associated tumor ulceration early post-operative period later years? cox.zph() function survival package allows us test assumption variable. plot scaled Schoenfeld residuals horizontal line. included hypothesis test identifies whether gradient differs zero variable. variable significantly differs zero 5% significance level.","code":"result=cox.zph(fit) result           chisq df     p age       1.610  1 0.205 sex       0.478  1 0.489 thickness 3.124  1 0.077 ulcer     4.633  1 0.031 GLOBAL    7.706  4 0.103 survminer::ggcoxzph(result)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"disease-specific-survival","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Disease-specific survival","title":"Survival Analysis","text":"can analyze disease specific survival make publication-ready table. Dependent: Surv(time, status == 1) HR (univariable) HR (multivariable) age Mean ± SD 52.5 ± 16.7 1.02 (1.00-1.04, p=.028) 1.01 (1.00-1.03, p=.141) sex Female 126 (61.5%)    Male 79 (38.5%) 1.94 (1.15-3.26, p=.013) 1.54 (0.91-2.60, p=.106) thickness Mean ± SD 2.9 ± 3.0 1.17 (1.10-1.25, p<.001) 1.12 (1.04-1.20, p=.004) ulcer Absent 115 (56.1%)    Present 90 (43.9%) 4.36 (2.44-7.77, p<.001) 3.20 (1.75-5.88, p<.001) n=205, events=57, Likelihood ratio test=41.62 4 df(p<.001)","code":"fit=coxph(Surv(time,status==1)~age+sex+thickness+ulcer,data=melanoma) autoReg(fit,uni=TRUE,threshold=1) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"competing-risk-regression","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Competing risk regression","title":"Survival Analysis","text":"Competing-risks regression alternative cox proportional regression. can useful outcome interest may able occur simply something else (like death) happened first. instance, example obviously possible patient die melanoma died another disease first. simply looking cause-specific mortality (deaths melanoma) considering deaths censored, bias may result estimates influence predictors. approach Fine Gray one option dealing . implemented package cmprsk. crrFormula() function autoReg package can make competing risk regression model addFitSummary() function can add model summary. Dependent: Surv(time, status == 1) HR (univariable) HR (multivariable) HR (competing risks multivariable) age Mean ± SD 52.5 ± 16.7 1.02 (1.00-1.04, p=.028) 1.01 (1.00-1.03, p=.141) 1.01 (0.99-1.02, p=.520) sex Female 126 (61.5%)     Male 79 (38.5%) 1.94 (1.15-3.26, p=.013) 1.54 (0.91-2.60, p=.106) 1.50 (0.87-2.57, p=.140) thickness Mean ± SD 2.9 ± 3.0 1.17 (1.10-1.25, p<.001) 1.12 (1.04-1.20, p=.004) 1.09 (1.01-1.18, p=.019) ulcer Absent 115 (56.1%)     Present 90 (43.9%) 4.36 (2.44-7.77, p<.001) 3.20 (1.75-5.88, p<.001) 3.09 (1.71-5.60, p<.001) n=205, events=57, Likelihood ratio test=41.62 4 df(p<.001) can estimate cumulative incidence functions competing risk data. 5 years, cumulative death incidence due melanoma 22.3% cumulative death incidence due cause 4.4%. can plot following R code.","code":"fit1=crrFormula(time+status1~age+sex+thickness+ulcer,data=melanoma) autoReg(fit,uni=TRUE,threshold=1) %>%    addFitSummary(fit1,\"HR (competing risks multivariable)\") %>%    myft() library(cmprsk) # for use of cuminc() fit=cuminc(melanoma$time/365,melanoma$status1) fit Estimates and Variances: $est              5        10        15 1 1 0.22353960 0.3387175 0.3387175 1 2 0.04419779 0.1059471 0.1059471  $var                5          10          15 1 1 0.0008713044 0.001690760 0.001690760 1 2 0.0002086252 0.001040155 0.001040155 ggcmprsk(time/365+status1~1,data=melanoma,id=c(\"melanoma\",\"others\"))"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"analysis-of-clustered-data","dir":"Articles","previous_headings":"","what":"Analysis of clustered data","title":"Survival Analysis","text":"clustered data, cases independent. instance, one might interested survival times individuals family unit, town school. case, genetic environmental factors mean survival times within cluster similar clusters, independence assumption longer holds. Marginal approach frailty model can used handle type data.","code":""},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"frailty-survival-model","dir":"Articles","previous_headings":"Analysis of clustered data","what":"1. Frailty survival model","title":"Survival Analysis","text":"retinopathy data trial laser coagulation treatment delay diabetic retinopathy. shall examine effect treatment time--blindness patients diabetic retinopathy, also interaction effect treatment(trt) age onset (juvenile adult onset), defined type indicator. estimate individual effect, frailty(id) shall used. Variance random effect \\(\\hat{\\sigma}^2=0.926\\) p value frailty(id) 0.098. can reject \\(H_0 : \\sigma^2=0\\), individual patient different effect. result summarized table following R code. Dependent: Surv(futime, status) HR (multivariable) trt Mean ± SD 0.5 ± 0.5 0.60 (0.39-0.94, p=.025) type juvenile 228 (57.9%)   adult 166 (42.1%) 1.49 (0.89-2.47, p=.126) trt:type juvenile   trt:type adult  0.37 (0.18-0.76, p=.006) n=394, events=155, Likelihood ratio test=218.43 91.1321091975791 df(p<.001)frailty(id) p=.010 Variance random effect= 0.92598   -likelihood = -847 result, can estimate risk blindness group. juvenile, treated : \\(HR = exp(0) = 1\\) juvenile, treated : \\(HR = 0.6030\\) adult onset, treated : \\(HR = 1.4872\\) adult onset, treated : \\(HR = 0.6030\\times1.4872\\times0.3734=0.3348\\) type diabetes significant development blindness(\\(p=0.130\\)). Laser treatment significantly reduced risk blindness(HR 0.60(95% CI 0.39-0.94), \\(p=0.03\\)). Laser treatment effective type diabetes, effective adult-onset diabetes.","code":"data(retinopathy, package=\"survival\") fit=coxph(Surv(futime,status)~trt*type+frailty(id),data=retinopathy) summary(fit) Call: coxph(formula = Surv(futime, status) ~ trt * type + frailty(id),      data = retinopathy)    n= 394, number of events= 155                 coef    se(coef) se2    Chisq  DF    p      trt           -0.5059 0.2255   0.2207   5.03  1.00 0.0250 typeadult      0.3969 0.2591   0.2053   2.35  1.00 0.1300 frailty(id)                           122.55 88.58 0.0098 trt:typeadult -0.9850 0.3618   0.3553   7.41  1.00 0.0065                exp(coef) exp(-coef) lower .95 upper .95 trt              0.6030     1.6584    0.3876    0.9380 typeadult        1.4872     0.6724    0.8949    2.4714 trt:typeadult    0.3734     2.6779    0.1838    0.7588  Iterations: 6 outer, 31 Newton-Raphson      Variance of random effect= 0.92598   I-likelihood = -847  Degrees of freedom for terms=  1.0  0.6 88.6  1.0  Concordance= 0.86  (se = 0.014 ) Likelihood ratio test= 218.4  on 91.13 df,   p=2e-12 autoReg(fit) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"marginal-approach","dir":"Articles","previous_headings":"Analysis of clustered data","what":"2. Marginal approach","title":"Survival Analysis","text":"marginal approach, proportional hazards assumption presumed hold subjects, despite structure data due clusters. approach, parameter estimates obtained Cox proportional hazards model ignoring cluster structure. result can summarized table. Dependent: Surv(futime, status) HR (multivariable) trt Mean ± SD 0.5 ± 0.5 0.65 (0.45-0.94, p=.022) type juvenile 228 (57.9%)   adult 166 (42.1%) 1.41 (0.96-2.06, p=.081) trt:type juvenile   trt:type adult  0.43 (0.24-0.78, p=.005) n=394, events=155, Likelihood ratio test=28.49 3 df(p<.001)cluster=id result marginal approach similar frailty approach. frailty approach, subject-specific effect estimated, whereas marginal approach, population average effect estimated.","code":"fit=coxph(Surv(futime,status)~trt*type+cluster(id),data=retinopathy) summary(fit) Call: coxph(formula = Surv(futime, status) ~ trt + type + trt:type,      data = retinopathy, cluster = id)    n= 394, number of events= 155                    coef exp(coef) se(coef) robust se      z Pr(>|z|)    trt           -0.4250    0.6538   0.2177    0.1850 -2.297  0.02160 *  typeadult      0.3413    1.4067   0.1992    0.1958  1.743  0.08129 .  trt:typeadult -0.8459    0.4292   0.3509    0.3036 -2.786  0.00534 ** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1                exp(coef) exp(-coef) lower .95 upper .95 trt              0.6538     1.5296    0.4549    0.9395 typeadult        1.4067     0.7109    0.9585    2.0646 trt:typeadult    0.4292     2.3301    0.2367    0.7782  Concordance= 0.613  (se = 0.019 ) Likelihood ratio test= 28.49  on 3 df,   p=3e-06 Wald test            = 34.88  on 3 df,   p=1e-07 Score (logrank) test = 28.44  on 3 df,   p=3e-06,   Robust = 30.29  p=1e-06    (Note: the likelihood ratio and score tests assume independence of      observations within a cluster, the Wald and robust score tests do not). autoReg(fit) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keon-Woong Moon. Author, maintainer.","code":""},{"path":"https://cardiomoon.github.io/autoReg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moon K (2022). autoReg: Automatic Linear Logistic Regression Survival Analysis. https://github.com/cardiomoon/autoReg, https://cardiomoon.github.io/autoReg/.","code":"@Manual{,   title = {autoReg: Automatic Linear and Logistic Regression and Survival Analysis},   author = {Keon-Woong Moon},   year = {2022},   note = {https://github.com/cardiomoon/autoReg, https://cardiomoon.github.io/autoReg/}, }"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can install autoReg package github.","code":"#install.packages(\"devtools\") devtools::install_github(\"cardiomoon/autoReg\")"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"load-package","dir":"","previous_headings":"","what":"Load package","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"load package, use library() function.","code":"library(autoReg)"},{"path":[]},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"1summarizing-baseline-characteristics--gaze","dir":"","previous_headings":"Main features","what":"1.Summarizing baseline characteristics : gaze()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can make table summarizing baseline characteristics easily.","code":"library(moonBook) # For use of example data acs gaze(sex~.,data=acs) ————————————————————————————————————————————————————————————————————————   Dependent:sex        levels           Female          Male        p           (N)                             (N=287)        (N=570)            ———————————————————————————————————————————————————————————————————————— age               Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  cardiogenicShock  No                    275 (95.8%)     530 (93%)   .136                    Yes                     12 (4.2%)       40 (7%)         entry             Femoral               119 (41.5%)   193 (33.9%)   .035                    Radial                168 (58.5%)   377 (66.1%)         Dx                NSTEMI                 50 (17.4%)   103 (18.1%)   .012                    STEMI                  84 (29.3%)   220 (38.6%)                           Unstable Angina       153 (53.3%)   247 (43.3%)         EF                Mean ± SD             56.3 ± 10.1    55.6 ± 9.4   .387  height            Mean ± SD             153.8 ± 6.2   167.9 ± 6.1  <.001  weight            Mean ± SD              57.2 ± 9.3   68.7 ± 10.3  <.001  BMI               Mean ± SD              24.2 ± 3.6    24.3 ± 3.2   .611  obesity           No                    194 (67.6%)   373 (65.4%)   .580                    Yes                    93 (32.4%)   197 (34.6%)         TC                Mean ± SD            188.9 ± 51.1  183.3 ± 45.9   .124  LDLC              Mean ± SD            117.8 ± 41.2  116.0 ± 41.1   .561  HDLC              Mean ± SD             39.0 ± 11.5   37.8 ± 10.9   .145  TG                Mean ± SD            119.9 ± 76.2  127.9 ± 97.3   .195  DM                No                    173 (60.3%)   380 (66.7%)   .077                    Yes                   114 (39.7%)   190 (33.3%)         HBP               No                     83 (28.9%)   273 (47.9%)  <.001                    Yes                   204 (71.1%)   297 (52.1%)         smoking           Ex-smoker              49 (17.1%)   155 (27.2%)  <.001                    Never                 209 (72.8%)   123 (21.6%)                           Smoker                 29 (10.1%)   292 (51.2%)         ————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"for-easy-reproducible-research--myft","dir":"","previous_headings":"Main features","what":"For easy reproducible research : myft()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can make publication-ready table easily using myft(). makes flextable object can use either HTML PDF format.  can also make powerpoint file using rrtable::table2pptx() function. can make microsoft word file using rrtable::table2docx() function.","code":"library(dplyr) # for use of `%>%`  Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union ft=gaze(sex~.,data=acs) %>% myft() ft library(rrtable)  table2pptx(ft) Exported table as Report.pptx table2docx(ft) Exported table as Report.docx"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"summarizing-baseline-characteristics-with-two-or-more-grouping-variables","dir":"","previous_headings":"Main features","what":"Summarizing baseline characteristics with two or more grouping variables","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can get table summarizing baseline characteristics two grouping variables.  can also use three grouping variables.resultant table long review, can try.","code":"gaze(sex+Dx~.,data=acs) %>% myft() gaze(sex+DM+HBP~age,data=acs) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"2-for-automatic-selection-of-explanatory-variables--autoreg","dir":"","previous_headings":"Main features","what":"2. For automatic selection of explanatory variables : autoReg()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can make table summarizing results regression analysis. example, let us perform logistic regression colon cancer data. can make table result. can make publication-ready table.  want make table explanation, can make categorical variables numeric variables. example, explanatory variables obstruct(obstruction colon tumor) perfor(perforation colon) coded 0 1, “” “Yes” actually. Also dependent variable status coded 0 1, “Alive” “Died”.  can add labels names variables setLabel() function.  want show reference values table, can shorten table.","code":"library(survival)   # For use of data colon data(cancer)    fit=glm(status~rx+sex+age+obstruct+perfor+nodes,data=colon,family=\"binomial\") summary(fit)  Call: glm(formula = status ~ rx + sex + age + obstruct + perfor + nodes,      family = \"binomial\", data = colon)  Deviance Residuals:      Min       1Q   Median       3Q      Max   -2.4950  -1.0594  -0.7885   1.1619   1.6424    Coefficients:              Estimate Std. Error z value Pr(>|z|)     (Intercept) -0.645417   0.285558  -2.260   0.0238 *   rxLev       -0.067422   0.118907  -0.567   0.5707     rxLev+5FU   -0.627480   0.121684  -5.157 2.51e-07 *** sex         -0.053541   0.098975  -0.541   0.5885     age          0.002307   0.004234   0.545   0.5859     obstruct     0.283703   0.125194   2.266   0.0234 *   perfor       0.319281   0.292034   1.093   0.2743     nodes        0.190563   0.018255  10.439  < 2e-16 *** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  (Dispersion parameter for binomial family taken to be 1)      Null deviance: 2525.4  on 1821  degrees of freedom Residual deviance: 2342.4  on 1814  degrees of freedom   (36 observations deleted due to missingness) AIC: 2358.4  Number of Fisher Scoring iterations: 4 autoReg(fit) ——————————————————————————————————————————————————————————————————————————————————  Dependent: status              0 (N=925)    1 (N=897)      OR (multivariable)      —————————————————————————————————————————————————————————————————————————————————— rx                 Obs          282 (30.5%)  342 (38.1%)                                               Lev          285 (30.8%)    323 (36%)  0.93 (0.74-1.18, p=.571)                     Lev+5FU      358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  sex                Mean ± SD      0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  age                Mean ± SD    60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.586)  obstruct           Mean ± SD      0.2 ± 0.4    0.2 ± 0.4  1.33 (1.04-1.70, p=.023)  perfor             Mean ± SD      0.0 ± 0.2    0.0 ± 0.2  1.38 (0.78-2.47, p=.274)  nodes              Mean ± SD      2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.26, p<.001)  —————————————————————————————————————————————————————————————————————————————————— autoReg(fit) %>% myft() colon$status.factor=factor(colon$status,labels=c(\"Alive\",\"Died\")) colon$obstruct.factor=factor(colon$obstruct,labels=c(\"No\",\"Yes\")) colon$perfor.factor=factor(colon$perfor,labels=c(\"No\",\"Yes\")) colon$sex.factor=factor(colon$sex,labels=c(\"Female\",\"Male\"))  fit=glm(status.factor~rx+sex.factor+age+obstruct.factor+perfor.factor+nodes,data=colon,family=\"binomial\") result=autoReg(fit)  result %>% myft() colon$status.factor=setLabel(colon$status.factor,\"Mortality\") colon$rx=setLabel(colon$rx,\"Treatment\") colon$age=setLabel(colon$age,\"Age(Years)\") colon$sex.factor=setLabel(colon$sex.factor,\"Sex\") colon$obstruct.factor=setLabel(colon$obstruct.factor,\"Obstruction\") colon$perfor.factor=setLabel(colon$perfor.factor,\"Perforation\") colon$nodes=setLabel(colon$nodes,\"Positive nodes\")  fit=glm(status.factor~rx+sex.factor+age+obstruct.factor+perfor.factor+nodes,data=colon,family=\"binomial\") result=autoReg(fit)  result %>% myft() shorten(result) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"add-univariate-models-to-table-and-automatic-selection-of-explanatory-variables","dir":"","previous_headings":"Main features","what":"Add univariate models to table and automatic selection of explanatory variables","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can add results univariate analyses table. time, autoReg() function automatically select explanatory variables threshold(default value 0.2) perform multivariate analysis. table, p values explanatory variables sex.factor age default threshold(0.2), excluded multivariate model.  want include explanatory variables multivariate model, just set threshold 1.  can perform stepwise backward elimination select variables make final model. Just set final=TRUE.","code":"autoReg(fit, uni=TRUE) %>% myft() autoReg(fit, uni=TRUE,threshold=1) %>% myft() autoReg(fit, uni=TRUE,threshold=1, final=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"multiple-imputation-with-mice","dir":"","previous_headings":"Main features > Add univariate models to table and automatic selection of explanatory variables","what":"Multiple imputation with mice()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"argument imputed=TRUE, autoReg() function make multiple imputed model using mice::mice() function. default, 20 imputations performed. want, can change number imputations m argument.","code":"autoReg(fit, imputed=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"summarize-regression-model-results-in-a-plot--modelplot","dir":"","previous_headings":"Main features","what":"Summarize regression model results in a plot : modelPlot()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can draw plot summarizing model modelPlot()  can make powerpoint file plot using rrtable::plot2pptx(). can summarize models plot. want summarize univariate multivariate model plot, just set uni=TRUE adjust threshold. can decide whether show reference show.ref argument.","code":"x=modelPlot(fit) x plot2pptx(print(x)) Exported plot as Report.pptx modelPlot(fit,uni=TRUE,threshold=1,show.ref=FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/OEplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw an Observed vs Expected plot — OEplot","title":"Draw an Observed vs Expected plot — OEplot","text":"Draw Observed vs Expected plot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/OEplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw an Observed vs Expected plot — OEplot","text":"","code":"OEplot(fit, xnames = NULL, no = 3, maxy.lev = 5, median = TRUE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/OEplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw an Observed vs Expected plot — OEplot","text":"fit object class \"coxph\" xnames Character Names explanatory variable plot integer Number groups made maxy.lev Integer Maximum unique length numeric variable treated categorical variables median logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/OEplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw an Observed vs Expected plot — OEplot","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/OEplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw an Observed vs Expected plot — OEplot","text":"","code":"library(survival) data(cancer,package=\"survival\") fit=coxph(Surv(time,status)~rx,data=colon) fit=coxph(Surv(time,status)~rx+age+strata(sex),data=colon) OEplot(fit)  fit=coxph(Surv(time,status)~age,data=colon) OEplot(fit)  fit=coxph(Surv(time,status)~logWBC,data=anderson) OEplot(fit)"},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Add model summary to an object of class gaze — addFitSummary","title":"Add model summary to an object of class gaze — addFitSummary","text":"Add model summary object class gaze","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add model summary to an object of class gaze — addFitSummary","text":"","code":"addFitSummary(df, fit, statsname = \"\")"},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add model summary to an object of class gaze — addFitSummary","text":"df object class \"gaze\" \"autoReg\" fit object class \"glm\" \"lm\" \"crr\" statsname character Name statistics","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add model summary to an object of class gaze — addFitSummary","text":"addFitSummary returns object gaze autoReg - class df","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add model summary to an object of class gaze — addFitSummary","text":"","code":"require(survival) require(dplyr) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(cancer,package=\"survival\") fit=coxph(Surv(time,status)~rx+age+sex+nodes+obstruct+perfor,data=colon) df=autoReg(fit,uni=FALSE) final=fit2final(fit) df %>% addFitSummary(final,statsname=\"HR (final)\") %>% myft() #> a flextable object. #> col_keys: `Dependent: Surv(time, status)`, ` `, `all`, `HR (multivariable)`, `HR (final)`  #> header has 1 row(s)  #> body has 8 row(s)  #> original dataset sample:  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: Surv(time, status)                       all        HR (multivariable)                HR (final)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                                     Obs  624 (34.2%)                                                      #>                                        Lev  608 (33.4%)  0.94 (0.81-1.09, p=.409)  0.94 (0.80-1.09, p=.408)  #>                                    Lev+5FU  590 (32.4%)  0.63 (0.54-0.75, p<.001)  0.64 (0.54-0.75, p<.001)  #> age                              Mean ± SD  59.8 ± 11.9  1.00 (1.00-1.01, p=.571)                            #> sex                              Mean ± SD    0.5 ± 0.5  0.92 (0.81-1.05, p=.242)                            #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #> n=1822, events=897, Likelihood ratio test=178.71 on 7 df(p<.001)"},{"path":"https://cardiomoon.github.io/autoReg/reference/anderson.html","id":null,"dir":"Reference","previous_headings":"","what":"Remission survival times of 42 leukemia patients — anderson","title":"Remission survival times of 42 leukemia patients — anderson","text":"dataset containing  survival time 42 leukemia patients","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/anderson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remission survival times of 42 leukemia patients — anderson","text":"","code":"anderson"},{"path":"https://cardiomoon.github.io/autoReg/reference/anderson.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Remission survival times of 42 leukemia patients — anderson","text":"data.frame 42 rows 5 variables time survival time weeks status censoring status 1=failure 0=censored sex sex 1=Female 0=Male logWBC log white blood cell count rx treatment status 1=control 0 =treatment","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/anderson.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Remission survival times of 42 leukemia patients — anderson","text":"David G. Kleinbaum Mitchel Klein. Survival Analysis. Self-Learning Text(3rd ed)(Springer,2012) ISBN: 978-1441966452","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/anderson1.html","id":null,"dir":"Reference","previous_headings":"","what":"Remission survival times of 42 leukemia patients — anderson1","title":"Remission survival times of 42 leukemia patients — anderson1","text":"dataset containing  survival time 42 leukemia patients data data anderson, sex rx variable factors numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/anderson1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remission survival times of 42 leukemia patients — anderson1","text":"","code":"anderson1"},{"path":"https://cardiomoon.github.io/autoReg/reference/anderson1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Remission survival times of 42 leukemia patients — anderson1","text":"data.frame 42 rows 5 variables time survival time weeks status censoring status 1=failure 0=censored sex sex \"Male\" \"Female logWBC log white blood cell count rx treatment status \"treatment\" \"control\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/anderson1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Remission survival times of 42 leukemia patients — anderson1","text":"David G. Kleinbaum Mitchel Klein. Survival Analysis. Self-Learning Text(3rd ed)(Springer,2012) ISBN: 978-1441966452","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/as_printable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame to printable form — as_printable","title":"Convert data.frame to printable form — as_printable","text":"Calculate character length apply data","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/as_printable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame to printable form — as_printable","text":"","code":"as_printable(   data,   align.first = \"left\",   align.chr = \"right\",   align.num = \"right\" )"},{"path":"https://cardiomoon.github.io/autoReg/reference/as_printable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame to printable form — as_printable","text":"data data.frame align.first character Alignment first variable align.chr character Alignment character variable align.num character Alignment numeric variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/as_printable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.frame to printable form — as_printable","text":"data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/as_printable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data.frame to printable form — as_printable","text":"","code":"as_printable(mtcars) #> # A tibble: 32 × 11 #>    `mpg   ` `  cyl` `   disp` `   hp` `  drat` `     wt` `   qsec` `  vs` `  am` #>    <chr>    <chr>   <chr>     <chr>   <chr>    <chr>     <chr>     <chr>  <chr>  #>  1 \"21    \" \"    6\" \"    160\" \"  110\" \"   3.9\" \"   2.62\" \"  16.46\" \"   0\" \"   1\" #>  2 \"21    \" \"    6\" \"    160\" \"  110\" \"   3.9\" \"  2.875\" \"  17.02\" \"   0\" \"   1\" #>  3 \"22.8  \" \"    4\" \"    108\" \"   93\" \"  3.85\" \"   2.32\" \"  18.61\" \"   1\" \"   1\" #>  4 \"21.4  \" \"    6\" \"    258\" \"  110\" \"  3.08\" \"  3.215\" \"  19.44\" \"   1\" \"   0\" #>  5 \"18.7  \" \"    8\" \"    360\" \"  175\" \"  3.15\" \"   3.44\" \"  17.02\" \"   0\" \"   0\" #>  6 \"18.1  \" \"    6\" \"    225\" \"  105\" \"  2.76\" \"   3.46\" \"  20.22\" \"   1\" \"   0\" #>  7 \"14.3  \" \"    8\" \"    360\" \"  245\" \"  3.21\" \"   3.57\" \"  15.84\" \"   0\" \"   0\" #>  8 \"24.4  \" \"    4\" \"  146.7\" \"   62\" \"  3.69\" \"   3.19\" \"     20\" \"   1\" \"   0\" #>  9 \"22.8  \" \"    4\" \"  140.8\" \"   95\" \"  3.92\" \"   3.15\" \"   22.9\" \"   1\" \"   0\" #> 10 \"19.2  \" \"    6\" \"  167.6\" \"  123\" \"  3.92\" \"   3.44\" \"   18.3\" \"   1\" \"   0\" #> # … with 22 more rows, and 2 more variables: `  gear` <chr>, `  carb` <chr> as_printable(iris) #> Warning: invalid factor level, NA generated #> # A tibble: 150 × 5 #>    `Sepal.Length  ` `  Sepal.Width` `  Petal.Length` `  Petal.Width` #>    <chr>            <chr>           <chr>            <chr>           #>  1 \"5.1           \" \"          3.5\" \"           1.4\" \"          0.2\" #>  2 \"4.9           \" \"            3\" \"           1.4\" \"          0.2\" #>  3 \"4.7           \" \"          3.2\" \"           1.3\" \"          0.2\" #>  4 \"4.6           \" \"          3.1\" \"           1.5\" \"          0.2\" #>  5 \"5             \" \"          3.6\" \"           1.4\" \"          0.2\" #>  6 \"5.4           \" \"          3.9\" \"           1.7\" \"          0.4\" #>  7 \"4.6           \" \"          3.4\" \"           1.4\" \"          0.3\" #>  8 \"5             \" \"          3.4\" \"           1.5\" \"          0.2\" #>  9 \"4.4           \" \"          2.9\" \"           1.4\" \"          0.2\" #> 10 \"4.9           \" \"          3.1\" \"           1.5\" \"          0.1\" #> # … with 140 more rows, and 1 more variable: `     Species` <chr>"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"Perform univariable multivariable regression stepwise backward regression automatically","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"","code":"autoReg(x, ...)  # S3 method for lm autoReg(x, ...)  # S3 method for glm autoReg(x, ...)  # S3 method for coxph autoReg(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"x object class lm, glm coxph ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"autoReg returns object class \"autoReg\" inherits class \"data.frame\" least following attributes: attr(*,\"yvars) character. name dependent variable attr(*,\"model\") name model. One \"lm\",\"glm\" \"coxph\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"lm: S3 method class lm glm: S3 method class glm coxph: S3 method class coxph","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"","code":"data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") autoReg(fit) #> —————————————————————————————————————————————————————————————————————————————————— #> Dependent: status                 0 (N=925)    1 (N=897)        OR (multivariable)  #> —————————————————————————————————————————————————————————————————————————————————— #> rx                         Obs  282 (30.5%)  342 (38.1%)                            #>                            Lev  285 (30.8%)    323 (36%)  0.94 (0.74-1.18, p=.576)  #>                        Lev+5FU  358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  #> sex                  Mean ± SD    0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  #> age                  Mean ± SD  60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.583)  #> obstruct             Mean ± SD    0.2 ± 0.4    0.2 ± 0.4  1.34 (1.05-1.72, p=.018)  #> nodes                Mean ± SD    2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.25, p<.001)  #> —————————————————————————————————————————————————————————————————————————————————— autoReg(fit,uni=FALSE,final=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: status                 0 (N=925)    1 (N=897)        OR (multivariable)                OR (final)  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                         Obs  282 (30.5%)  342 (38.1%)                                                      #>                            Lev  285 (30.8%)    323 (36%)  0.94 (0.74-1.18, p=.576)  0.94 (0.74-1.18, p=.575)  #>                        Lev+5FU  358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  0.54 (0.42-0.68, p<.001)  #> sex                  Mean ± SD    0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)                            #> age                  Mean ± SD  60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.583)                            #> obstruct             Mean ± SD    0.2 ± 0.4    0.2 ± 0.4  1.34 (1.05-1.72, p=.018)  1.34 (1.05-1.71, p=.019)  #> nodes                Mean ± SD    2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.25, p<.001)  1.21 (1.17-1.25, p<.001)  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— autoReg(fit,uni=FALSE,imputed=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: status                 0 (N=925)    1 (N=897)        OR (multivariable)              OR (imputed)  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                         Obs  282 (30.5%)  342 (38.1%)                                                      #>                            Lev  285 (30.8%)    323 (36%)  0.94 (0.74-1.18, p=.576)  0.94 (0.74-1.18, p=.576)  #>                        Lev+5FU  358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  0.53 (0.42-0.68, p<.001)  #> sex                  Mean ± SD    0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  0.95 (0.78-1.15, p=.589)  #> age                  Mean ± SD  60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.583)  1.00 (0.99-1.01, p=.583)  #> obstruct             Mean ± SD    0.2 ± 0.4    0.2 ± 0.4  1.34 (1.05-1.72, p=.018)  1.34 (1.05-1.72, p=.018)  #> nodes                Mean ± SD    2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.25, p<.001)  1.21 (1.17-1.25, p<.001)  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— fit=lm(mpg~wt*hp+am+I(wt^2),data=mtcars) autoReg(fit,final=TRUE) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: mpg                         unit         value      Coefficient (multivariable)              Coefficient (final)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> wt                     [1.5,5.4]  Mean ± SD     3.2 ± 1.0  -7.67 (-14.54 to -0.81, p=.030)  -8.22 (-10.82 to -5.62, p<.001)  #> hp                      [52,335]  Mean ± SD  146.7 ± 68.6   -0.13 (-0.25 to -0.01, p=.040)   -0.12 (-0.17 to -0.07, p<.001)  #> am                         [0,1]  Mean ± SD     0.4 ± 0.5     0.17 (-2.68 to 3.01, p=.905)                                   #> I(wt^2)           interpretation                             -0.11 (-1.57 to 1.36, p=.880)                                   #> wt:hp                                                         0.03 (-0.01 to 0.07, p=.100)      0.03 (0.01 to 0.04, p<.001)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— autoReg(fit,imputed=TRUE) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: mpg                         unit         value      Coefficient (multivariable)           Coefficients (imputed)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> wt                     [1.5,5.4]  Mean ± SD     3.2 ± 1.0  -7.67 (-14.54 to -0.81, p=.030)  -7.67 (-14.57 to -0.78, p=.031)  #> hp                      [52,335]  Mean ± SD  146.7 ± 68.6   -0.13 (-0.25 to -0.01, p=.040)   -0.13 (-0.25 to -0.01, p=.041)  #> am                         [0,1]  Mean ± SD     0.4 ± 0.5     0.17 (-2.68 to 3.01, p=.905)     0.17 (-2.69 to 3.02, p=.905)  #> I(wt^2)           interpretation                             -0.11 (-1.57 to 1.36, p=.880)    -0.11 (-1.58 to 1.36, p=.880)  #> wt:hp                                                         0.03 (-0.01 to 0.07, p=.100)     0.03 (-0.01 to 0.07, p=.101)  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":null,"dir":"Reference","previous_headings":"","what":"perform automatic regression for a class of coxph — autoRegCox","title":"perform automatic regression for a class of coxph — autoRegCox","text":"perform automatic regression class coxph","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"perform automatic regression for a class of coxph — autoRegCox","text":"","code":"autoRegCox(   x,   threshold = 0.2,   uni = FALSE,   multi = TRUE,   final = FALSE,   imputed = FALSE,   keepstats = FALSE,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"perform automatic regression for a class of coxph — autoRegCox","text":"x object class coxph threshold numeric uni logical whether perform univariable regression multi logical whether perform multivariable regression final logical whether perform stepwise backward elimination imputed logical whether perform multiple imputation keepstats logical whether keep statistic ... arguments passed gaze()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"perform automatic regression for a class of coxph — autoRegCox","text":"autoRegCox returns object class \"autoReg\" inherits class \"data.frame\" least following attributes: attr(*,\"yvars) character. name dependent variable attr(*,\"model\") name model. One \"lm\",\"glm\" \"coxph\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"perform automatic regression for a class of coxph — autoRegCox","text":"","code":"require(survival) require(dplyr) data(cancer) fit=coxph(Surv(time,status==2)~log(bili)+age+cluster(edema),data=pbc) autoReg(fit) #> —————————————————————————————————————————————————————————————————————————————————————— #> Dependent: Surv(time, status == 2)                       all        HR (multivariable)  #> —————————————————————————————————————————————————————————————————————————————————————— #> log(bili)                             Mean ± SD    0.6 ± 1.0  2.76 (2.59-2.94, p<.001)  #> age                                   Mean ± SD  50.7 ± 10.4  1.04 (1.03-1.06, p<.001)  #> —————————————————————————————————————————————————————————————————————————————————————— #> n=418, events=161, Likelihood ratio test=186.62 on 2 df(p<.001) cluster=edema  fit=coxph(Surv(time,status)~rx+age+sex+obstruct+perfor,data=colon) autoReg(fit) #> ————————————————————————————————————————————————————————————————————————————————— #> Dependent: Surv(time, status)                       all        HR (multivariable)  #> ————————————————————————————————————————————————————————————————————————————————— #> rx                                     Obs  630 (33.9%)                            #>                                        Lev  620 (33.4%)  0.98 (0.84-1.14, p=.802)  #>                                    Lev+5FU  608 (32.7%)  0.65 (0.55-0.76, p<.001)  #> age                              Mean ± SD  59.8 ± 11.9  1.00 (0.99-1.00, p=.660)  #> sex                              Mean ± SD    0.5 ± 0.5  0.96 (0.84-1.09, p=.507)  #> obstruct                         Mean ± SD    0.2 ± 0.4  1.24 (1.05-1.45, p=.009)  #> perfor                           Mean ± SD    0.0 ± 0.2  1.22 (0.85-1.74, p=.275)  #> ————————————————————————————————————————————————————————————————————————————————— #> n=1858, events=920, Likelihood ratio test=44.77 on 6 df(p<.001)  autoReg(fit,uni=TRUE,threshold=1) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: Surv(time, status)                       all          HR (univariable)        HR (multivariable)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                                     Obs  630 (33.9%)                                                      #>                                        Lev  620 (33.4%)  0.98 (0.84-1.14, p=.786)  0.98 (0.84-1.14, p=.802)  #>                                    Lev+5FU  608 (32.7%)  0.64 (0.55-0.76, p<.001)  0.65 (0.55-0.76, p<.001)  #> age                              Mean ± SD  59.8 ± 11.9  1.00 (0.99-1.00, p=.382)  1.00 (0.99-1.00, p=.660)  #> sex                              Mean ± SD    0.5 ± 0.5  0.97 (0.85-1.10, p=.610)  0.96 (0.84-1.09, p=.507)  #> obstruct                         Mean ± SD    0.2 ± 0.4  1.27 (1.09-1.49, p=.003)  1.24 (1.05-1.45, p=.009)  #> perfor                           Mean ± SD    0.0 ± 0.2  1.30 (0.92-1.85, p=.142)  1.22 (0.85-1.74, p=.275)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #> n=1858, events=920, Likelihood ratio test=44.77 on 6 df(p<.001)  autoReg(fit,uni=TRUE,final=TRUE) %>% myft() #> a flextable object. #> col_keys: `Dependent: Surv(time, status)`, ` `, `all`, `HR (univariable)`, `HR (multivariable)`, `HR (final)`  #> header has 1 row(s)  #> body has 7 row(s)  #> original dataset sample:  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: Surv(time, status)                       all          HR (univariable)        HR (multivariable)                HR (final)  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                                     Obs  630 (33.9%)                                                                                #>                                        Lev  620 (33.4%)  0.98 (0.84-1.14, p=.786)  0.98 (0.84-1.14, p=.781)  0.98 (0.84-1.14, p=.795)  #>                                    Lev+5FU  608 (32.7%)  0.64 (0.55-0.76, p<.001)  0.65 (0.55-0.76, p<.001)  0.65 (0.55-0.76, p<.001)  #> age                              Mean ± SD  59.8 ± 11.9  1.00 (0.99-1.00, p=.382)                                                      #> sex                              Mean ± SD    0.5 ± 0.5  0.97 (0.85-1.10, p=.610)                                                      #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> n=1858, events=920, Likelihood ratio test=44.14 on 4 df(p<.001)  data(colon_s,package=\"finalfit\") fit=coxph(Surv(time,status)~age.factor+sex.factor+obstruct.factor+perfor.factor,data=colon_s) autoReg(fit,uni=TRUE,threshold=1) #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: Surv(time, status)                         all          HR (univariable)        HR (multivariable)  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Age                                <40 years    69 (7.6%)                                                      #>                                  40-59 years  337 (37.1%)  0.76 (0.53-1.09, p=.132)  0.79 (0.55-1.13, p=.196)  #>                                    60+ years  502 (55.3%)  0.93 (0.66-1.31, p=.668)  0.98 (0.69-1.40, p=.926)  #> Sex                                   Female  437 (48.1%)                                                      #>                                         Male  471 (51.9%)  1.01 (0.84-1.22, p=.888)  1.02 (0.85-1.23, p=.812)  #> Obstruction                               No  732 (80.6%)                                                      #>                                          Yes  176 (19.4%)  1.29 (1.03-1.62, p=.028)  1.30 (1.03-1.64, p=.026)  #> Perforation                               No  881 (97.0%)                                                      #>                                          Yes    27 (3.0%)  1.17 (0.70-1.95, p=.556)  1.08 (0.64-1.81, p=.785)  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> n=908, events=441, Likelihood ratio test=9.86 on 5 df(p=.079)  autoReg(fit,uni=TRUE,imputed=TRUE) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Dependent: Surv(time, status)                         all          HR (univariable)        HR (multivariable)              HR (imputed)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Age                                <40 years    69 (7.6%)                                                                                #>                                  40-59 years  337 (37.1%)  0.76 (0.53-1.09, p=.132)  0.79 (0.55-1.14, p=.203)  0.77 (0.54-1.11, p=.163)  #>                                    60+ years  502 (55.3%)  0.93 (0.66-1.31, p=.668)  0.99 (0.70-1.40, p=.943)  0.96 (0.68-1.36, p=.818)  #> Sex                                   Female  437 (48.1%)                                                                                #>                                         Male  471 (51.9%)  1.01 (0.84-1.22, p=.888)                                                      #> Obstruction                               No  732 (80.6%)                                                                                #>                                          Yes  176 (19.4%)  1.29 (1.03-1.62, p=.028)  1.31 (1.04-1.64, p=.022)  1.31 (1.04-1.64, p=.021)  #> Perforation                               No  881 (97.0%)                                                                                #>                                          Yes    27 (3.0%)  1.17 (0.70-1.95, p=.556)                                                      #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> n=908, events=441, Likelihood ratio test=9.73 on 3 df(p=.021)"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","text":"Perform univariable multivariable regression stepwise backward regression automatically","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","text":"","code":"autoReg_sub(   fit,   threshold = 0.2,   uni = FALSE,   multi = TRUE,   final = FALSE,   imputed = FALSE,   keepstats = FALSE,   showstats = TRUE,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","text":"fit object class lm glm threshold numeric uni logical whether perform univariate regression multi logical whether perform multivariate regression final logical whether perform stepwise backward elimination imputed logical whether include imputed model keepstats logical whether keep statistics showstats logical whether show descriptive statistics ... arguments passed imputedReg()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","text":"object class \"autoReg\" inherits class \"data.frame\" least following attributes: attr(*,\"yvars) character. name dependent variable attr(*,\"model\") name model. One \"lm\",\"glm\" \"coxph\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/beNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Whether a string vector can be converted to numeric — beNumeric","title":"Whether a string vector can be converted to numeric — beNumeric","text":"Whether string vector can converted numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/beNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Whether a string vector can be converted to numeric — beNumeric","text":"","code":"beNumeric(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/beNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Whether a string vector can be converted to numeric — beNumeric","text":"x string vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/beNumeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Whether a string vector can be converted to numeric — beNumeric","text":"logical vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap simulation for model prediction — bootPredict","title":"Bootstrap simulation for model prediction — bootPredict","text":"Generate model predictions specified set explanatory levels bootstrapped confidence intervals.","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap simulation for model prediction — bootPredict","text":"","code":"bootPredict(fit, newdata, R = 100, type = \"response\", ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap simulation for model prediction — bootPredict","text":"fit object class lm glm newdata data.frame R Number simulations. Note default R=100 low. type type prediction required, see predict.glm. default glm models scale response variable. Thus binomial model default predictions predicted probabilities. ... arguments passed boot::boot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap simulation for model prediction — bootPredict","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap simulation for model prediction — bootPredict","text":"","code":"data(GBSG2,package=\"TH.data\") fit=glm(cens~horTh+pnodes,data=GBSG2,family=\"binomial\") newdata=expand.grid(horTh=factor(c(1,2),labels=c(\"no\",\"yes\")),pnodes=1:51) bootPredict(fit,newdata) #>     horTh pnodes  estimate     lower     upper #> 1      no      1 0.3671628 0.3074136 0.4264829 #> 2     yes      1 0.2814584 0.1954920 0.3672133 #> 3      no      2 0.3927672 0.3401436 0.4502458 #> 4     yes      2 0.3039568 0.2195080 0.3851999 #> 5      no      3 0.4189750 0.3694824 0.4740970 #> 6     yes      3 0.3274340 0.2455924 0.4057317 #> 7      no      4 0.4456481 0.4001651 0.4997850 #> 8     yes      4 0.3518080 0.2721168 0.4275000 #> 9      no      5 0.4726379 0.4233148 0.5246407 #> 10    yes      5 0.3769795 0.2969754 0.4508624 #> 11     no      6 0.4997887 0.4471887 0.5535450 #> 12    yes      6 0.4028326 0.3231002 0.4842449 #> 13     no      7 0.5269407 0.4696532 0.5869590 #> 14    yes      7 0.4292372 0.3503813 0.5140424 #> 15     no      8 0.5539343 0.4878960 0.6247307 #> 16    yes      8 0.4560509 0.3760826 0.5459068 #> 17     no      9 0.5806134 0.5052153 0.6616456 #> 18    yes      9 0.4831217 0.3995407 0.5805505 #> 19     no     10 0.6068295 0.5228595 0.6924300 #> 20    yes     10 0.5102919 0.4235190 0.6144186 #> 21     no     11 0.6324443 0.5395516 0.7212103 #> 22    yes     11 0.5374015 0.4478955 0.6471939 #> 23     no     12 0.6573325 0.5537485 0.7482262 #> 24    yes     12 0.5642918 0.4675824 0.6807978 #> 25     no     13 0.6813846 0.5681601 0.7743526 #> 26    yes     13 0.5908091 0.4856817 0.7127058 #> 27     no     14 0.7045073 0.5836430 0.7999318 #> 28    yes     14 0.6168084 0.5038180 0.7426246 #> 29     no     15 0.7266252 0.5989642 0.8232678 #> 30    yes     15 0.6421564 0.5205386 0.7704251 #> 31     no     16 0.7476805 0.6140957 0.8444066 #> 32    yes     16 0.6667336 0.5347877 0.7960408 #> 33     no     17 0.7676327 0.6281740 0.8634325 #> 34    yes     17 0.6904365 0.5489807 0.8194615 #> 35     no     18 0.7864578 0.6418497 0.8804580 #> 36    yes     18 0.7131789 0.5630943 0.8407246 #> 37     no     19 0.8041469 0.6552982 0.8956147 #> 38    yes     19 0.7348919 0.5774059 0.8599055 #> 39     no     20 0.8207047 0.6685015 0.9090458 #> 40    yes     20 0.7555247 0.5916657 0.8771087 #> 41     no     21 0.8361480 0.6814432 0.9208994 #> 42    yes     21 0.7750433 0.6057706 0.8923719 #> 43     no     22 0.8505034 0.6941085 0.9313233 #> 44    yes     22 0.7934296 0.6202165 0.9056746 #> 45     no     23 0.8638059 0.7066295 0.9404609 #> 46    yes     23 0.8106802 0.6348674 0.9174849 #> 47     no     24 0.8760972 0.7190443 0.9484489 #> 48    yes     24 0.8268046 0.6492723 0.9279341 #> 49     no     25 0.8874238 0.7311298 0.9554150 #> 50    yes     25 0.8418238 0.6634097 0.9371507 #> 51     no     26 0.8978357 0.7428769 0.9614773 #> 52    yes     26 0.8557676 0.6772601 0.9452580 #> 53     no     27 0.9073851 0.7542785 0.9667432 #> 54    yes     27 0.8686741 0.6908059 0.9523725 #> 55     no     28 0.9161253 0.7653293 0.9713102 #> 56    yes     28 0.8805867 0.7040311 0.9586029 #> 57     no     29 0.9241097 0.7760254 0.9752656 #> 58    yes     29 0.8915537 0.7169220 0.9640490 #> 59     no     30 0.9313909 0.7863648 0.9786872 #> 60    yes     30 0.9016260 0.7294668 0.9688019 #> 61     no     31 0.9380204 0.7963465 0.9816440 #> 62    yes     31 0.9108563 0.7416555 0.9729440 #> 63     no     32 0.9440478 0.8059714 0.9841970 #> 64    yes     32 0.9192981 0.7531343 0.9766274 #> 65     no     33 0.9495206 0.8151933 0.9863995 #> 66    yes     33 0.9270045 0.7635614 0.9799608 #> 67     no     34 0.9544839 0.8237286 0.9882984 #> 68    yes     34 0.9340278 0.7736798 0.9828266 #> 69     no     35 0.9589802 0.8319484 0.9899348 #> 70    yes     35 0.9404188 0.7834872 0.9852881 #> 71     no     36 0.9630496 0.8398571 0.9913441 #> 72    yes     36 0.9462263 0.7929823 0.9874009 #> 73     no     37 0.9667293 0.8474595 0.9925575 #> 74    yes     37 0.9514970 0.8021652 0.9892131 #> 75     no     38 0.9700539 0.8547612 0.9936017 #> 76    yes     38 0.9562749 0.8110366 0.9907666 #> 77     no     39 0.9730556 0.8617682 0.9945001 #> 78    yes     39 0.9606016 0.8195984 0.9920979 #> 79     no     40 0.9757639 0.8684870 0.9952729 #> 80    yes     40 0.9645161 0.8278987 0.9932382 #> 81     no     41 0.9782061 0.8749247 0.9959375 #> 82    yes     41 0.9680546 0.8359923 0.9942147 #> 83     no     42 0.9804072 0.8810884 0.9965089 #> 84    yes     42 0.9712507 0.8437758 0.9950506 #> 85     no     43 0.9823899 0.8869858 0.9970001 #> 86    yes     43 0.9741357 0.8512541 0.9957661 #> 87     no     44 0.9841753 0.8926246 0.9974223 #> 88    yes     44 0.9767380 0.8584331 0.9963759 #> 89     no     45 0.9857822 0.8980126 0.9977852 #> 90    yes     45 0.9790842 0.8653189 0.9968943 #> 91     no     46 0.9872281 0.9031581 0.9980970 #> 92    yes     46 0.9811982 0.8719183 0.9973386 #> 93     no     47 0.9885287 0.9080689 0.9983650 #> 94    yes     47 0.9831023 0.8782384 0.9977194 #> 95     no     48 0.9896982 0.9127533 0.9985953 #> 96    yes     48 0.9848165 0.8842866 0.9980457 #> 97     no     49 0.9907496 0.9172194 0.9987931 #> 98    yes     49 0.9863593 0.8900705 0.9983254 #> 99     no     50 0.9916946 0.9214753 0.9989631 #> 100   yes     50 0.9877472 0.8955981 0.9985650 #> 101    no     51 0.9925437 0.9255288 0.9991092 #> 102   yes     51 0.9889955 0.9008774 0.9987703 library(survival) fit=coxph(Surv(time,cens)~age+horTh+progrec+pnodes,data=GBSG2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/countGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Count groups — countGroups","title":"Count groups — countGroups","text":"Count groups","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/countGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count groups — countGroups","text":"","code":"countGroups(data, yvars)"},{"path":"https://cardiomoon.github.io/autoReg/reference/countGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count groups — countGroups","text":"data data.frame yvars variable names","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/countGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count groups — countGroups","text":"object class \"tibble\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/countGroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count groups — countGroups","text":"","code":"library(moonBook) countGroups(acs,\"sex\") #> # A tibble: 2 × 2 #>   sex    n       #>   <chr>  <chr>   #> 1 Female (N=287) #> 2 Male   (N=570) countGroups(acs,c(\"sex\",\"Dx\")) #> # A tibble: 6 × 3 #>   sex    Dx              n       #>   <chr>  <chr>           <chr>   #> 1 Female NSTEMI          (N=50)  #> 2 Female STEMI           (N=84)  #> 3 Female Unstable Angina (N=153) #> 4 Male   NSTEMI          (N=103) #> 5 Male   STEMI           (N=220) #> 6 Male   Unstable Angina (N=247)"},{"path":"https://cardiomoon.github.io/autoReg/reference/coxzphplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical Test of Proportional Hazards — coxzphplot","title":"Graphical Test of Proportional Hazards — coxzphplot","text":"Tis ggplot version plot.cox.zph. Displays graph scaled Schoenfeld residuals, along smooth curve.","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/coxzphplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical Test of Proportional Hazards — coxzphplot","text":"","code":"coxzphplot(x, resid = TRUE, se = TRUE, var = NULL, hr = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/coxzphplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical Test of Proportional Hazards — coxzphplot","text":"x result cox.zph function. resid logical value, TRUE residuals included plot, well smooth fit. se logical value, TRUE, confidence bands two standard errors added. var set variables plots desired. can integer variable names hr logical true, plot hazard ratio, false, plot coefficients","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/coxzphplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical Test of Proportional Hazards — coxzphplot","text":"facetted ggplot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/coxzphplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical Test of Proportional Hazards — coxzphplot","text":"","code":"library(survival) vfit <- coxph(Surv(time,status) ~ trt + factor(celltype) + karno + age, data=veteran, x=TRUE) x <- cox.zph(vfit) coxzphplot(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract statistics from an object of class crr — crr2stats","title":"Extract statistics from an object of class crr — crr2stats","text":"Extract statistics object class crr","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract statistics from an object of class crr — crr2stats","text":"","code":"crr2stats(x, digits = 2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract statistics from an object of class crr — crr2stats","text":"x object class crr digits integer indication position decimal place","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract statistics from an object of class crr — crr2stats","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract statistics from an object of class crr — crr2stats","text":"","code":"data(melanoma,package=\"boot\") melanoma$status_crr=ifelse(melanoma$status==1,1,ifelse(melanoma$status==2,0,2)) x=crrFormula(time+status_crr~age+sex+thickness+ulcer,data=melanoma) crr2stats(x) #>                 HR     lower    upper      p        id                    stats #> age       1.005945 0.9877942 1.024430 0.5200       age 1.01 (0.99-1.02, p=.520) #> sex       1.499349 0.8736380 2.573204 0.1400       sex 1.50 (0.87-2.57, p=.140) #> thickness 1.094169 1.0149120 1.179615 0.0190 thickness 1.09 (1.01-1.18, p=.019) #> ulcer     3.091416 1.7055657 5.603335 0.0002     ulcer 3.09 (1.71-5.60, p<.001)"},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risk Regression with Formula — crrFormula","title":"Competing Risk Regression with Formula — crrFormula","text":"Competing Risk Regression Formula","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risk Regression with Formula — crrFormula","text":"","code":"crrFormula(x, data, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risk Regression with Formula — crrFormula","text":"x formula time+status~explanatory variables data data data.frame ... arguments passed crr","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Competing Risk Regression with Formula — crrFormula","text":"object class \"crr\" described crr","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Competing Risk Regression with Formula — crrFormula","text":"","code":"data(melanoma,package=\"boot\") melanoma$status_crr=ifelse(melanoma$status==1,1,ifelse(melanoma$status==2,0,2)) crrFormula(time+status_crr~age+sex+thickness+ulcer,data=melanoma) #> convergence:  TRUE  #> coefficients: #>       age       sex thickness     ulcer  #>  0.005928  0.405000  0.089990  1.129000  #> standard errors: #> [1] 0.00929 0.27560 0.03836 0.30340 #> two-sided p-values: #>       age       sex thickness     ulcer  #>    0.5200    0.1400    0.0190    0.0002"},{"path":"https://cardiomoon.github.io/autoReg/reference/descNum.html","id":null,"dir":"Reference","previous_headings":"","what":"Make description for numeric summary — descNum","title":"Make description for numeric summary — descNum","text":"Make description numeric summary","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/descNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make description for numeric summary — descNum","text":"","code":"descNum(method = 1, p = NULL)"},{"path":"https://cardiomoon.github.io/autoReg/reference/descNum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make description for numeric summary — descNum","text":"method numeric p numeric NULL","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/descNum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make description for numeric summary — descNum","text":"character vector length 1","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/df2flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame to flextable — df2flextable","title":"Convert data.frame to flextable — df2flextable","text":"Convert data.frame flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/df2flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame to flextable — df2flextable","text":"","code":"df2flextable(   df,   vanilla = FALSE,   fontname = NULL,   fontsize = 12,   add.rownames = FALSE,   even_header = \"transparent\",   odd_header = \"#5B7778\",   even_body = \"#EFEFEF\",   odd_body = \"transparent\",   vlines = TRUE,   colorheader = FALSE,   digits = 2,   digitp = 3,   align_header = \"center\",   align_body = \"right\",   align_rownames = \"left\",   NA2space = TRUE,   pcol = NULL,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/df2flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame to flextable — df2flextable","text":"df data.frame vanilla Logical fontname Font name fontsize font size add.rownames logical. Whether include rownames even_header background color even_header odd_header background color even_header even_body background color even_body odd_body background color even_body vlines Logical. Whether draw vertical lines colorheader Logical. Whether use color header digits integer indicating number decimal places digitp integer indicating number decimal places p values align_header alignment header. Expected value one 'left', 'right', 'center', 'justify'. align_body alignment body. Expected value one 'left', 'right', 'center', 'justify'. align_rownames alignment rownames. Expected value one 'left', 'right', 'center', 'justify'. NA2space logical. true, convert NA value space pcol integer indicating p value. specified, convert value less 0.01 \"< 0.001\" given column. ... arguments passed flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/df2flextable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.frame to flextable — df2flextable","text":"object class \"flextable\" described flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":null,"dir":"Reference","previous_headings":"","what":"draw line character — drawline","title":"draw line character — drawline","text":"draw line character","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw line character — drawline","text":"","code":"drawline(n)"},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw line character — drawline","text":"n Numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"draw line character — drawline","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"draw line character — drawline","text":"","code":"drawline(10) #> ——————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw an expected plot — expectedPlot","title":"Draw an expected plot — expectedPlot","text":"Draw expected plot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw an expected plot — expectedPlot","text":"","code":"expectedPlot(   fit,   xnames = NULL,   maxy.lev = 5,   median = TRUE,   facet = NULL,   se = FALSE,   mark.time = FALSE,   type = \"ggplot\",   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw an expected plot — expectedPlot","text":"fit object class \"coxph\" xnames Character Names explanatory variable plot maxy.lev Integer Maximum unique length numeric variable treated categorical variables median Logical facet Character Name facet variable se logical Whether show se mark.time logical Whether mark time type Character plot type ... arguments passed plot.survfit","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw an expected plot — expectedPlot","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw an expected plot — expectedPlot","text":"","code":"library(survival) fit=coxph(Surv(time,status)~rx+logWBC,data=anderson) expectedPlot(fit,type=\"plot\")  expectedPlot(fit)  data(cancer,package=\"survival\") fit=coxph(Surv(time,status)~rx+strata(sex)+age+differ,data =colon) expectedPlot(fit,xnames=c(\"sex\"))  expectedPlot(fit,xnames=c(\"sex\",\"rx\"))  expectedPlot(fit,xnames=c(\"rx\",\"sex\",\"differ\"),facet=c(\"sex\",\"rx\"))"},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw an expected plot for a numeric predictor — expectedPlot2","title":"Draw an expected plot for a numeric predictor — expectedPlot2","text":"Select cutpoint numeric predictor maxstat.test() draw survival plot cutpoint","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw an expected plot for a numeric predictor — expectedPlot2","text":"","code":"expectedPlot2(   fit,   xname = NULL,   no = 2,   maxy.lev = 5,   median = TRUE,   mark.time = FALSE,   se = FALSE,   type = \"ggplot\",   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw an expected plot for a numeric predictor — expectedPlot2","text":"fit object class \"coxph\" xname Character Name explanatory variable plot integer Number groups made maxy.lev Integer Maximum unique length numeric variable treated categorical variables median Logical mark.time logical Whether mark time se logical Whether show se type Character \"plot\" \"ggplot\" ... arguments passed plot.survfit","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw an expected plot for a numeric predictor — expectedPlot2","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/expectedPlot2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw an expected plot for a numeric predictor — expectedPlot2","text":"","code":"library(survival) data(cancer,package=\"survival\") fit=coxph(Surv(time,status)~age+sex,data =colon) expectedPlot2(fit,xname=\"age\")  fit=coxph(Surv(time,status)~rx+logWBC,data=anderson) expectedPlot2(fit,xname=\"logWBC\",no=3)"},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":null,"dir":"Reference","previous_headings":"","what":"filldown vector with lead value — filldown","title":"filldown vector with lead value — filldown","text":"filldown vector lead value","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filldown vector with lead value — filldown","text":"","code":"filldown(x, what = c(\"\", NA))"},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filldown vector with lead value — filldown","text":"x vector Values filled","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filldown vector with lead value — filldown","text":"vector class x","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"filldown vector with lead value — filldown","text":"","code":"x=rep(1:5,each=3) x=removeDup(x,NA) filldown(x) #>  [1] 1 1 1 2 2 2 3 3 3 4 4 4 5 5 5"},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":null,"dir":"Reference","previous_headings":"","what":"Find first duplicated position — find1stDup","title":"Find first duplicated position — find1stDup","text":"Find first duplicated position","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find first duplicated position — find1stDup","text":"","code":"find1stDup(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find first duplicated position — find1stDup","text":"x vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find first duplicated position — find1stDup","text":"logical vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find first duplicated position — find1stDup","text":"","code":"x=rep(1:5,each=3) which(find1stDup(x)) #> [1]  1  4  7 10 13"},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":null,"dir":"Reference","previous_headings":"","what":"Find duplicated term — findDup","title":"Find duplicated term — findDup","text":"Find duplicated term","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find duplicated term — findDup","text":"","code":"findDup(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find duplicated term — findDup","text":"x vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find duplicated term — findDup","text":"logical vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find duplicated term — findDup","text":"","code":"x=rep(1:5,each=3) findDup(x) #>  [1] FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE #> [13] FALSE  TRUE  TRUE x=c(6,x) findDup(x) #>  [1] FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE #> [13]  TRUE FALSE  TRUE  TRUE which(!findDup(x)) #> [1]  1  2  5  8 11 14"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":null,"dir":"Reference","previous_headings":"","what":"Make final model using stepwise backward elimination — fit2final","title":"Make final model using stepwise backward elimination — fit2final","text":"Make final model using stepwise backward elimination","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make final model using stepwise backward elimination — fit2final","text":"","code":"fit2final(fit, threshold = 0.2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make final model using stepwise backward elimination — fit2final","text":"fit object class \"coxph\" threshold Numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make final model using stepwise backward elimination — fit2final","text":"object class \"coxph\" described coxph","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make final model using stepwise backward elimination — fit2final","text":"","code":"require(survival) data(cancer) fit=coxph(Surv(time,status)~age+sex+obstruct+perfor,data=colon) final=fit2final(fit) fit2summary(final) #>                id                    stats #> obstruct obstruct 1.27 (1.09-1.49, p=.003)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2lik.html","id":null,"dir":"Reference","previous_headings":"","what":"extract likelihood information with a coxph object — fit2lik","title":"extract likelihood information with a coxph object — fit2lik","text":"extract likelihood information coxph object","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2lik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract likelihood information with a coxph object — fit2lik","text":"","code":"fit2lik(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2lik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract likelihood information with a coxph object — fit2lik","text":"x object class \"coxph\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2lik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract likelihood information with a coxph object — fit2lik","text":"string","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2lik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract likelihood information with a coxph object — fit2lik","text":"","code":"library(survival) fit=coxph(Surv(time,status) ~rx,data=anderson) fit2lik(fit) #> [1] \"n=42, events=30, Likelihood ratio test=16.35 on 1 df (p<.001)\""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a list of univariable model with multivariable regression model — fit2list","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"Make list univariable model multivariable regression model","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"","code":"fit2list(fit)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"fit object class \"lm\" \"glm\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"object class \"fitlist\" list objects class \"lm\" \"glm\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"","code":"library(survival) data(cancer) fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") fit2list(fit) #> [[1]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)        rxLev    rxLev+5FU   #>     0.19290     -0.06774     -0.62670   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1819 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2491 \tAIC: 2497 #>  #> [[2]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)          sex   #>   -0.004598    -0.050038   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1820 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2525 \tAIC: 2529 #>  #> [[3]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)          age   #>    0.211300    -0.004049   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1820 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2524 \tAIC: 2528 #>  #> [[4]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)     obstruct   #>    -0.07895      0.24982   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1820 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2521 \tAIC: 2525 #>  #> [[5]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)        nodes   #>     -0.6886       0.1891   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1820 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2382 \tAIC: 2386 #>  #> attr(,\"class\") #> [1] \"fitlist\" fit=lm(mpg~wt*hp+am,data=mtcars) fit2list(fit) #> [[1]] #>  #> Call: #> lm(formula = as.formula(myformula), data = data) #>  #> Coefficients: #> (Intercept)           wt   #>      37.285       -5.344   #>  #>  #> [[2]] #>  #> Call: #> lm(formula = as.formula(myformula), data = data) #>  #> Coefficients: #> (Intercept)           hp   #>    30.09886     -0.06823   #>  #>  #> [[3]] #>  #> Call: #> lm(formula = as.formula(myformula), data = data) #>  #> Coefficients: #> (Intercept)           am   #>      17.147        7.245   #>  #>  #> [[4]] #>  #> Call: #> lm(formula = as.formula(myformula), data = data) #>  #> Coefficients: #> (Intercept)        wt:hp   #>    27.74564     -0.01487   #>  #>  #> attr(,\"class\") #> [1] \"fitlist\""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore fit model data containing AsIs expressions — fit2model","title":"Restore fit model data containing AsIs expressions — fit2model","text":"Restore fit model data containing AsIs expressions","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore fit model data containing AsIs expressions — fit2model","text":"","code":"fit2model(fit)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore fit model data containing AsIs expressions — fit2model","text":"fit object class \"lm\", \"glm\" \"coxph\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore fit model data containing AsIs expressions — fit2model","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restore fit model data containing AsIs expressions — fit2model","text":"","code":"require(survival) pbc$status2=ifelse(pbc$status==2,1,0) fit=coxph(Surv(time,status2)~age+log(bili),data=pbc) fit2model(fit) #> Error in eval(predvars, data, env): object 'status2' not found"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"Make multivariable regression model selecting univariable models p.value threshold","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"","code":"fit2multi(fit, threshold = 0.2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"fit object class \"coxph\" threshold Numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"object class \"coxph\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"","code":"require(survival) data(cancer) fit=coxph(Surv(time,status)~age+sex+obstruct+perfor,data=colon) fit2multi(fit) #> Call: #> coxph(formula = Surv(time, status) ~ obstruct + perfor, data = colon) #>  #>             coef exp(coef) se(coef)     z       p #> obstruct 0.23061   1.25937  0.08125 2.838 0.00453 #> perfor   0.19189   1.21154  0.18189 1.055 0.29144 #>  #> Likelihood ratio test=9.7  on 2 df, p=0.007821 #> n= 1858, number of events= 920"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2newdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a new data of mean value or most frequent value — fit2newdata","title":"Make a new data of mean value or most frequent value — fit2newdata","text":"Make new data mean value frequent value","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2newdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a new data of mean value or most frequent value — fit2newdata","text":"","code":"fit2newdata(fit, xnames = NULL, maxy.lev = 5, median = TRUE, digits = 1)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2newdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a new data of mean value or most frequent value — fit2newdata","text":"fit object class \"coxph\" xnames character Names explanatory variable plot maxy.lev Integer Maximum unique length numeric variable treated categorical variables median logical TRUE, select median value numerical variable. Otherwise select frequent value digits integer indicating number decimal places","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2newdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a new data of mean value or most frequent value — fit2newdata","text":"data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2newdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a new data of mean value or most frequent value — fit2newdata","text":"","code":"require(survival) data(cancer,package=\"survival\") fit=coxph(Surv(time,status)~rx+sex+age,data=colon) fit=coxph(Surv(time,status)~rx+age+strata(sex),data=colon) fit2newdata(fit) #>        rx age sex #> 1     Obs  61   1 #> 2     Lev  61   1 #> 3 Lev+5FU  61   1"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize statistics with a model — fit2stats","title":"Summarize statistics with a model — fit2stats","text":"Summarize statistics model","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize statistics with a model — fit2stats","text":"","code":"fit2stats(fit, method = \"default\", digits = 2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize statistics with a model — fit2stats","text":"fit object class lm glm method character choices one c(\"likelihood\",\"wald\") digits integer indicating number decimal places","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize statistics with a model — fit2stats","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize statistics with a model — fit2stats","text":"","code":"library(survival) data(cancer) fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") fit2stats(fit) #>               OR lower upper      p          id                    stats #> (Intercept) 0.53  0.30  0.92 0.0246 (Intercept) 0.53 (0.30-0.92, p=.025) #> rxLev       0.94  0.74  1.18 0.5757       rxLev 0.94 (0.74-1.18, p=.576) #> rxLev+5FU   0.53  0.42  0.68 0.0000   rxLev+5FU 0.53 (0.42-0.68, p<.001) #> sex         0.95  0.78  1.15 0.5885         sex 0.95 (0.78-1.15, p=.589) #> age         1.00  0.99  1.01 0.5826         age 1.00 (0.99-1.01, p=.583) #> obstruct    1.34  1.05  1.72 0.0178    obstruct 1.34 (1.05-1.72, p=.018) #> nodes       1.21  1.17  1.25 0.0000       nodes 1.21 (1.17-1.25, p<.001) fit=lm(mpg~wt*hp+am,data=mtcars) fit2stats(fit) #>                      id    Estimate        lower       upper #> (Intercept) (Intercept) 49.45224079  38.61707633 60.28740526 #> wt                   wt -8.10055755 -11.77194963 -4.42916547 #> hp                   hp -0.11930318  -0.17377926 -0.06482709 #> am                   am  0.12510693  -2.61086742  2.86108128 #> wt:hp             wt:hp  0.02748826   0.01010407  0.04487245 #>                                       stats #> (Intercept)  49.45 (38.62 to 60.29, p<.001) #> wt          -8.10 (-11.77 to -4.43, p<.001) #> hp           -0.12 (-0.17 to -0.06, p<.001) #> am             0.13 (-2.61 to 2.86, p=.926) #> wt:hp           0.03 (0.01 to 0.04, p=.003)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize statistics with a model or model list — fit2summary","title":"Summarize statistics with a model or model list — fit2summary","text":"Summarize statistics model model list","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize statistics with a model or model list — fit2summary","text":"","code":"fit2summary(fit, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize statistics with a model or model list — fit2summary","text":"fit object class \"lm\" \"glm\" \"fitlist\" result fit2list ... argument passed fit2stats","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize statistics with a model or model list — fit2summary","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize statistics with a model or model list — fit2summary","text":"","code":"library(survival) data(cancer) fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") fit2summary(fit) #>                      id                    stats #> (Intercept) (Intercept) 0.53 (0.30-0.92, p=.025) #> rxLev             rxLev 0.94 (0.74-1.18, p=.576) #> rxLev+5FU     rxLev+5FU 0.53 (0.42-0.68, p<.001) #> sex                 sex 0.95 (0.78-1.15, p=.589) #> age                 age 1.00 (0.99-1.01, p=.583) #> obstruct       obstruct 1.34 (1.05-1.72, p=.018) #> nodes             nodes 1.21 (1.17-1.25, p<.001) fitlist=fit2list(fit) fit2summary(fitlist) #>                  id                    stats #> rxLev         rxLev 0.93 (0.75-1.17, p=.554) #> rxLev+5FU rxLev+5FU 0.53 (0.43-0.67, p<.001) #> sex             sex 0.95 (0.79-1.14, p=.594) #> age             age 1.00 (0.99-1.00, p=.305) #> obstruct   obstruct 1.28 (1.02-1.62, p=.036) #> nodes         nodes 1.21 (1.17-1.25, p<.001)"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.formula_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce table for descriptive statistics — gaze.formula_sub","title":"Produce table for descriptive statistics — gaze.formula_sub","text":"Produce table descriptive statistics groups several variables easily. Depending  nature variables, different descriptive statistical methods used(t-test, ANOVA, Kruskal-Wallis, chi-squared, Fisher's,...)","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.formula_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce table for descriptive statistics — gaze.formula_sub","text":"","code":"# S3 method for formula_sub gaze(x, data, missing = FALSE, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.formula_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce table for descriptive statistics — gaze.formula_sub","text":"x object class \"formula\". Left side ~ must contain name one grouping variable two grouping variables additive way(e.g. sex+group~), right side ~ must variables additive way. data data.frame missing logical true, missing value analysis performed ... arguments passed gaze()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.formula_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce table for descriptive statistics — gaze.formula_sub","text":"object class \"gaze\" inherits class \"data.frame\" least following attributes: attr(*,\"yvars) character. name dependent variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce table for descriptive statistics — gaze","title":"Produce table for descriptive statistics — gaze","text":"Produce table descriptive statistics groups several variables easily. Depending  nature variables, different descriptive statistical methods used(t-test, ANOVA, Kruskal-Wallis, chi-squared, Fisher's,...)","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce table for descriptive statistics — gaze","text":"","code":"gaze(x, ...)  # S3 method for formula gaze(x, ...)  # S3 method for data.frame gaze(x, ...)  # S3 method for coxph gaze(x, ...)  # S3 method for glm gaze(x, ...)  # S3 method for lm gaze(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce table for descriptive statistics — gaze","text":"x R object, formula data.frame ... arguments passed gaze.data.frame gaze.formula","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce table for descriptive statistics — gaze","text":"object class \"gaze\" inherits class \"data.frame\" least following attributes: attr(*,\"yvars) character. name dependent variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Produce table for descriptive statistics — gaze","text":"formula: S3 method formula data.frame: default S3 method coxph: default S3 method glm: default S3 method lm: default S3 method","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce table for descriptive statistics — gaze","text":"","code":"library(moonBook) library(dplyr) gaze(acs) #> ————————————————————————————————————————————————— #>        name            levels          stats      #> ————————————————————————————————————————————————— #> age               Mean ± SD           63.3 ± 11.7  #> sex               Female              287 (33.5%)  #>                   Male                570 (66.5%)  #> cardiogenicShock  No                  805 (93.9%)  #>                   Yes                   52 (6.1%)  #> entry             Femoral             312 (36.4%)  #>                   Radial              545 (63.6%)  #> Dx                NSTEMI              153 (17.9%)  #>                   STEMI               304 (35.5%)  #>                   Unstable Angina     400 (46.7%)  #> EF                Mean ± SD            55.8 ± 9.6  #> height            Mean ± SD           163.2 ± 9.1  #> weight            Mean ± SD           64.8 ± 11.4  #> BMI               Mean ± SD            24.3 ± 3.3  #> obesity           No                  567 (66.2%)  #>                   Yes                 290 (33.8%)  #> TC                Mean ± SD          185.2 ± 47.8  #> LDLC              Mean ± SD          116.6 ± 41.1  #> HDLC              Mean ± SD           38.2 ± 11.1  #> TG                Mean ± SD          125.2 ± 90.9  #> DM                No                  553 (64.5%)  #>                   Yes                 304 (35.5%)  #> HBP               No                  356 (41.5%)  #>                   Yes                 501 (58.5%)  #> smoking           Ex-smoker           204 (23.8%)  #>                   Never               332 (38.7%)  #>                   Smoker              321 (37.5%)  #> ————————————————————————————————————————————————— gaze(~age+sex,data=acs) #> —————————————————————————————— #>  name   levels       stats     #> —————————————————————————————— #> age   Mean ± SD    63.3 ± 11.7  #> sex   Female       287 (33.5%)  #>       Male         570 (66.5%)  #> —————————————————————————————— gaze(sex~.,data=acs,digits=1,method=1,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `Female (N=287)`, `Male (N=570)`, `p`  #> header has 1 row(s)  #> body has 25 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————————————— #>   Dependent:sex     levels        Female          Male        p    #>        (N)                       (N=287)        (N=570)            #> —————————————————————————————————————————————————————————————————— #> age               Mean ± SD       68.7 ± 10.7   60.6 ± 11.2  <.001  #> cardiogenicShock  No              275 (95.8%)     530 (93%)   .136  #>                   Yes               12 (4.2%)       40 (7%)         #> entry             Femoral         119 (41.5%)   193 (33.9%)   .035  #>                   Radial          168 (58.5%)   377 (66.1%)         #> —————————————————————————————————————————————————————————————————— # \\donttest{ gaze(sex~age+Dx,data=acs) #> ————————————————————————————————————————————————————————————————————— #>  Dependent:sex      levels           Female          Male        p    #>       (N)                           (N=287)        (N=570)            #> ————————————————————————————————————————————————————————————————————— #> age            Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  #> Dx             NSTEMI                 50 (17.4%)   103 (18.1%)   .012  #>                STEMI                  84 (29.3%)   220 (38.6%)         #>                Unstable Angina       153 (53.3%)   247 (43.3%)         #> ————————————————————————————————————————————————————————————————————— gaze(EF~.,data=acs) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `unit`, `value`  #> header has 1 row(s)  #> body has 26 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————— #>    Dependent:EF        levels        unit        value     #> —————————————————————————————————————————————————————————— #> age               [28,91]           Mean ± SD  63.3 ± 11.7  #> sex               Female (N=287)    Mean ± SD  56.3 ± 10.1  #>                   Male   (N=570)    Mean ± SD   55.6 ± 9.4  #> cardiogenicShock  No  (N=805)       Mean ± SD   56.1 ± 9.4  #>                   Yes (N=52)        Mean ± SD  50.2 ± 11.6  #> —————————————————————————————————————————————————————————— gaze(sex+Dx~.,data=acs,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `NSTEMI (N=50)`, `STEMI (N=84)`, `Unstable Angina (N=153)`, `p`, `NSTEMI (N=103)`, `STEMI (N=220)`, `Unstable Angina (N=247)`, `p  `  #> header has 2 row(s)  #> body has 22 row(s)  #> original dataset sample:  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>            sex (N)                                  Female (N=287)                                                 Male (N=570)                            #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>    Dependent:Dx     levels       NSTEMI         STEMI          Unstable Angina        p        NSTEMI          STEMI          Unstable Angina        p    #>        (N)                       (N=50)         (N=84)             (N=153)                    (N=103)         (N=220)             (N=247)                 #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD      70.9 ± 11.4   69.1 ± 10.4              67.7 ± 10.7   .177     61.1 ± 11.6    59.4 ± 11.7              61.4 ± 10.6   .133  #> cardiogenicShock  No                49 (98%)    73 (86.9%)               153 (100%)  <.001     100 (97.1%)    183 (83.2%)               247 (100%)  <.001  #>                   Yes                 1 (2%)    11 (13.1%)                   0 (0%)               3 (2.9%)     37 (16.8%)                   0 (0%)         #> entry             Femoral           22 (44%)    45 (53.6%)                 52 (34%)   .013        36 (35%)       88 (40%)               69 (27.9%)   .022  #>                   Radial            28 (56%)    39 (46.4%)                101 (66%)               67 (65%)      132 (60%)              178 (72.1%)         #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(sex+Dx~.,data=acs) #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>            sex (N)                                  Female (N=287)                                                 Male (N=570)                            #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>    Dependent:Dx     levels       NSTEMI         STEMI          Unstable Angina        p        NSTEMI          STEMI          Unstable Angina        p    #>        (N)                       (N=50)         (N=84)             (N=153)                    (N=103)         (N=220)             (N=247)                 #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD      70.9 ± 11.4   69.1 ± 10.4              67.7 ± 10.7   .177     61.1 ± 11.6    59.4 ± 11.7              61.4 ± 10.6   .133  #> cardiogenicShock  No                49 (98%)    73 (86.9%)               153 (100%)  <.001     100 (97.1%)    183 (83.2%)               247 (100%)  <.001  #>                   Yes                 1 (2%)    11 (13.1%)                   0 (0%)               3 (2.9%)     37 (16.8%)                   0 (0%)         #> entry             Femoral           22 (44%)    45 (53.6%)                 52 (34%)   .013        36 (35%)       88 (40%)               69 (27.9%)   .022  #>                   Radial            28 (56%)    39 (46.4%)                101 (66%)               67 (65%)      132 (60%)              178 (72.1%)         #> EF                Mean ± SD       54.8 ± 9.1   52.3 ± 10.9               59.4 ± 8.8  <.001      55.1 ± 9.4     52.4 ± 8.9               59.1 ± 8.7  <.001  #> height            Mean ± SD      154.2 ± 5.1   155.7 ± 5.4              152.6 ± 6.7   .002     167.5 ± 5.7    168.7 ± 6.0              167.3 ± 6.4   .055  #> weight            Mean ± SD      57.2 ± 10.3    57.4 ± 9.0               57.1 ± 9.1   .978      67.5 ± 8.4    68.8 ± 10.9              69.0 ± 10.6   .479  #> BMI               Mean ± SD       24.1 ± 4.3    23.6 ± 3.2               24.5 ± 3.5   .215      24.1 ± 2.6     24.1 ± 3.4               24.6 ± 3.4   .205  #> obesity           No                35 (70%)    60 (71.4%)               99 (64.7%)   .528      71 (68.9%)    149 (67.7%)              153 (61.9%)   .301  #>                   Yes               15 (30%)    24 (28.6%)               54 (35.3%)             32 (31.1%)     71 (32.3%)               94 (38.1%)         #> TC                Mean ± SD     196.3 ± 52.7  180.7 ± 45.7             191.1 ± 53.1   .192    192.6 ± 54.3   184.1 ± 42.6             178.7 ± 44.6   .036  #> LDLC              Mean ± SD     127.7 ± 39.5  111.0 ± 40.0             118.3 ± 41.8   .088    125.4 ± 47.1   118.9 ± 39.1             109.5 ± 39.2   .002  #> HDLC              Mean ± SD      40.1 ± 13.8   39.5 ± 11.2              38.5 ± 10.8   .627     38.4 ± 10.9    38.1 ± 10.9              37.4 ± 10.9   .655  #> TG                Mean ± SD     112.5 ± 51.1  112.3 ± 87.2             126.3 ± 76.0   .316   138.0 ± 100.2   104.3 ± 65.5            144.3 ± 114.2  <.001  #> DM                No                25 (50%)    54 (64.3%)               94 (61.4%)   .240      71 (68.9%)      154 (70%)              155 (62.8%)   .219  #>                   Yes               25 (50%)    30 (35.7%)               59 (38.6%)             32 (31.1%)       66 (30%)               92 (37.2%)         #> HBP               No                19 (38%)    28 (33.3%)               36 (23.5%)   .084      43 (41.7%)    122 (55.5%)              108 (43.7%)   .016  #>                   Yes               31 (62%)    56 (66.7%)              117 (76.5%)             60 (58.3%)     98 (44.5%)              139 (56.3%)         #> smoking           Ex-smoker          8 (16%)    13 (15.5%)               28 (18.3%)   .184        34 (33%)     53 (24.1%)               68 (27.5%)   .002  #>                   Never             37 (74%)    57 (67.9%)              115 (75.2%)             13 (12.6%)     40 (18.2%)               70 (28.3%)         #>                   Smoker             5 (10%)    14 (16.7%)                10 (6.5%)             56 (54.4%)    127 (57.7%)              109 (44.1%)         #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(Dx+sex~cardiogenicShock,data=acs,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `Female (N=50)`, `Male (N=103)`, `p`, `Female (N=84)`, `Male (N=220)`, `p  `, `Female (N=153)`, `Male (N=247)`, `p   `  #> header has 2 row(s)  #> body has 2 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>           Dx (N)                     NSTEMI (N=153)                      STEMI (N=304)                  Unstable Angina (N=400)         #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:sex    levels     Female          Male        p       Female          Male       p        Female          Male        p    #>        (N)                    (N=50)        (N=103)               (N=84)        (N=220)              (N=153)        (N=247)            #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> cardiogenicShock  No             49 (98%)   100 (97.1%)  1.000     73 (86.9%)   183 (83.2%)  .535      153 (100%)    247 (100%)  1.000  #>                   Yes              1 (2%)      3 (2.9%)            11 (13.1%)    37 (16.8%)                0 (0%)        0 (0%)         #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(Dx+sex+HBP~cardiogenicShock,data=acs,show.p=TRUE) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>             Dx                        NSTEMI                        NSTEMI                         STEMI                          STEMI                      Unstable Angina                  Unstable Angina            #>            sex                        Female                         Male                          Female                          Male                           Female                            Male                 #>            (N)                        (N=50)                        (N=103)                        (N=84)                        (N=220)                         (N=153)                          (N=247)                #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:HBP    levels     No         Yes        p        No         Yes        p        No         Yes       p        No          Yes        p       No          Yes        p         No          Yes         p     #>        (N)                  (N=19)      (N=31)             (N=43)      (N=60)             (N=28)      (N=56)            (N=122)      (N=98)            (N=36)      (N=117)             (N=108)      (N=139)             #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> cardiogenicShock  No        19 (100%)  30 (96.8%)  1.000  42 (97.7%)  58 (96.7%)  1.000  23 (82.1%)  50 (89.3%)  .567  106 (86.9%)  77 (78.6%)   .145  36 (100%)   117 (100%)   1.000  108 (100%)   139 (100%)    1.000  #>                   Yes          0 (0%)    1 (3.2%)           1 (2.3%)    2 (3.3%)          5 (17.9%)   6 (10.7%)         16 (13.1%)  21 (21.4%)            0 (0%)       0 (0%)              0 (0%)       0 (0%)           #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(~mpg+cyl,data=mtcars) #> ————————————————————————————— #>  name   levels      stats     #> ————————————————————————————— #> mpg   Mean ± SD    20.1 ± 6.0  #> cyl   Mean ± SD     6.2 ± 1.8  #> ————————————————————————————— gaze(~.,data=mtcars) #> ———————————————————————————————— #>  name   levels        stats      #> ———————————————————————————————— #> mpg   Mean ± SD       20.1 ± 6.0  #> cyl   Mean ± SD        6.2 ± 1.8  #> disp  Mean ± SD    230.7 ± 123.9  #> hp    Mean ± SD     146.7 ± 68.6  #> drat  Mean ± SD        3.6 ± 0.5  #> wt    Mean ± SD        3.2 ± 1.0  #> qsec  Mean ± SD       17.8 ± 1.8  #> vs    Mean ± SD        0.4 ± 0.5  #> am    Mean ± SD        0.4 ± 0.5  #> gear  Mean ± SD        3.7 ± 0.7  #> carb  Mean ± SD        2.8 ± 1.6  #> ———————————————————————————————— gaze(cyl~.,data=mtcars,show.p=TRUE) #> ——————————————————————————————————————————————————————————————————————————— #>  Dependent:cyl   levels         4             6             8          p    #>       (N)                     (N=11)        (N=7)         (N=14)            #> ——————————————————————————————————————————————————————————————————————————— #> mpg            Mean ± SD      26.7 ± 4.5    19.7 ± 1.5    15.1 ± 2.6  <.001  #> disp           Mean ± SD    105.1 ± 26.9  183.3 ± 41.6  353.1 ± 67.8  <.001  #> hp             Mean ± SD     82.6 ± 20.9  122.3 ± 24.3  209.2 ± 51.0  <.001  #> drat           Mean ± SD       4.1 ± 0.4     3.6 ± 0.5     3.2 ± 0.4  <.001  #> wt             Mean ± SD       2.3 ± 0.6     3.1 ± 0.4     4.0 ± 0.8  <.001  #> qsec           Mean ± SD      19.1 ± 1.7    18.0 ± 1.7    16.8 ± 1.2   .002  #> vs             Mean ± SD       0.9 ± 0.3     0.6 ± 0.5     0.0 ± 0.0  <.001  #> am             Mean ± SD       0.7 ± 0.5     0.4 ± 0.5     0.1 ± 0.4   .010  #> gear           Mean ± SD       4.1 ± 0.5     3.9 ± 0.7     3.3 ± 0.7   .015  #> carb           Mean ± SD       1.5 ± 0.5     3.4 ± 1.8     3.5 ± 1.6   .003  #> ——————————————————————————————————————————————————————————————————————————— gaze(hp~.,data=mtcars) #> ————————————————————————————————————————————————————— #>  Dependent:hp    levels       unit         value      #> ————————————————————————————————————————————————————— #> mpg           [10.4,33.9]    Mean ± SD     20.1 ± 6.0  #> cyl           [4,8]          Mean ± SD      6.2 ± 1.8  #> disp          [71.1,472]     Mean ± SD  230.7 ± 123.9  #> drat          [2.8,4.9]      Mean ± SD      3.6 ± 0.5  #> wt            [1.5,5.4]      Mean ± SD      3.2 ± 1.0  #> qsec          [14.5,22.9]    Mean ± SD     17.8 ± 1.8  #> vs            [0,1]          Mean ± SD      0.4 ± 0.5  #> am            [0,1]          Mean ± SD      0.4 ± 0.5  #> gear          [3,5]          Mean ± SD      3.7 ± 0.7  #> carb          [1,8]          Mean ± SD      2.8 ± 1.6  #> ————————————————————————————————————————————————————— gaze(cyl+am~.,data=mtcars) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>          cyl (N)                     4 (N=11)                          6 (N=7)                           8 (N=14)                #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent:am   levels         0             1        p         0             1         p         0             1          p    #>      (N)                     (N=3)         (N=8)              (N=4)         (N=3)               (N=12)        (N=2)             #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> mpg           Mean ± SD      22.9 ± 1.5   28.1 ± 4.5  .089    19.1 ± 1.6    20.6 ± 0.8  .221    15.1 ± 2.8    15.4 ± 0.6   .866  #> disp          Mean ± SD    135.9 ± 14.0  93.6 ± 20.5  .010  204.6 ± 44.7   155.0 ± 8.7  .124  357.6 ± 71.8  326.0 ± 35.4   .563  #> hp            Mean ± SD     84.7 ± 19.7  81.9 ± 22.7  .856   115.2 ± 9.2  131.7 ± 37.5  .530  194.2 ± 33.4  299.5 ± 50.2   .002  #> drat          Mean ± SD       3.8 ± 0.1    4.2 ± 0.4  .094     3.4 ± 0.6     3.8 ± 0.2  .330     3.1 ± 0.2     3.9 ± 0.5   .002  #> wt            Mean ± SD       2.9 ± 0.4    2.0 ± 0.4  .010     3.4 ± 0.1     2.8 ± 0.1  .001     4.1 ± 0.8     3.4 ± 0.3   .218  #> qsec          Mean ± SD      21.0 ± 1.7   18.4 ± 1.1  .017    19.2 ± 0.8    16.3 ± 0.8  .005    17.1 ± 0.8    14.6 ± 0.1  <.001  #> vs            Mean ± SD       1.0 ± 0.0    0.9 ± 0.4  .351     1.0 ± 0.0     0.0 ± 0.0           0.0 ± 0.0     0.0 ± 0.0         #> gear          Mean ± SD       3.7 ± 0.6    4.2 ± 0.5  .113     3.5 ± 0.6     4.3 ± 0.6  .117     3.0 ± 0.0     5.0 ± 0.0         #> carb          Mean ± SD       1.7 ± 0.6    1.5 ± 0.5  .662     2.5 ± 1.7     4.7 ± 1.2  .122     3.1 ± 0.9     6.0 ± 2.8   .379  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— # } library(survival) x=coxph(Surv(time,status) ~rx,data=anderson1) gaze(x) #> ——————————————————————————————————————————————————————————————————— #>               coef  se(coef)      z  Pr(>|z|)     HR  lower   upper  #> ——————————————————————————————————————————————————————————————————— #> rxControl    1.572     0.412  3.812     <.001  4.817  2.147  10.809  #> ——————————————————————————————————————————————————————————————————— #> n=42, events=30, Likelihood ratio test=16.35 on 1 df (p<.001)  x=coxph(Surv(time,status) ~rx*logWBC,data=anderson1) gaze(x) #> —————————————————————————————————————————————————————————————————————————————— #>                       coef  se(coef)       z  Pr(>|z|)      HR  lower    upper  #> —————————————————————————————————————————————————————————————————————————————— #> rxControl            2.375     1.705   1.393      .164  10.750  0.380  304.162  #> logWBC               1.872     0.451   4.148     <.001   6.504  2.685   15.755  #> rxControl:logWBC    -0.318     0.526  -0.604      .546   0.728  0.260    2.040  #> —————————————————————————————————————————————————————————————————————————————— #> n=42, events=30, Likelihood ratio test=47.07 on 3 df (p<.001)  data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") gaze(fit) #> ——————————————————————————————————————————————————————————————————————————— #>                Estimate  Std. Error  z value  Pr(>|z|)     OR  lower  upper  #> ——————————————————————————————————————————————————————————————————————————— #> (Intercept)      -0.641       0.285   -2.247      .025  0.527  0.301  0.921  #> rxLev            -0.067       0.119   -0.560      .576  0.936  0.741  1.181  #> rxLev+5FU        -0.627       0.122   -5.153     <.001  0.534  0.421  0.678  #> sex              -0.054       0.099   -0.541      .588  0.948  0.781  1.151  #> age               0.002       0.004    0.550      .583  1.002  0.994  1.011  #> obstruct          0.296       0.125    2.370      .018  1.344  1.052  1.716  #> nodes             0.191       0.018   10.457     <.001  1.210  1.168  1.255  #> ——————————————————————————————————————————————————————————————————————————— #> Null deviance: 2525.4(df: 1821), Residual deviance: 2343.6(df: 1815) AIC:2357.6 #>   (36 observations deleted due to missingness) #> Number of Fisher Scoring iterations: 4  fit=lm(mpg~wt*hp+am+I(wt^2),data=mtcars) gaze(fit) #> ——————————————————————————————————————————————————————————————————————— #>                Estimate  Std. Error  t value  Pr(>|t|)    lower   upper  #> ——————————————————————————————————————————————————————————————————————— #> (Intercept)      49.262       5.523    8.920     <.001   37.910  60.614  #> wt               -7.674       3.341   -2.297      .030  -14.542  -0.807  #> hp               -0.127       0.059   -2.164      .040   -0.248  -0.006  #> am                0.167       1.385    0.120      .905   -2.681   3.015  #> I(wt^2)          -0.108       0.712   -0.152      .880   -1.572   1.356  #> wt:hp             0.030       0.017    1.705      .100   -0.006   0.066  #> ——————————————————————————————————————————————————————————————————————— #> Residual SE: 2.233 on 26 DF, Multiple R^2: 0.8849, Adjusted R^2: 0.8628 #> F-statistic: 39.98 on 5 and 26 DF,  p-value: 2.124e-11"},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for categorical variable — gazeCat","title":"Summary function for categorical variable — gazeCat","text":"Summary function categorical variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for categorical variable — gazeCat","text":"","code":"gazeCat(   data,   x,   y = NULL,   max.ylev = 5,   digits = 1,   show.total = FALSE,   show.n = FALSE,   show.missing = FALSE,   show.stats = TRUE,   origData = NULL,   show.p = TRUE,   method = 1,   catMethod = 2,   maxCatLevel = 20,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for categorical variable — gazeCat","text":"data data frame x Name categorical variable y Name variable, either continuous categorical max.ylev max.ylev integer indicating maximum number levels grouping variable ('y'). column unique values less max.ylev treated categorical variable. Default value 5. digits Numeric show.total logical. Whether show total column show.n logical. Whether show N column show.missing logical. Whether show missing column show.stats logical. Whether show stats column origData data.frame containing original data show.p logical. Whether show p column method method    integer indicating methods continuous variables. Possible values methods 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1. catMethod integer indicating methods categorical variables. Possible values methods 0 Perform chisq.test first. warning present, perform fisher test 1 Perform chisq.test without continuity correction 2 Perform chisq.test continuity correction 3 perform fisher.test 4 perform prop.trend test Default value 2. maxCatLevel integer indicating maximum number unique levels categorical variable. column unique values maxCatLevel, categorical summarization performed. ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary function for categorical variable — gazeCat","text":"object class \"data.frame\" \"tibble\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function for categorical variable — gazeCat","text":"","code":"require(moonBook) gazeCat(acs,\"Dx\") #>   name            desc       stats                id        type #> 1   Dx          NSTEMI 153 (17.9%)          DxNSTEMI categorical #> 2                STEMI 304 (35.5%)           DxSTEMI categorical #> 3      Unstable Angina 400 (46.7%) DxUnstable Angina categorical gazeCat(acs,\"Dx\",\"smoking\") #> # A tibble: 3 × 8 #>   name  desc       `Ex-smoker (N=…` `Never (N=332)` `Smoker (N=321)` id    p     #>   <chr> <chr>      <chr>            <chr>           <chr>            <chr> <chr> #> 1 \"Dx\"  NSTEMI     42 (20.6%)       50 (15.1%)      61 (19%)         DxNS… \"<.0… #> 2 \"\"    STEMI      66 (32.4%)       97 (29.2%)      141 (43.9%)      DxST… \"\"    #> 3 \"\"    Unstable … 96 (47.1%)       185 (55.7%)     119 (37.1%)      DxUn… \"\"    #> # … with 1 more variable: type <chr> gazeCat(acs,\"sex\",\"Dx\",show.p=TRUE) #> # A tibble: 2 × 8 #>   name  desc   `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angina (…` id    p     #>   <chr> <chr>  <chr>            <chr>           <chr>                <chr> <chr> #> 1 \"sex\" Female 50 (32.7%)       84 (27.6%)      153 (38.2%)          sexF… \".01… #> 2 \"\"    Male   103 (67.3%)      220 (72.4%)     247 (61.8%)          sexM… \"\"    #> # … with 1 more variable: type <chr> gazeCat(acs,\"Dx\",\"sex\",show.p=TRUE) #> # A tibble: 3 × 7 #>   name  desc            `Female (N=287)` `Male (N=570)` id           p     type  #>   <chr> <chr>           <chr>            <chr>          <chr>        <chr> <chr> #> 1 \"Dx\"  NSTEMI          50 (17.4%)       103 (18.1%)    DxNSTEMI     \".01… cate… #> 2 \"\"    STEMI           84 (29.3%)       220 (38.6%)    DxSTEMI      \"\"    cate… #> 3 \"\"    Unstable Angina 153 (53.3%)      247 (43.3%)    DxUnstable … \"\"    cate… gazeCat(acs,\"Dx\",\"EF\") #> # A tibble: 3 × 6 #>   name  desc                    unit      value      id                type      #>   <chr> <chr>                   <chr>     <chr>      <chr>             <chr>     #> 1 \"Dx\"  NSTEMI          (N=153) Mean ± SD 55.0 ± 9.3 DxNSTEMI          categori… #> 2 \"\"    STEMI           (N=304) Mean ± SD 52.4 ± 9.5 DxSTEMI           categori… #> 3 \"\"    Unstable Angina (N=400) Mean ± SD 59.2 ± 8.7 DxUnstable Angina categori… gazeCat(acs,\"sex\",\"EF\",method=2) #> # A tibble: 2 × 6 #>   name  desc           unit         value               id        type        #>   <chr> <chr>          <chr>        <chr>               <chr>     <chr>       #> 1 \"sex\" Female (N=287) Median (IQR) 59.2 (51.4 to 63.1) sexFemale categorical #> 2 \"\"    Male   (N=570) Median (IQR) 57.3 (50.0 to 61.8) sexMale   categorical gazeCat(mtcars,\"cyl\",\"hp\") #> # A tibble: 3 × 6 #>   name  desc     unit      value        id    type        #>   <chr> <chr>    <chr>     <chr>        <chr> <chr>       #> 1 \"cyl\" 4 (N=11) Mean ± SD 82.6 ± 20.9  cyl4  categorical #> 2 \"\"    6 (N=7)  Mean ± SD 122.3 ± 24.3 cyl6  categorical #> 3 \"\"    8 (N=14) Mean ± SD 209.2 ± 51.0 cyl8  categorical"},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for continuous variable — gazeCont","title":"Summary function for continuous variable — gazeCont","text":"Summary function continuous variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for continuous variable — gazeCont","text":"","code":"gazeCont(   data,   x,   y = NULL,   max.ylev = 5,   digits = 1,   show.total = FALSE,   show.n = FALSE,   show.missing = FALSE,   show.stats = TRUE,   show.p = TRUE,   method = 1,   origData,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for continuous variable — gazeCont","text":"data data.frame x name variable y name variable, either continuous categorical max.ylev max.ylev integer indicating maximum number levels grouping variable ('y'). column unique values less max.ylev treated categorical variable. Default value 5. digits integer indicating number decimal places show.total logical. Whether show total column show.n logical. Whether show N column show.missing logical. Whether show missing column show.stats logical. Whether show stats column show.p logical. Whether show p column method method    integer indicating methods continuous variables. Possible values methods 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1. origData data.frame containing original data ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary function for continuous variable — gazeCont","text":"object class \"data.frame\" \"tibble\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function for continuous variable — gazeCont","text":"","code":"gazeCont(mtcars,\"hp\") #>   name      desc        stats       type id #> 1   hp Mean ± SD 146.7 ± 68.6 continuous hp gazeCont(mtcars,\"hp\",\"mpg\") #>   name     desc      unit        value       type id #> 1   hp [52,335] Mean ± SD 146.7 ± 68.6 continuous hp require(moonBook) gazeCont(acs,\"log(age)\") #>       name      desc     stats       type       id #> 1 log(age) Mean ± SD 4.1 ± 0.2 continuous log(age) gazeCont(acs,\"age\",method=2) #>   name         desc               stats       type  id #> 1  age Median (IQR) 64.0 (55.0 to 72.0) continuous age gazeCont(acs,\"age\",\"EF\",method=2) #>   name    desc         unit               value       type  id #> 1  age [28,91] Median (IQR) 64.0 (55.0 to 72.0) continuous age gazeCont(acs,\"age\",\"Dx\",method=1) #> # A tibble: 1 × 8 #>   name  desc      `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angin…` p     type  #>   <chr> <chr>     <chr>            <chr>           <chr>             <chr> <chr> #> 1 age   Mean ± SD 64.3 ± 12.3      62.1 ± 12.1     63.8 ± 11.0       .073  cont… #> # … with 1 more variable: id <chr> gazeCont(acs,\"age\",\"Dx\",show.p=TRUE,method=3) #> # A tibble: 1 × 8 #>   name  desc       `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angi…` p     type  #>   <chr> <chr>      <chr>            <chr>           <chr>            <chr> <chr> #> 1 age   Median (I… 65.0 (55.0 to 7… 62.0 (53.0 to … 65.0 (56.0 to 7… .109  cont… #> # … with 1 more variable: id <chr>"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for categorical/continuous variable — gaze_sub","title":"Summary function for categorical/continuous variable — gaze_sub","text":"Summary function categorical/continuous variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for categorical/continuous variable — gaze_sub","text":"","code":"gaze_sub(data, xname, y = NULL, max.ylev = 5, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for categorical/continuous variable — gaze_sub","text":"data data.frame xname name categorical/continuous vector y name vector, either continuous categorical max.ylev max.ylev integer indicating maximum number levels grouping variable ('y'). column unique values less max.ylev treated categorical variable. Default value 5. ... arguments passed gazeCont() gazeCat()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary function for categorical/continuous variable — gaze_sub","text":"object class \"data.frame\" \"tibble\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function for categorical/continuous variable — gaze_sub","text":"","code":"require(moonBook) gaze_sub(acs,\"age\") #>   name      desc       stats       type  id #> 1  age Mean ± SD 63.3 ± 11.7 continuous age gaze_sub(acs,\"log(age)\") #>       name      desc     stats       type       id #> 1 log(age) Mean ± SD 4.1 ± 0.2 continuous log(age) gaze_sub(acs,\"I(age^2)\") #>       name      desc       stats       type       id #> 1 I(age^2) Mean ± SD 63.3 ± 11.7 continuous I(age^2) gaze_sub(acs,\"sex\") #>   name   desc       stats        id        type #> 1  sex Female 287 (33.5%) sexFemale categorical #> 2        Male 570 (66.5%)   sexMale categorical gaze_sub(acs,\"age\",\"EF\") #>   name    desc      unit       value       type  id #> 1  age [28,91] Mean ± SD 63.3 ± 11.7 continuous age gaze_sub(acs,\"sex\",\"EF\") #> # A tibble: 2 × 6 #>   name  desc           unit      value       id        type        #>   <chr> <chr>          <chr>     <chr>       <chr>     <chr>       #> 1 \"sex\" Female (N=287) Mean ± SD 56.3 ± 10.1 sexFemale categorical #> 2 \"\"    Male   (N=570) Mean ± SD 55.6 ± 9.4  sexMale   categorical gaze_sub(acs,\"age\",\"Dx\") #> # A tibble: 1 × 8 #>   name  desc      `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angin…` p     type  #>   <chr> <chr>     <chr>            <chr>           <chr>             <chr> <chr> #> 1 age   Mean ± SD 64.3 ± 12.3      62.1 ± 12.1     63.8 ± 11.0       .073  cont… #> # … with 1 more variable: id <chr> gaze_sub(acs,\"sex\",\"Dx\") #> # A tibble: 2 × 8 #>   name  desc   `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angina (…` id    p     #>   <chr> <chr>  <chr>            <chr>           <chr>                <chr> <chr> #> 1 \"sex\" Female 50 (32.7%)       84 (27.6%)      153 (38.2%)          sexF… \".01… #> 2 \"\"    Male   103 (67.3%)      220 (72.4%)     247 (61.8%)          sexM… \"\"    #> # … with 1 more variable: type <chr> gaze_sub(iris,\"Species\",\"Sepal.Length\") #> # A tibble: 3 × 6 #>   name      desc              unit      value     id                type        #>   <chr>     <chr>             <chr>     <chr>     <chr>             <chr>       #> 1 \"Species\" setosa     (N=50) Mean ± SD 5.0 ± 0.4 Speciessetosa     categorical #> 2 \"\"        versicolor (N=50) Mean ± SD 5.9 ± 0.5 Speciesversicolor categorical #> 3 \"\"        virginica  (N=50) Mean ± SD 6.6 ± 0.6 Speciesvirginica  categorical"},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get interaction data from data — getInteraction","title":"Get interaction data from data — getInteraction","text":"Get interaction data data","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get interaction data from data — getInteraction","text":"","code":"getInteraction(name, data)"},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get interaction data from data — getInteraction","text":"name string interaction term data data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get interaction data from data — getInteraction","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get interaction data from data — getInteraction","text":"","code":"data(acs,package=\"moonBook\") getInteraction(\"TC:Dx:sex\",data=acs) #>         name                   desc                             id   n #> 1      TC:Dx                 NSTEMI                    TC:DxNSTEMI 153 #> 2      TC:Dx                  STEMI                     TC:DxSTEMI 304 #> 3      TC:Dx        Unstable Angina           TC:DxUnstable Angina 400 #> 4     TC:sex                 Female                   TC:sexFemale 287 #> 5     TC:sex                   Male                     TC:sexMale 570 #> 6     Dx:sex          NSTEMI:Female             DxNSTEMI:sexFemale  50 #> 7     Dx:sex           STEMI:Female              DxSTEMI:sexFemale  84 #> 8     Dx:sex Unstable Angina:Female    DxUnstable Angina:sexFemale 153 #> 9     Dx:sex            NSTEMI:Male               DxNSTEMI:sexMale 103 #> 10    Dx:sex             STEMI:Male                DxSTEMI:sexMale 220 #> 11    Dx:sex   Unstable Angina:Male      DxUnstable Angina:sexMale 247 #> 12 TC:Dx:sex          NSTEMI:Female          TC:DxNSTEMI:sexFemale  50 #> 13 TC:Dx:sex           STEMI:Female           TC:DxSTEMI:sexFemale  84 #> 14 TC:Dx:sex Unstable Angina:Female TC:DxUnstable Angina:sexFemale 153 #> 15 TC:Dx:sex            NSTEMI:Male            TC:DxNSTEMI:sexMale 103 #> 16 TC:Dx:sex             STEMI:Male             TC:DxSTEMI:sexMale 220 #> 17 TC:Dx:sex   Unstable Angina:Male   TC:DxUnstable Angina:sexMale 247"},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of data specified by 'name' and 'desc' — getN","title":"Get number of data specified by 'name' and 'desc' — getN","text":"Get number data specified 'name' 'desc'","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of data specified by 'name' and 'desc' — getN","text":"","code":"getN(name, desc, data)"},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of data specified by 'name' and 'desc' — getN","text":"name string interaction term desc character data data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of data specified by 'name' and 'desc' — getN","text":"numeric vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get number of data specified by 'name' and 'desc' — getN","text":"","code":"data(acs,package=\"moonBook\") df=getInteraction(\"TC:Dx:sex\",data=acs) getN(name=df$name,desc=df$desc,data=acs) #>  [1] 153 304 400 287 570  50  84 153 103 220 247  50  84 153 103 220 247"},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get explanatory variables of a model with significance level below the threshold — getSigVars","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"Get explanatory variables model significance level threshold","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"","code":"getSigVars(fit, threshold = 0.2, final = TRUE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"fit object class lm glm threshold Numeric final logical true, perform stepwise regression using step()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"list containing following components: sigVars names explanatory variables significant levels threshold univariable model finalVars names explanatory variables included final model result step","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"","code":"library(survival) data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") getSigVars(fit) #> $sigVars #> [1] \"rx\"       \"obstruct\" \"nodes\"    #>  #> $finalVars #> [1] \"rx\"       \"obstruct\" \"nodes\"    #>  fit=lm(mpg~hp*wt+am,data=mtcars) getSigVars(fit) #> $sigVars #> [1] \"hp\"    \"wt\"    \"am\"    \"hp:wt\" #>  #> $finalVars #> [1] \"hp\"    \"wt\"    \"hp:wt\" #>"},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"Draw Cumulative Incidence Curves Competing Risks","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"","code":"ggcmprsk(x, data, id = NULL, se = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"x formula time+status~1 data data.frame id character vector se logical whether show confidence interval","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"object class \"ggplot\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"","code":"data(melanoma,package=\"boot\") melanoma$status1 = ifelse(melanoma$status==1,1,ifelse(melanoma$status==2,0,2)) ggcmprsk(time/365+status1~1,data=melanoma,id=c(\"melanoma\",\"other\"))"},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare cumulative incidence to th Kaplan-Meier estimate — ggcmprsk2","title":"Compare cumulative incidence to th Kaplan-Meier estimate — ggcmprsk2","text":"Compare cumulative incidence th Kaplan-Meier estimate","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare cumulative incidence to th Kaplan-Meier estimate — ggcmprsk2","text":"","code":"ggcmprsk2(   x,   data,   id = c(\"disease\", \"other\"),   se = FALSE,   xpos = c(2, 2),   ypos = c(0.25, 0.7),   ylabs = NULL,   xlab = NULL,   label = NULL,   plot = TRUE )"},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare cumulative incidence to th Kaplan-Meier estimate — ggcmprsk2","text":"x formula time+status~1 data data.frame id Character vector length2 se logical whether show confidence interval xpos numeric x-axis position label ypos numeric y-axis position label ylabs string vector length 2. y axis labels xlab character. x-axis label label string vector length 2. Label names plot logical Whether print plot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare cumulative incidence to th Kaplan-Meier estimate — ggcmprsk2","text":"list containing following components: df long-form data.frame consist time, est, upper,lower, id, method df3 data.frame label consist x, y, label, id p ggplot object","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare cumulative incidence to th Kaplan-Meier estimate — ggcmprsk2","text":"","code":"require(dplyr) data(prostateSurvival,package=\"asaur\") prostateHighRisk <- prostateSurvival %>%   filter(grade==\"poor\" & stage==\"T2\",ageGroup==\"80+\") ggcmprsk2(survTime/12+status~1,data=prostateHighRisk,   id=c(\"prostate cancer\",\"other causes\"))"},{"path":"https://cardiomoon.github.io/autoReg/reference/highlight2.html","id":null,"dir":"Reference","previous_headings":"","what":"Highlight a data.frame — highlight2","title":"Highlight a data.frame — highlight2","text":"Highlight data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/highlight2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highlight a data.frame — highlight2","text":"","code":"highlight2(x, i = NULL, j = NULL, style = NULL, include.colname = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/highlight2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highlight a data.frame — highlight2","text":"x data.frame numeric rows highlight j numeric columns hightlight style style function NULL include.colname logical Whether include colname","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/highlight2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Highlight a data.frame — highlight2","text":"data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/highlight2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Highlight a data.frame — highlight2","text":"","code":"head(mtcars) %>% highlight2(i=3) %>% printdf() #> —————————————————————————————————————————————————————————————— #> mpg     cyl  disp   hp  drat     wt   qsec  vs  am  gear  carb  #> —————————————————————————————————————————————————————————————— #> 21        6   160  110   3.9   2.62  16.46   0   1     4     4  #> 21        6   160  110   3.9  2.875  17.02   0   1     4     4  #> 22.8      4   108   93  3.85   2.32  18.61   1   1     4     1  #> 21.4      6   258  110  3.08  3.215  19.44   1   0     3     1  #> 18.7      8   360  175  3.15   3.44  17.02   0   0     3     2  #> 18.1      6   225  105  2.76   3.46  20.22   1   0     3     1  #> —————————————————————————————————————————————————————————————— library(crayon) head(mtcars) %>% highlight2(i=2) %>% highlight2(j=3,style=blue$bold) %>% printdf() #> —————————————————————————————————————————————————————————————— #> mpg     cyl  disp   hp  drat     wt   qsec  vs  am  gear  carb  #> —————————————————————————————————————————————————————————————— #> 21        6   160  110   3.9   2.62  16.46   0   1     4     4  #> 21        6   160  110   3.9  2.875  17.02   0   1     4     4  #> 22.8      4   108   93  3.85   2.32  18.61   1   1     4     1  #> 21.4      6   258  110  3.08  3.215  19.44   1   0     3     1  #> 18.7      8   360  175  3.15   3.44  17.02   0   0     3     2  #> 18.1      6   225  105  2.76   3.46  20.22   1   0     3     1  #> —————————————————————————————————————————————————————————————— fit=lm(mpg~wt*hp,data=mtcars) gaze(fit) #> ——————————————————————————————————————————————————————————————————————— #>                Estimate  Std. Error  t value  Pr(>|t|)    lower   upper  #> ——————————————————————————————————————————————————————————————————————— #> (Intercept)      49.808       3.605   13.816     <.001   42.424  57.193  #> wt               -8.217       1.270   -6.471     <.001  -10.818  -5.616  #> hp               -0.120       0.025   -4.863     <.001   -0.171  -0.070  #> wt:hp             0.028       0.007    3.753     <.001    0.013   0.043  #> ——————————————————————————————————————————————————————————————————————— #> Residual SE: 2.153 on 28 DF, Multiple R^2: 0.8848, Adjusted R^2: 0.8724 #> F-statistic: 71.66 on 3 and 28 DF,  p-value: 2.981e-13  gaze(fit) %>% highlight2(j=4,include.colname=TRUE) #> ——————————————————————————————————————————————————————————————————————— #>                Estimate  Std. Error  t value  Pr(>|t|)    lower   upper  #> ——————————————————————————————————————————————————————————————————————— #> (Intercept)      49.808       3.605   13.816     <.001   42.424  57.193  #> wt               -8.217       1.270   -6.471     <.001  -10.818  -5.616  #> hp               -0.120       0.025   -4.863     <.001   -0.171  -0.070  #> wt:hp             0.028       0.007    3.753     <.001    0.013   0.043  #> ——————————————————————————————————————————————————————————————————————— #> Residual SE: 2.153 on 28 DF, Multiple R^2: 0.8848, Adjusted R^2: 0.8724 #> F-statistic: 71.66 on 3 and 28 DF,  p-value: 2.981e-13  gaze(fit) %>% highlight2(i=2,j=4) %>% highlight2(i=2,j=2:3,style=blue$bold) #> ——————————————————————————————————————————————————————————————————————— #>                Estimate  Std. Error  t value  Pr(>|t|)    lower   upper  #> ——————————————————————————————————————————————————————————————————————— #> (Intercept)      49.808       3.605   13.816     <.001   42.424  57.193  #> wt               -8.217       1.270   -6.471     <.001  -10.818  -5.616  #> hp               -0.120       0.025   -4.863     <.001   -0.171  -0.070  #> wt:hp             0.028       0.007    3.753     <.001    0.013   0.043  #> ——————————————————————————————————————————————————————————————————————— #> Residual SE: 2.153 on 28 DF, Multiple R^2: 0.8848, Adjusted R^2: 0.8724 #> F-statistic: 71.66 on 3 and 28 DF,  p-value: 2.981e-13  gaze(fit) %>% highlight2(i=2) %>% highlight2(j=3,style=blue$bold) #> ——————————————————————————————————————————————————————————————————————— #>                Estimate  Std. Error  t value  Pr(>|t|)    lower   upper  #> ——————————————————————————————————————————————————————————————————————— #> (Intercept)      49.808       3.605   13.816     <.001   42.424  57.193  #> wt               -8.217       1.270   -6.471     <.001  -10.818  -5.616  #> hp               -0.120       0.025   -4.863     <.001   -0.171  -0.070  #> wt:hp             0.028       0.007    3.753     <.001    0.013   0.043  #> ——————————————————————————————————————————————————————————————————————— #> Residual SE: 2.153 on 28 DF, Multiple R^2: 0.8848, Adjusted R^2: 0.8724 #> F-statistic: 71.66 on 3 and 28 DF,  p-value: 2.981e-13"},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a multiple imputed model — imputedReg","title":"Make a multiple imputed model — imputedReg","text":"Make multiple imputed model","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a multiple imputed model — imputedReg","text":"","code":"imputedReg(fit, data = NULL, m = 20, seed = 1234, digits = 2, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a multiple imputed model — imputedReg","text":"fit object class lm glm data data.frame m Number multiple imputations. default m=20. seed integer used argument set.seed() offsetting random number generator. digits Integer indicating number decimal place ... argument passed mice","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a multiple imputed model — imputedReg","text":"object class \"imputedReg\" inherits class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a multiple imputed model — imputedReg","text":"","code":"data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") imputedReg(fit) #> Warning: Number of logged events: 1 #>            id     estimate   std.error  statistic       df      p.value #> 1 (Intercept) -0.638897928 0.281963378 -2.2658898 1833.346 2.357429e-02 #> 2       rxLev -0.046738499 0.118157562 -0.3955608 1848.303 6.924747e-01 #> 3   rxLev+5FU -0.618091905 0.120613104 -5.1245833 1845.110 3.294030e-07 #> 4         sex -0.033089561 0.098174322 -0.3370490 1846.866 7.361182e-01 #> 5         age  0.001938722 0.004171101  0.4647986 1841.764 6.421306e-01 #> 6    obstruct  0.304585914 0.123567787  2.4649297 1845.777 1.379447e-02 #> 7       nodes  0.190713187 0.018143728 10.5112457 1575.211 0.000000e+00 #>          2.5 %      97.5 %        OR     lower     upper #> 1 -1.191901079 -0.08589478 0.5278739 0.3036435 0.9176908 #> 2 -0.278474816  0.18499782 0.9543369 0.7569373 1.2032158 #> 3 -0.854644419 -0.38153939 0.5389719 0.4254344 0.6828095 #> 4 -0.225633881  0.15945476 0.9674519 0.7980102 1.1728712 #> 5 -0.006241862  0.01011931 1.0019406 0.9937776 1.0101707 #> 6  0.062238584  0.54693324 1.3560634 1.0642162 1.7279457 #> 7  0.155124788  0.22630159 1.2101123 1.1678037 1.2539538 #>                      stats #> 1 0.53 (0.30-0.92, p=.024) #> 2 0.95 (0.76-1.20, p=.692) #> 3 0.54 (0.43-0.68, p<.001) #> 4 0.97 (0.80-1.17, p=.736) #> 5 1.00 (0.99-1.01, p=.642) #> 6 1.36 (1.06-1.73, p=.014) #> 7 1.21 (1.17-1.25, p<.001) # \\donttest{ library(survival) fit=coxph(Surv(time,status)~rx+age+sex+nodes+obstruct+perfor,data=colon) imputedReg(fit) #>          id     estimate   std.error  statistic       df      p.value #> 1     rxLev -0.046507478 0.077155431 -0.6027765 909.7921 5.468076e-01 #> 2 rxLev+5FU -0.438763591 0.084184633 -5.2119202 909.3767 2.313569e-07 #> 3       age  0.001417281 0.002781573  0.5095252 909.2875 6.105078e-01 #> 4       sex -0.068785665 0.066475870 -1.0347464 909.8595 3.010623e-01 #> 5     nodes  0.087202231 0.006279040 13.8878295 883.8862 0.000000e+00 #> 6  obstruct  0.241574969 0.081489439  2.9644942 910.5266 3.110847e-03 #> 7    perfor  0.210557594 0.181821453  1.1580459 910.9150 2.471488e-01 #>          2.5 %      97.5 %        HR     lower     upper #> 1 -0.197930789  0.10491583 0.9545574 0.8204266 1.1106171 #> 2 -0.603982339 -0.27354484 0.6448332 0.5466304 0.7606782 #> 3 -0.004041767  0.00687633 1.0014183 0.9959664 1.0069000 #> 4 -0.199249525  0.06167820 0.9335267 0.8193454 1.0636200 #> 5  0.074878665  0.09952580 1.0911173 1.0777534 1.1046470 #> 6  0.081646014  0.40150392 1.2732529 1.0850716 1.4940700 #> 7 -0.146280037  0.56739523 1.2343661 0.8639157 1.7636671 #>                      stats #> 1 0.95 (0.82-1.11, p=.547) #> 2 0.64 (0.55-0.76, p<.001) #> 3 1.00 (1.00-1.01, p=.611) #> 4 0.93 (0.82-1.06, p=.301) #> 5 1.09 (1.08-1.10, p<.001) #> 6 1.27 (1.09-1.49, p=.003) #> 7 1.23 (0.86-1.76, p=.247) # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/is.mynumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Decide whether a vector can be treated as a numeric variable — is.mynumeric","title":"Decide whether a vector can be treated as a numeric variable — is.mynumeric","text":"Decide whether vector can treated numeric variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/is.mynumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decide whether a vector can be treated as a numeric variable — is.mynumeric","text":"","code":"is.mynumeric(x, maxy.lev = 5)"},{"path":"https://cardiomoon.github.io/autoReg/reference/is.mynumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decide whether a vector can be treated as a numeric variable — is.mynumeric","text":"x vector maxy.lev integer indicating maximum number unique values numeric variable treated categorical variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/is.mynumeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decide whether a vector can be treated as a numeric variable — is.mynumeric","text":"logical value","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/is.mynumeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decide whether a vector can be treated as a numeric variable — is.mynumeric","text":"","code":"x=1:5 is.mynumeric(x) #> [1] FALSE x=1:13 is.mynumeric(x) #> [1] TRUE"},{"path":"https://cardiomoon.github.io/autoReg/reference/loglogplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw log-log plot — loglogplot","title":"Draw log-log plot — loglogplot","text":"Draw log-log plot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/loglogplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw log-log plot — loglogplot","text":"","code":"loglogplot(fit, xnames = NULL, main = NULL, labels = NULL, maxy.lev = 5)"},{"path":"https://cardiomoon.github.io/autoReg/reference/loglogplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw log-log plot — loglogplot","text":"fit object class \"coxph\" xnames character Names explanatory variable plot main String Title plot labels String vector Used legend legend maxy.lev Integer Maximum unique length numeric variable treated categorical variables","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/loglogplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw log-log plot — loglogplot","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/loglogplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw log-log plot — loglogplot","text":"","code":"require(survival) data(cancer,package=\"survival\") fit=coxph(Surv(time,status)~x,data=leukemia) loglogplot(fit)"},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":null,"dir":"Reference","previous_headings":"","what":"Return maximum character number except NA — maxnchar","title":"Return maximum character number except NA — maxnchar","text":"Return maximum character number except NA","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return maximum character number except NA — maxnchar","text":"","code":"maxnchar(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return maximum character number except NA — maxnchar","text":"x vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return maximum character number except NA — maxnchar","text":"numeric vector length 1","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return maximum character number except NA — maxnchar","text":"","code":"x=c(1,2,\"sadf\",NA) maxnchar(x) #> [1] 4 data(acs,package=\"moonBook\") lapply(acs,maxnchar) #> $age #> [1] 2 #>  #> $sex #> [1] 6 #>  #> $cardiogenicShock #> [1] 3 #>  #> $entry #> [1] 7 #>  #> $Dx #> [1] 15 #>  #> $EF #> [1] 4 #>  #> $height #> [1] 5 #>  #> $weight #> [1] 5 #>  #> $BMI #> [1] 11 #>  #> $obesity #> [1] 3 #>  #> $TC #> [1] 5 #>  #> $LDLC #> [1] 3 #>  #> $HDLC #> [1] 2 #>  #> $TG #> [1] 3 #>  #> $DM #> [1] 3 #>  #> $HBP #> [1] 3 #>  #> $smoking #> [1] 9 #>"},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"Draw coefficients/odds ratio/hazard ratio plot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"","code":"modelPlot(   fit,   widths = NULL,   change.pointsize = TRUE,   show.OR = TRUE,   show.ref = TRUE,   bw = TRUE,   legend.position = \"top\",   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"fit object class glm widths Numeric vector change.pointsize logical Whether change point size show.logical Whether show odds ratio show.ref logical Whether show reference bw logical true, use grey scale legend.position legend position default value 'top' ... arguments passed autoReg()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"modelPlot returns  object class \"modelPlot\" object class modelPlot list containing least following components: tab1 first table containing names tab2 2nd table containing levels tab3 3rd table containing coefficients odds ratio hazards ratio p ggplot widths widths tables ggplot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"","code":"fit=lm(mpg~wt*hp+am,data=mtcars) modelPlot(fit,widths=c(1,0,2,3))  modelPlot(fit,uni=TRUE,threshold=1,widths=c(1,0,2,3))  fit=lm(Sepal.Width~Sepal.Length*Species,data=iris) modelPlot(fit)  modelPlot(fit,uni=TRUE,change.pointsize=FALSE)  # \\donttest{ data(cancer,package=\"survival\") fit=glm(status~rx+age+sex+nodes+obstruct+perfor,data=colon,family=\"binomial\") modelPlot(fit)  modelPlot(fit,uni=TRUE,multi=TRUE,threshold=1)  modelPlot(fit,multi=TRUE,imputed=TRUE,change.pointsize=FALSE)  data(colon_s,package=\"finalfit\") fit=glm(mort_5yr~age.factor+sex.factor+obstruct.factor+perfor.factor,data=colon_s,family=\"binomial\") modelPlot(fit)  modelPlot(fit,uni=TRUE,multi=TRUE,threshold=1)  modelPlot(fit,uni=TRUE,multi=TRUE)  modelPlot(fit,uni=TRUE,multi=TRUE,threshold=1,show.ref=FALSE)  library(survival) fit=coxph(Surv(time,status)~age+sex+obstruct+perfor,data=colon) modelPlot(fit)  modelPlot(fit,uni=TRUE,threshold=1)  fit=coxph(Surv(time,status)~age.factor+sex.factor+obstruct.factor+perfor.factor,data=colon_s) modelPlot(fit)  modelPlot(fit,uni=TRUE,threshold=1)  modelPlot(fit,uni=TRUE,threshold=1,show.ref=FALSE)  modelPlot(fit,imputed=TRUE)  # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes table summarizing list of models — modelsSummary","title":"Makes table summarizing list of models — modelsSummary","text":"Makes table summarizing list models","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes table summarizing list of models — modelsSummary","text":"","code":"modelsSummary(fitlist, show.lik = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes table summarizing list of models — modelsSummary","text":"fitlist list objects class \"coxph\" show.lik logical Whether show likelihood test results","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes table summarizing list of models — modelsSummary","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes table summarizing list of models — modelsSummary","text":"","code":"library(survival) fit1=coxph(Surv(time,status) ~rx,data=anderson) fit2=coxph(Surv(time,status) ~rx+logWBC,data=anderson) fit3=coxph(Surv(time,status) ~rx*logWBC,data=anderson) fitlist=list(fit1,fit2,fit3) modelsSummary(fitlist) #>  #> Dependent: Surv(time, status), data=anderson  #> ——————————————————————————————————————————————————————————————————————— #>                coef  se(coef)       z  Pr(>|z|)      HR  lower    upper  #> ——————————————————————————————————————————————————————————————————————— #> Model 1  #> rx            1.572     0.412   3.812     <.001   4.817  2.147   10.809  #> ——————————————————————————————————————————————————————————————————————— #> Model 2  #> rx            1.386     0.425   3.263      .001   3.999  1.739    9.195  #> logWBC        1.691     0.336   5.034     <.001   5.424  2.808   10.478  #> ——————————————————————————————————————————————————————————————————————— #> Model 3  #> rx            2.375     1.705   1.393      .164  10.750  0.380  304.162  #> logWBC        1.872     0.451   4.148     <.001   6.504  2.685   15.755  #> rx:logWBC    -0.318     0.526  -0.604      .546   0.728  0.260    2.040  #> ———————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummaryTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes flextable summarizing list of models — modelsSummaryTable","title":"Makes flextable summarizing list of models — modelsSummaryTable","text":"Makes flextable summarizing list models","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummaryTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes flextable summarizing list of models — modelsSummaryTable","text":"","code":"modelsSummaryTable(fitlist, labels = NULL, show.lik = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummaryTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes flextable summarizing list of models — modelsSummaryTable","text":"fitlist list objects class \"coxph\" labels character labels models show.lik logical Whether show likelihood test results","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummaryTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes flextable summarizing list of models — modelsSummaryTable","text":"flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelsSummaryTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Makes flextable summarizing list of models — modelsSummaryTable","text":"","code":"library(survival) fit1=coxph(Surv(time,status) ~rx,data=anderson) fit2=coxph(Surv(time,status) ~rx+logWBC,data=anderson) fit3=coxph(Surv(time,status) ~rx*logWBC,data=anderson) fitlist=list(fit1,fit2,fit3) modelsSummaryTable(fitlist) #> a flextable object. #> col_keys: `Model`, ` `, `coef`, `se(coef)`, `z`, `Pr(>|z|)`, `HR`, `lower`, `upper`  #> header has 2 row(s)  #> body has 9 row(s)  #> original dataset sample:  #>     Model         coef se(coef)     z Pr(>|z|)    HR lower  upper #> 1 Model 1   <NA>  <NA>     <NA>  <NA>     <NA>  <NA>  <NA>   <NA> #> 4    <NA>     rx 1.572    0.412 3.812    <.001 4.817 2.147 10.809 #> 2 Model 2   <NA>  <NA>     <NA>  <NA>     <NA>  <NA>  <NA>   <NA> #> 5    <NA>     rx 1.386    0.425 3.263     .001 3.999 1.739  9.195 #> 6    <NA> logWBC 1.691    0.336 5.034    <.001 5.424 2.808 10.478"},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"Statistical test categorical variables Statistical test categorical variables","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"","code":"my.chisq.test2(x, y, catMethod = 2, all = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"x vector y vector catMethod integer indicating methods categorical variables. Possible values methods 0 Perform chisq.test first. warning present, perform fisher test 1 Perform chisq.test without continuity correction 2 Perform chisq.test continuity correction 3 perform fisher.test 4 perform prop.trend test Default value 2. logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"numeric vector length 1","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"","code":"library(moonBook) x=acs$sex y=acs$Dx my.chisq.test2(x,y) #> [1] 0.01228804"},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical test for continuous variables — my.t.test2","title":"Statistical test for continuous variables — my.t.test2","text":"Statistical test continuous variables","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical test for continuous variables — my.t.test2","text":"","code":"my.t.test2(y, x, method = 1, all = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical test for continuous variables — my.t.test2","text":"y categorical vector x numeric vector method method    integer indicating methods continuous variables. Possible values methods 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1. logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical test for continuous variables — my.t.test2","text":"numeric vector length 1","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical test for continuous variables — my.t.test2","text":"","code":"library(moonBook) y=acs$sex x=acs$height my.t.test2(y,x) #> [1] 2.137925e-130"},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Simple Proportional Hazards Regression Model — mycphSimple","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"Fit Simple Proportional Hazards Regression Model","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"","code":"mycphSimple(fit, threshold = 0.2, digits = 2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"fit object class coxph threshold numeric p-value threshold enter multiple model digits integer indicating position decimal place","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"","code":"require(survival) data(cancer) fit=coxph(Surv(time,status)~age+sex+obstruct+perfor,data=colon) mycphSimple(fit) #>                  coef        HR     lower    upper          se          z #> age      -0.002444104 0.9975589 0.9921094 1.003038 0.002794865 -0.8744983 #> sex      -0.033625890 0.9669332 0.8496235 1.100440 0.065988994 -0.5095682 #> obstruct  0.242055841 1.2738653 1.0881772 1.491240 0.080385064  3.0112042 #> perfor    0.264368788 1.3026085 0.9154312 1.853541 0.179966997  1.4689848 #>                    p       id                    stats #> age      0.381846947      age 1.00 (0.99-1.00, p=.382) #> sex      0.610354035      sex 0.97 (0.85-1.10, p=.610) #> obstruct 0.002602138 obstruct 1.27 (1.09-1.49, p=.003) #> perfor   0.141836904   perfor 1.30 (0.92-1.85, p=.142)"},{"path":"https://cardiomoon.github.io/autoReg/reference/myformat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame to printable format — myformat","title":"Convert data.frame to printable format — myformat","text":"Convert data.frame printable format","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/myformat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame to printable format — myformat","text":"","code":"myformat(x, showid = FALSE, digits = 3)"},{"path":"https://cardiomoon.github.io/autoReg/reference/myformat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame to printable format — myformat","text":"x data.frame showid logical TRUE, show id digits Integer indicating number decimal places","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/myformat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.frame to printable format — myformat","text":"data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/myformat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data.frame to printable format — myformat","text":"","code":"fit=lm(mpg~wt*hp,data=mtcars) gaze(fit) %>% myformat() #> ——————————————————————————————————————————————————————————————————————— #>                Estimate  Std. Error  t value  Pr(>|t|)    lower   upper  #> ——————————————————————————————————————————————————————————————————————— #> (Intercept)      49.808       3.605   13.816     <.001   42.424  57.193  #> wt               -8.217       1.270   -6.471     <.001  -10.818  -5.616  #> hp               -0.120       0.025   -4.863     <.001   -0.171  -0.070  #> wt:hp             0.028       0.007    3.753     <.001    0.013   0.043  #> ——————————————————————————————————————————————————————————————————————— #> Residual SE: 2.153 on 28 DF, Multiple R^2: 0.8848, Adjusted R^2: 0.8724 #> F-statistic: 71.66 on 3 and 28 DF,  p-value: 2.981e-13"},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame into flextable — myft","title":"Convert data.frame into flextable — myft","text":"Convert data.frame flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame into flextable — myft","text":"","code":"myft(x, vanilla = TRUE, fontsize = 10, digits, showid = FALSE, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame into flextable — myft","text":"x data.frame vanilla logical fontsize Numeric digits integer indicating position decimal place showid logical TRUE, show id ... arguments passed df2flextable()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert data.frame into flextable — myft","text":"object class flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data.frame into flextable — myft","text":"","code":"data(acs,package=\"moonBook\") library(dplyr) gaze(acs) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `stats`  #> header has 1 row(s)  #> body has 27 row(s)  #> original dataset sample:  #> —————————————————————————————————————————— #>        name         levels       stats     #> —————————————————————————————————————————— #> age               Mean ± SD    63.3 ± 11.7  #> sex               Female       287 (33.5%)  #>                   Male         570 (66.5%)  #> cardiogenicShock  No           805 (93.9%)  #>                   Yes            52 (6.1%)  #> —————————————————————————————————————————— gaze(sex~.,acs) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `Female (N=287)`, `Male (N=570)`, `p`  #> header has 1 row(s)  #> body has 25 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————————————— #>   Dependent:sex     levels        Female          Male        p    #>        (N)                       (N=287)        (N=570)            #> —————————————————————————————————————————————————————————————————— #> age               Mean ± SD       68.7 ± 10.7   60.6 ± 11.2  <.001  #> cardiogenicShock  No              275 (95.8%)     530 (93%)   .136  #>                   Yes               12 (4.2%)       40 (7%)         #> entry             Femoral         119 (41.5%)   193 (33.9%)   .035  #>                   Radial          168 (58.5%)   377 (66.1%)         #> —————————————————————————————————————————————————————————————————— fit=lm(mpg~hp*wt,data=mtcars) gaze(fit) %>% myft() #> a flextable object. #> col_keys: ` `, `Estimate`, `Std. Error`, `t value`, `Pr(>|t|)`, `lower`, `upper`  #> header has 1 row(s)  #> body has 4 row(s)  #> original dataset sample:  #> ——————————————————————————————————————————————————————————————————————— #>                Estimate  Std. Error  t value  Pr(>|t|)    lower   upper  #> ——————————————————————————————————————————————————————————————————————— #> (Intercept)      49.808       3.605   13.816     <.001   42.424  57.193  #> hp               -0.120       0.025   -4.863     <.001   -0.171  -0.070  #> wt               -8.217       1.270   -6.471     <.001  -10.818  -5.616  #> hp:wt             0.028       0.007    3.753     <.001    0.013   0.043  #> ——————————————————————————————————————————————————————————————————————— #> Residual SE: 2.153 on 28 DF, Multiple R^2: 0.8848, Adjusted R^2: 0.8724 #> F-statistic: 71.66 on 3 and 28 DF,  p-value: 2.981e-13  library(survival) fit=coxph(Surv(time,status) ~rx,data=anderson1) gaze(fit) %>% myft() #> a flextable object. #> col_keys: ` `, `coef`, `se(coef)`, `z`, `Pr(>|z|)`, `HR`, `lower`, `upper`  #> header has 1 row(s)  #> body has 1 row(s)  #> original dataset sample:  #> ——————————————————————————————————————————————————————————————————— #>               coef  se(coef)      z  Pr(>|z|)     HR  lower   upper  #> ——————————————————————————————————————————————————————————————————— #> rxControl    1.572     0.412  3.812     <.001  4.817  2.147  10.809  #> ——————————————————————————————————————————————————————————————————— #> n=42, events=30, Likelihood ratio test=16.35 on 1 df (p<.001)  # \\donttest{ gaze(sex+Dx~.,data=acs,show.p=TRUE,show.total=TRUE,show.n=TRUE,shiw.missing=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `N`, `NSTEMI (N=50)`, `STEMI (N=84)`, `Unstable Angina (N=153)`, `total (N=287)`, `p`, `N  `, `NSTEMI (N=103)`, `STEMI (N=220)`, `Unstable Angina (N=247)`, `total (N=570)`, `p  `  #> header has 2 row(s)  #> body has 22 row(s)  #> original dataset sample:  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>            sex (N)                                            Female (N=287)                                                                     Male (N=570)                                      #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>    Dependent:Dx     levels     N      NSTEMI         STEMI          Unstable Angina          total        p     N       NSTEMI          STEMI          Unstable Angina          total        p    #>        (N)                            (N=50)         (N=84)             (N=153)             (N=287)                    (N=103)         (N=220)             (N=247)             (N=570)            #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD    287    70.9 ± 11.4   69.1 ± 10.4              67.7 ± 10.7    68.7 ± 10.7   .177  570     61.1 ± 11.6    59.4 ± 11.7              61.4 ± 10.6    60.6 ± 11.2   .133  #> cardiogenicShock  No           287       49 (98%)    73 (86.9%)               153 (100%)    275 (95.8%)  <.001  570     100 (97.1%)    183 (83.2%)               247 (100%)      530 (93%)  <.001  #>                   Yes                      1 (2%)    11 (13.1%)                   0 (0%)      12 (4.2%)                    3 (2.9%)     37 (16.8%)                   0 (0%)        40 (7%)         #> entry             Femoral      287       22 (44%)    45 (53.6%)                 52 (34%)    119 (41.5%)   .013  570        36 (35%)       88 (40%)               69 (27.9%)    193 (33.9%)   .022  #>                   Radial                 28 (56%)    39 (46.4%)                101 (66%)    168 (58.5%)                    67 (65%)      132 (60%)              178 (72.1%)    377 (66.1%)         #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(Dx+sex~cardiogenicShock,data=acs,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `Female (N=50)`, `Male (N=103)`, `p`, `Female (N=84)`, `Male (N=220)`, `p  `, `Female (N=153)`, `Male (N=247)`, `p   `  #> header has 2 row(s)  #> body has 2 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>           Dx (N)                     NSTEMI (N=153)                      STEMI (N=304)                  Unstable Angina (N=400)         #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:sex    levels     Female          Male        p       Female          Male       p        Female          Male        p    #>        (N)                    (N=50)        (N=103)               (N=84)        (N=220)              (N=153)        (N=247)            #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> cardiogenicShock  No             49 (98%)   100 (97.1%)  1.000     73 (86.9%)   183 (83.2%)  .535      153 (100%)    247 (100%)  1.000  #>                   Yes              1 (2%)      3 (2.9%)            11 (13.1%)    37 (16.8%)                0 (0%)        0 (0%)         #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(Dx+sex+HBP~cardiogenicShock,data=acs,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `No (N=19)`, `Yes (N=31)`, `p`, `No (N=43)`, `Yes (N=60)`, `p  `, `No (N=28)`, `Yes (N=56)`, `p   `, `No (N=122)`, `Yes (N=98)`, `p    `, `No (N=36)`, `Yes (N=117)`, `p     `, `No (N=108)`, `Yes (N=139)`, `p      `  #> header has 2 row(s)  #> body has 2 row(s)  #> original dataset sample:  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>             Dx                        NSTEMI                        NSTEMI                         STEMI                          STEMI                      Unstable Angina                  Unstable Angina            #>            sex                        Female                         Male                          Female                          Male                           Female                            Male                 #>            (N)                        (N=50)                        (N=103)                        (N=84)                        (N=220)                         (N=153)                          (N=247)                #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:HBP    levels     No         Yes        p        No         Yes        p        No         Yes       p        No          Yes        p       No          Yes        p         No          Yes         p     #>        (N)                  (N=19)      (N=31)             (N=43)      (N=60)             (N=28)      (N=56)            (N=122)      (N=98)            (N=36)      (N=117)             (N=108)      (N=139)             #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> cardiogenicShock  No        19 (100%)  30 (96.8%)  1.000  42 (97.7%)  58 (96.7%)  1.000  23 (82.1%)  50 (89.3%)  .567  106 (86.9%)  77 (78.6%)   .145  36 (100%)   117 (100%)   1.000  108 (100%)   139 (100%)    1.000  #>                   Yes          0 (0%)    1 (3.2%)           1 (2.3%)    2 (3.3%)          5 (17.9%)   6 (10.7%)         16 (13.1%)  21 (21.4%)            0 (0%)       0 (0%)              0 (0%)       0 (0%)           #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize numeric vector to statistical summary — num2stat","title":"Summarize numeric vector to statistical summary — num2stat","text":"Summarize numeric vector statistical summary","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize numeric vector to statistical summary — num2stat","text":"","code":"num2stat(x, digits = 1, method = 1, p = NULL)"},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize numeric vector to statistical summary — num2stat","text":"x numeric vector digits integer indicating number decimal places method integer indicating methods continuous variables. Possible values methods 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1. p numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize numeric vector to statistical summary — num2stat","text":"character vector length 1","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize numeric vector to statistical summary — num2stat","text":"","code":"library(moonBook) num2stat(acs$age) #> [1] \"63.3 ± 11.7\" num2stat(acs$age,method=2) #> [1] \"64.0 (55.0 to 72.0)\""},{"path":"https://cardiomoon.github.io/autoReg/reference/p2character2.html","id":null,"dir":"Reference","previous_headings":"","what":"Change p value to string — p2character2","title":"Change p value to string — p2character2","text":"Change p value string","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/p2character2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change p value to string — p2character2","text":"","code":"p2character2(x, digits = 3, add.p = TRUE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/p2character2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change p value to string — p2character2","text":"x numeric digits integer indicating decimal place add.p logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/p2character2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change p value to string — p2character2","text":"character vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method print for an object of class autoReg — print.autoReg","title":"S3 method print for an object of class autoReg — print.autoReg","text":"S3 method print object class autoReg","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method print for an object of class autoReg — print.autoReg","text":"","code":"# S3 method for autoReg print(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method print for an object of class autoReg — print.autoReg","text":"x object class autoReg ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method print for an object of class autoReg — print.autoReg","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method print for an object of class autoReg — print.autoReg","text":"","code":"data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") autoReg(fit) #> —————————————————————————————————————————————————————————————————————————————————— #> Dependent: status                 0 (N=925)    1 (N=897)        OR (multivariable)  #> —————————————————————————————————————————————————————————————————————————————————— #> rx                         Obs  282 (30.5%)  342 (38.1%)                            #>                            Lev  285 (30.8%)    323 (36%)  0.94 (0.74-1.18, p=.576)  #>                        Lev+5FU  358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  #> sex                  Mean ± SD    0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  #> age                  Mean ± SD  60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.583)  #> obstruct             Mean ± SD    0.2 ± 0.4    0.2 ± 0.4  1.34 (1.05-1.72, p=.018)  #> nodes                Mean ± SD    2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.25, p<.001)  #> ——————————————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method print for an object of class gaze — print.gaze","title":"S3 method print for an object of class gaze — print.gaze","text":"S3 method print object class gaze","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method print for an object of class gaze — print.gaze","text":"","code":"# S3 method for gaze print(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method print for an object of class gaze — print.gaze","text":"x object class gaze ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 method print for an object of class gaze — print.gaze","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method print for an object of class gaze — print.gaze","text":"","code":"data(acs,package=\"moonBook\") x=gaze(acs,show.n=TRUE,show.missing=TRUE) gaze(sex~.,acs,show.p=TRUE,show.n=TRUE,show.missing=TRUE,show.total=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:sex        levels        N    Missing        Female          Male          total        p    #>        (N)                                              (N=287)        (N=570)        (N=857)            #> ———————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD          857     0(0.0%)     68.7 ± 10.7   60.6 ± 11.2    63.3 ± 11.7  <.001  #> cardiogenicShock  No                 857     0(0.0%)     275 (95.8%)     530 (93%)    805 (93.9%)   .136  #>                   Yes                                      12 (4.2%)       40 (7%)      52 (6.1%)         #> entry             Femoral            857     0(0.0%)     119 (41.5%)   193 (33.9%)    312 (36.4%)   .035  #>                   Radial                                 168 (58.5%)   377 (66.1%)    545 (63.6%)         #> Dx                NSTEMI             857     0(0.0%)      50 (17.4%)   103 (18.1%)    153 (17.9%)   .012  #>                   STEMI                                   84 (29.3%)   220 (38.6%)    304 (35.5%)         #>                   Unstable Angina                        153 (53.3%)   247 (43.3%)    400 (46.7%)         #> EF                Mean ± SD          723  134(15.6%)     56.3 ± 10.1    55.6 ± 9.4     55.8 ± 9.6   .387  #> height            Mean ± SD          764   93(10.9%)     153.8 ± 6.2   167.9 ± 6.1    163.2 ± 9.1  <.001  #> weight            Mean ± SD          766   91(10.6%)      57.2 ± 9.3   68.7 ± 10.3    64.8 ± 11.4  <.001  #> BMI               Mean ± SD          764   93(10.9%)      24.2 ± 3.6    24.3 ± 3.2     24.3 ± 3.3   .611  #> obesity           No                 857     0(0.0%)     194 (67.6%)   373 (65.4%)    567 (66.2%)   .580  #>                   Yes                                     93 (32.4%)   197 (34.6%)    290 (33.8%)         #> TC                Mean ± SD          834    23(2.7%)    188.9 ± 51.1  183.3 ± 45.9   185.2 ± 47.8   .124  #> LDLC              Mean ± SD          833    24(2.8%)    117.8 ± 41.2  116.0 ± 41.1   116.6 ± 41.1   .561  #> HDLC              Mean ± SD          834    23(2.7%)     39.0 ± 11.5   37.8 ± 10.9    38.2 ± 11.1   .145  #> TG                Mean ± SD          842    15(1.8%)    119.9 ± 76.2  127.9 ± 97.3   125.2 ± 90.9   .195  #> DM                No                 857     0(0.0%)     173 (60.3%)   380 (66.7%)    553 (64.5%)   .077  #>                   Yes                                    114 (39.7%)   190 (33.3%)    304 (35.5%)         #> HBP               No                 857     0(0.0%)      83 (28.9%)   273 (47.9%)    356 (41.5%)  <.001  #>                   Yes                                    204 (71.1%)   297 (52.1%)    501 (58.5%)         #> smoking           Ex-smoker          857     0(0.0%)      49 (17.1%)   155 (27.2%)    204 (23.8%)  <.001  #>                   Never                                  209 (72.8%)   123 (21.6%)    332 (38.7%)         #>                   Smoker                                  29 (10.1%)   292 (51.2%)    321 (37.5%)         #> ———————————————————————————————————————————————————————————————————————————————————————————————————————— # \\donttest{ gaze(Dx+sex~.,acs,show.p=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>            Dx (N)                       NSTEMI (N=153)                       STEMI (N=304)                   Unstable Angina (N=400)          #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:sex     levels       Female          Male         p       Female          Male        p        Female          Male         p    #>        (N)                       (N=50)         (N=103)               (N=84)        (N=220)               (N=153)         (N=247)            #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD      70.9 ± 11.4    61.1 ± 11.6  <.001    69.1 ± 10.4   59.4 ± 11.7  <.001     67.7 ± 10.7    61.4 ± 10.6  <.001  #> cardiogenicShock  No                49 (98%)    100 (97.1%)  1.000     73 (86.9%)   183 (83.2%)   .535      153 (100%)     247 (100%)  1.000  #>                   Yes                 1 (2%)       3 (2.9%)            11 (13.1%)    37 (16.8%)                 0 (0%)         0 (0%)         #> entry             Femoral           22 (44%)       36 (35%)   .366     45 (53.6%)      88 (40%)   .045        52 (34%)     69 (27.9%)   .243  #>                   Radial            28 (56%)       67 (65%)            39 (46.4%)     132 (60%)              101 (66%)    178 (72.1%)         #> EF                Mean ± SD       54.8 ± 9.1     55.1 ± 9.4   .891    52.3 ± 10.9    52.4 ± 8.9   .970      59.4 ± 8.8     59.1 ± 8.7   .798  #> height            Mean ± SD      154.2 ± 5.1    167.5 ± 5.7  <.001    155.7 ± 5.4   168.7 ± 6.0  <.001     152.6 ± 6.7    167.3 ± 6.4  <.001  #> weight            Mean ± SD      57.2 ± 10.3     67.5 ± 8.4  <.001     57.4 ± 9.0   68.8 ± 10.9  <.001      57.1 ± 9.1    69.0 ± 10.6  <.001  #> BMI               Mean ± SD       24.1 ± 4.3     24.1 ± 2.6   .967     23.6 ± 3.2    24.1 ± 3.4   .282      24.5 ± 3.5     24.6 ± 3.4   .816  #> obesity           No                35 (70%)     71 (68.9%)  1.000     60 (71.4%)   149 (67.7%)   .628      99 (64.7%)    153 (61.9%)   .653  #>                   Yes               15 (30%)     32 (31.1%)            24 (28.6%)    71 (32.3%)             54 (35.3%)     94 (38.1%)         #> TC                Mean ± SD     196.3 ± 52.7   192.6 ± 54.3   .697   180.7 ± 45.7  184.1 ± 42.6   .542    191.1 ± 53.1   178.7 ± 44.6   .018  #> LDLC              Mean ± SD     127.7 ± 39.5   125.4 ± 47.1   .774   111.0 ± 40.0  118.9 ± 39.1   .128    118.3 ± 41.8   109.5 ± 39.2   .035  #> HDLC              Mean ± SD      40.1 ± 13.8    38.4 ± 10.9   .414    39.5 ± 11.2   38.1 ± 10.9   .338     38.5 ± 10.8    37.4 ± 10.9   .338  #> TG                Mean ± SD     112.5 ± 51.1  138.0 ± 100.2   .042   112.3 ± 87.2  104.3 ± 65.5   .454    126.3 ± 76.0  144.3 ± 114.2   .060  #> DM                No                25 (50%)     71 (68.9%)   .036     54 (64.3%)     154 (70%)   .412      94 (61.4%)    155 (62.8%)   .875  #>                   Yes               25 (50%)     32 (31.1%)            30 (35.7%)      66 (30%)             59 (38.6%)     92 (37.2%)         #> HBP               No                19 (38%)     43 (41.7%)   .789     28 (33.3%)   122 (55.5%)  <.001      36 (23.5%)    108 (43.7%)  <.001  #>                   Yes               31 (62%)     60 (58.3%)            56 (66.7%)    98 (44.5%)            117 (76.5%)    139 (56.3%)         #> smoking           Ex-smoker          8 (16%)       34 (33%)  <.001     13 (15.5%)    53 (24.1%)  <.001      28 (18.3%)     68 (27.5%)  <.001  #>                   Never             37 (74%)     13 (12.6%)            57 (67.9%)    40 (18.2%)            115 (75.2%)     70 (28.3%)         #>                   Smoker             5 (10%)     56 (54.4%)            14 (16.7%)   127 (57.7%)              10 (6.5%)    109 (44.1%)         #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(sex+Dx+HBP~.,acs,show.p=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>              sex                           Female                             Female                             Female                               Male                                Male                                 Male                   #>              Dx                            NSTEMI                              STEMI                         Unstable Angina                         NSTEMI                              STEMI                           Unstable Angina              #>              (N)                           (N=50)                             (N=84)                             (N=153)                            (N=103)                             (N=220)                              (N=247)                  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:HBP     levels         No           Yes         p         No           Yes         p         No           Yes         p         No            Yes         p         No           Yes         p          No            Yes          p     #>        (N)                       (N=19)        (N=31)               (N=28)        (N=56)               (N=36)       (N=117)               (N=43)        (N=60)               (N=122)        (N=98)                (N=108)       (N=139)              #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD     69.9 ± 12.8   71.5 ± 10.5   .636   66.8 ± 12.6    70.3 ± 9.0   .191   67.9 ± 12.1   67.6 ± 10.3   .885   57.5 ± 10.0    63.7 ± 12.0   .007   56.3 ± 11.8   63.3 ± 10.4   <.001    58.9 ± 11.0    63.5 ± 9.8    <.001  #> cardiogenicShock  No              19 (100%)    30 (96.8%)  1.000    23 (82.1%)    50 (89.3%)   .567     36 (100%)    117 (100%)  1.000    42 (97.7%)     58 (96.7%)  1.000   106 (86.9%)    77 (78.6%)    .145     108 (100%)    139 (100%)    1.000  #>                   Yes                0 (0%)      1 (3.2%)            5 (17.9%)     6 (10.7%)               0 (0%)        0 (0%)             1 (2.3%)       2 (3.3%)           16 (13.1%)    21 (21.4%)                 0 (0%)        0 (0%)           #> entry             Femoral         7 (36.8%)    15 (48.4%)   .614      14 (50%)    31 (55.4%)   .817    10 (27.8%)    42 (35.9%)   .485    16 (37.2%)     20 (33.3%)   .844    49 (40.2%)    39 (39.8%)   1.000     32 (29.6%)    37 (26.6%)     .704  #>                   Radial         12 (63.2%)    16 (51.6%)             14 (50%)    25 (44.6%)           26 (72.2%)    75 (64.1%)           27 (62.8%)     40 (66.7%)           73 (59.8%)    59 (60.2%)             76 (70.4%)   102 (73.4%)           #> EF                Mean ± SD     56.3 ± 10.4    54.0 ± 8.4   .421   50.8 ± 11.7   53.1 ± 10.5   .378    60.2 ± 6.8    59.1 ± 9.4   .566    56.4 ± 8.1    54.1 ± 10.2   .236    52.5 ± 9.1    52.2 ± 8.7    .831     60.6 ± 8.2    58.1 ± 8.9     .045  #> height            Mean ± SD     154.2 ± 5.5   154.2 ± 5.0   .972   155.4 ± 5.8   155.9 ± 5.2   .748   153.1 ± 8.5   152.4 ± 6.1   .666   167.8 ± 4.9    167.3 ± 6.1   .660   169.9 ± 6.5   167.3 ± 4.9    .003    168.0 ± 6.3   166.8 ± 6.5     .159  #> weight            Mean ± SD     56.4 ± 13.7    57.9 ± 7.2   .676    54.5 ± 8.5    59.0 ± 9.0   .037   58.4 ± 11.4    56.7 ± 8.3   .442    67.5 ± 8.4     67.6 ± 8.4   .964   69.4 ± 11.7    68.1 ± 9.9    .414    68.2 ± 11.8    69.7 ± 9.6     .318  #> BMI               Mean ± SD      23.6 ± 5.1    24.4 ± 3.7   .536    22.5 ± 3.3    24.2 ± 3.1   .029    24.8 ± 4.2    24.4 ± 3.2   .583    23.9 ± 2.4     24.1 ± 2.7   .688    24.0 ± 3.6    24.3 ± 3.1    .582     24.0 ± 3.3    25.1 ± 3.4     .025  #> obesity           No             14 (73.7%)    21 (67.7%)   .899    24 (85.7%)    36 (64.3%)   .073    21 (58.3%)    78 (66.7%)   .474    32 (74.4%)       39 (65%)   .422    86 (70.5%)    63 (64.3%)    .405     73 (67.6%)    80 (57.6%)     .139  #>                   Yes             5 (26.3%)    10 (32.3%)            4 (14.3%)    20 (35.7%)           15 (41.7%)    39 (33.3%)           11 (25.6%)       21 (35%)           36 (29.5%)    35 (35.7%)             35 (32.4%)    59 (42.4%)           #> TC                Mean ± SD    199.8 ± 49.8  194.4 ± 54.9   .743  182.0 ± 45.4  180.0 ± 46.2   .858  173.2 ± 52.2  196.5 ± 52.4   .022  203.0 ± 68.1   185.0 ± 40.3   .127  188.8 ± 42.7  178.3 ± 41.8    .071   184.9 ± 46.6  173.7 ± 42.3     .053  #> LDLC              Mean ± SD    131.4 ± 49.6  125.7 ± 33.7   .642  109.2 ± 42.9  111.9 ± 38.9   .776  106.6 ± 38.3  121.9 ± 42.4   .057  139.9 ± 58.7   114.8 ± 33.1   .014  124.1 ± 40.7  112.3 ± 36.2    .028   115.4 ± 44.3  104.7 ± 33.8     .041  #> HDLC              Mean ± SD      43.0 ± 9.1   38.6 ± 15.6   .235   39.9 ± 12.4   39.3 ± 10.7   .805   37.1 ± 10.4   38.9 ± 11.0   .407   37.7 ± 10.1    38.9 ± 11.6   .557   37.3 ± 11.5   39.1 ± 10.1    .216    38.3 ± 12.1    36.6 ± 9.7     .244  #> TG                Mean ± SD     98.0 ± 23.1  120.3 ± 59.9   .079  106.9 ± 86.1  115.1 ± 88.4   .690  121.8 ± 70.9  127.6 ± 77.8   .694  138.8 ± 77.8  137.5 ± 114.5   .945  105.6 ± 65.1  102.6 ± 66.2    .741  147.3 ± 132.2  141.9 ± 98.2     .724  #> DM                No             11 (57.9%)    14 (45.2%)   .560    18 (64.3%)    36 (64.3%)  1.000    25 (69.4%)      69 (59%)   .351    33 (76.7%)     38 (63.3%)   .217    93 (76.2%)    61 (62.2%)    .036     79 (73.1%)    76 (54.7%)     .004  #>                   Yes             8 (42.1%)    17 (54.8%)           10 (35.7%)    20 (35.7%)           11 (30.6%)      48 (41%)           10 (23.3%)     22 (36.7%)           29 (23.8%)    37 (37.8%)             29 (26.9%)    63 (45.3%)           #> smoking           Ex-smoker       3 (15.8%)     5 (16.1%)   .995     3 (10.7%)    10 (17.9%)   .025       9 (25%)    19 (16.2%)   .043    11 (25.6%)     23 (38.3%)   .017    23 (18.9%)    30 (30.6%)    .029     32 (29.6%)    36 (25.9%)     .418  #>                   Never          14 (73.7%)    23 (74.2%)           16 (57.1%)    41 (73.2%)           22 (61.1%)    93 (79.5%)             2 (4.7%)     11 (18.3%)           19 (15.6%)    21 (21.4%)             26 (24.1%)    44 (31.7%)           #>                   Smoker          2 (10.5%)      3 (9.7%)            9 (32.1%)      5 (8.9%)            5 (13.9%)      5 (4.3%)           30 (69.8%)     26 (43.3%)           80 (65.6%)      47 (48%)             50 (46.3%)    59 (42.4%)           #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.modelPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method for an class modelPlot — print.modelPlot","title":"S3 method for an class modelPlot — print.modelPlot","text":"S3 method class modelPlot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.modelPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method for an class modelPlot — print.modelPlot","text":"","code":"# S3 method for modelPlot print(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.modelPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method for an class modelPlot — print.modelPlot","text":"x object class modelPlot ... arguments passed plot()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/printdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function for data.frame — printdf","title":"Print function for data.frame — printdf","text":"Print function data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/printdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function for data.frame — printdf","text":"","code":"printdf(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/printdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function for data.frame — printdf","text":"x data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/printdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print function for data.frame — printdf","text":"return value, called side effects","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/printdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print function for data.frame — printdf","text":"","code":"x=mtcars[1:5,1:5] printdf(x) #> ———————————————————————————— #> mpg     cyl  disp   hp  drat  #> ———————————————————————————— #> 21        6   160  110   3.9  #> 21        6   160  110   3.9  #> 22.8      4   108   93  3.85  #> 21.4      6   258  110  3.08  #> 18.7      8   360  175  3.15  #> ————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, select","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicated term — removeDup","title":"Remove duplicated term — removeDup","text":"Remove duplicated term","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicated term — removeDup","text":"","code":"removeDup(x, replacement = \"\")"},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicated term — removeDup","text":"x vector replacement character replaced NA","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicated term — removeDup","text":"vector class x","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove duplicated term — removeDup","text":"","code":"x=rep(1:5,each=3) removeDup(x) #>  [1] \"1\" \"\"  \"\"  \"2\" \"\"  \"\"  \"3\" \"\"  \"\"  \"4\" \"\"  \"\"  \"5\" \"\"  \"\""},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a residual plot with an object of class coxph — residualPlot","title":"Draw a residual plot with an object of class coxph — residualPlot","text":"Draw residual plot object class coxph","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a residual plot with an object of class coxph — residualPlot","text":"","code":"residualPlot(   fit,   type = \"martingale\",   vars = NULL,   show.point = TRUE,   se = TRUE )"},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a residual plot with an object of class coxph — residualPlot","text":"fit object class coxph type character One c(\"martingale\",\"deviance\",\"score\",\"schoenfeld\", \"dfbeta\",\"dfbetas\",\"scaledsch\",\"partial\"). Default value \"martingale\". vars character Names variables plot. default value NULL show.point logical Whether show point se logical Whether show se","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a residual plot with an object of class coxph — residualPlot","text":"patchwork object","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw a residual plot with an object of class coxph — residualPlot","text":"","code":"require(survival) data(cancer) fit=coxph(Surv(time,status==2)~log(bili)+age+cluster(edema),data=pbc) residualPlot(fit)  residualPlot(fit,var=\"age\")  fit=coxph(Surv(time,status==2)~age,data=pbc) residualPlot(fit)  residualPlot(fit,\"partial\")"},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData.html","id":null,"dir":"Reference","previous_headings":"","what":"restore data with factor in column name — restoreData","title":"restore data with factor in column name — restoreData","text":"restore data factor column name","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restore data with factor in column name — restoreData","text":"","code":"restoreData(data)"},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restore data with factor in column name — restoreData","text":"data object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restore data with factor in column name — restoreData","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData2.html","id":null,"dir":"Reference","previous_headings":"","what":"restore data with I() in column name — restoreData2","title":"restore data with I() in column name — restoreData2","text":"restore data () column name","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restore data with I() in column name — restoreData2","text":"","code":"restoreData2(df)"},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restore data with I() in column name — restoreData2","text":"df object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restore data with I() in column name — restoreData2","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData3.html","id":null,"dir":"Reference","previous_headings":"","what":"restore data with operator in column name — restoreData3","title":"restore data with operator in column name — restoreData3","text":"restore data operator column name","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restore data with operator in column name — restoreData3","text":"","code":"restoreData3(df, changeLabel = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restore data with operator in column name — restoreData3","text":"df object class \"data.frame\" changeLabel logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restore data with operator in column name — restoreData3","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/revOperator.html","id":null,"dir":"Reference","previous_headings":"","what":"get opposite arithmetic operator — revOperator","title":"get opposite arithmetic operator — revOperator","text":"get opposite arithmetic operator","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/revOperator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get opposite arithmetic operator — revOperator","text":"","code":"revOperator(operator)"},{"path":"https://cardiomoon.github.io/autoReg/reference/revOperator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get opposite arithmetic operator — revOperator","text":"operator character","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/revOperator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get opposite arithmetic operator — revOperator","text":"character","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/roundDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric columns of data.frame to character — roundDf","title":"Convert numeric columns of data.frame to character — roundDf","text":"Convert numeric columns data.frame character","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/roundDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric columns of data.frame to character — roundDf","text":"","code":"roundDf(df, digits = 2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/roundDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric columns of data.frame to character — roundDf","text":"df data.frame digits integer indicating number decimal places","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/roundDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert numeric columns of data.frame to character — roundDf","text":"object class \"data.frame\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/setLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Add label to a vector — setLabel","title":"Add label to a vector — setLabel","text":"Add label vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/setLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add label to a vector — setLabel","text":"","code":"setLabel(x, label = \"\")"},{"path":"https://cardiomoon.github.io/autoReg/reference/setLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add label to a vector — setLabel","text":"x vector label string","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/setLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add label to a vector — setLabel","text":"labelled vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":null,"dir":"Reference","previous_headings":"","what":"Shorten an object of class gaze — shorten","title":"Shorten an object of class gaze — shorten","text":"Shorten object class gaze","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shorten an object of class gaze — shorten","text":"","code":"shorten(x, xname = NULL, ref = 1)"},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shorten an object of class gaze — shorten","text":"x object class gaze xname variable name ref Numeric Th number used reference","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shorten an object of class gaze — shorten","text":"object class \"gaze\" described gaze","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shorten an object of class gaze — shorten","text":"","code":"data(acs,package=\"moonBook\") x=gaze(sex~.,data=acs) shorten(x) #> ———————————————————————————————————————————————————————————————————————— #>   Dependent:sex        levels           Female          Male        p    #>        (N)                             (N=287)        (N=570)            #> ———————————————————————————————————————————————————————————————————————— #> age               Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  #> cardiogenicShock  Yes                     12 (4.2%)       40 (7%)         #> entry             Radial                168 (58.5%)   377 (66.1%)         #> Dx                STEMI                  84 (29.3%)   220 (38.6%)         #>                   Unstable Angina       153 (53.3%)   247 (43.3%)         #> EF                Mean ± SD             56.3 ± 10.1    55.6 ± 9.4   .387  #> height            Mean ± SD             153.8 ± 6.2   167.9 ± 6.1  <.001  #> weight            Mean ± SD              57.2 ± 9.3   68.7 ± 10.3  <.001  #> BMI               Mean ± SD              24.2 ± 3.6    24.3 ± 3.2   .611  #> obesity           Yes                    93 (32.4%)   197 (34.6%)         #> TC                Mean ± SD            188.9 ± 51.1  183.3 ± 45.9   .124  #> LDLC              Mean ± SD            117.8 ± 41.2  116.0 ± 41.1   .561  #> HDLC              Mean ± SD             39.0 ± 11.5   37.8 ± 10.9   .145  #> TG                Mean ± SD            119.9 ± 76.2  127.9 ± 97.3   .195  #> DM                Yes                   114 (39.7%)   190 (33.3%)         #> HBP               Yes                   204 (71.1%)   297 (52.1%)         #> smoking           Never                 209 (72.8%)   123 (21.6%)         #>                   Smoker                 29 (10.1%)   292 (51.2%)         #> ————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/survfit2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract survival data from an object of class ","title":"Extract survival data from an object of class ","text":"Extract survival data object class \"survfit\"","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/survfit2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract survival data from an object of class ","text":"","code":"survfit2df(fit, labels = NULL)"},{"path":"https://cardiomoon.github.io/autoReg/reference/survfit2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract survival data from an object of class ","text":"fit object class \"survfit\" labels Character","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/survfit2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract survival data from an object of class ","text":"data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/survfit2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract survival data from an object of class ","text":"","code":"library(survival) data(cancer,package=\"survival\") fit=survfit(Surv(time,status)~rx+sex+age,data=colon) survfit2df(fit) #>      time n.risk n.event n.censor      surv    std.err     upper      lower #> 1    2234      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 2     101      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 3    2826      1       0        1 0.5000000 0.70710678 1.0000000 0.12504883 #> 4     362      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 5     692      1       1        0 0.0000000        Inf        NA         NA #> 6    3000      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 7    2413      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 8    2551      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 9     438      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 10   1262      1       1        0 0.0000000        Inf        NA         NA #> 11    139     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 12    173      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 13    275      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 14   2187      7       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 15   2292      5       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 16   2688      3       0        1 0.7000000 0.20701967 1.0000000 0.46653323 #> 17   3030      2       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 18    230      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 19   1020      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 20   1236      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 21   1679      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 22   2133      2       1        0 0.1666667 0.91287093 0.9974380 0.02784913 #> 23   2552      1       1        0 0.0000000        Inf        NA         NA #> 24    103      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 25    663      1       1        0 0.0000000        Inf        NA         NA #> 26   1466      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 27   1535      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 28   2210      2       0        1 0.5000000 0.50000000 1.0000000 0.18765893 #> 29   2299      1       0        1 0.5000000 0.50000000 1.0000000 0.18765893 #> 30   2815      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 31     99      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 32    243      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 33    594      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 34    702      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 35   1079      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 36   1133      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 37   1363      2       1        1 0.1250000 0.93541435 0.7818729 0.01998407 #> 38    188     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 39    189      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 40    337      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 41    464      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 42    506      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 43    718      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 44   2391      4       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 45   2577      2       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 46    131      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 47    461      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 48    581      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 49    753      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 50   1237      2       1        0 0.1666667 0.91287093 0.9974380 0.02784913 #> 51   1745      1       1        0 0.0000000        Inf        NA         NA #> 52    374      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 53    402      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 54    499      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 55   2384      1       0        1 0.2500000 0.86602540 1.0000000 0.04579076 #> 56    166      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 57    229      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 58    279      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 59    411      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 60    465      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 61   1272      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 62   1823      2       0        2 0.2500000 0.61237244 0.8302184 0.07528139 #> 63    547      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 64   1136      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 65   2899      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 66    173      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 67    474      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 68   1819      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 69   1995      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 70   2651      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 71    143      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 72    743      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 73   2213      2       1        1 0.2500000 0.86602540 1.0000000 0.04579076 #> 74     85     14       1        0 0.9285714 0.07412493 1.0000000 0.80300835 #> 75    165     13       1        0 0.8571429 0.10910895 1.0000000 0.69211699 #> 76    372     12       1        0 0.7857143 0.13957263 1.0000000 0.59766828 #> 77    540     11       1        0 0.7142857 0.16903085 0.9948355 0.51285270 #> 78    670     10       1        0 0.6428571 0.19920477 0.9499000 0.43506192 #> 79   1375      9       1        0 0.5714286 0.23145502 0.8994496 0.36303381 #> 80   1803      8       0        2 0.5714286 0.23145502 0.8994496 0.36303381 #> 81   1891      6       0        2 0.5714286 0.23145502 0.8994496 0.36303381 #> 82   2138      4       0        2 0.5714286 0.23145502 0.8994496 0.36303381 #> 83   2394      2       0        2 0.5714286 0.23145502 0.8994496 0.36303381 #> 84    157     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 85    218     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 86    315     14       1        0 0.8125000 0.12009612 1.0000000 0.64209217 #> 87    770     13       1        0 0.7500000 0.14433757 0.9952258 0.56519837 #> 88   1990     12       0        2 0.7500000 0.14433757 0.9952258 0.56519837 #> 89   2167     10       0        2 0.7500000 0.14433757 0.9952258 0.56519837 #> 90   2170      8       0        2 0.7500000 0.14433757 0.9952258 0.56519837 #> 91   2237      6       0        2 0.7500000 0.14433757 0.9952258 0.56519837 #> 92   2257      4       1        1 0.5625000 0.32274861 1.0000000 0.29881226 #> 93   2507      2       0        2 0.5625000 0.32274861 1.0000000 0.29881226 #> 94    106     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 95    201     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 96    384     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 97   1246      9       1        0 0.6666667 0.20412415 0.9946254 0.44684608 #> 98   2113      8       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 99   2219      6       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 100  2503      4       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 101  2925      2       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 102  1446      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 103  2077      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 104  2621      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 105   208     14       1        0 0.9285714 0.07412493 1.0000000 0.80300835 #> 106   480     13       1        0 0.8571429 0.10910895 1.0000000 0.69211699 #> 107   687     12       1        0 0.7857143 0.13957263 1.0000000 0.59766828 #> 108  1230     11       1        0 0.7142857 0.16903085 0.9948355 0.51285270 #> 109  1606     10       1        0 0.6428571 0.19920477 0.9499000 0.43506192 #> 110  1792      9       0        2 0.6428571 0.19920477 0.9499000 0.43506192 #> 111  1896      7       1        0 0.5510204 0.25197632 0.9029222 0.33626762 #> 112  2036      6       1        0 0.4591837 0.31116780 0.8449927 0.24952837 #> 113  2265      5       0        1 0.4591837 0.31116780 0.8449927 0.24952837 #> 114  2313      4       0        2 0.4591837 0.31116780 0.8449927 0.24952837 #> 115  2697      2       0        2 0.4591837 0.31116780 0.8449927 0.24952837 #> 116    36     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 117   437      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 118  2035      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 119  2278      7       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 120  2294      5       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 121  2396      3       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 122  2731      1       0        1 0.7000000 0.20701967 1.0000000 0.46653323 #> 123   256      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 124   659      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 125   758      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 126   936      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 127  2006      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 128  2730      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 129   221      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 130   294      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 131   563      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 132   595      1       1        0 0.0000000        Inf        NA         NA #> 133    86      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 134   167      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 135   187      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 136   289      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 137  2598      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 138    98     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 139   593     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 140   599     14       1        1 0.8125000 0.12009612 1.0000000 0.64209217 #> 141   673     12       1        0 0.7447917 0.14832004 0.9960590 0.55690942 #> 142   774     11       1        0 0.6770833 0.17632284 0.9565956 0.47924308 #> 143   871     10       1        0 0.6093750 0.20542847 0.9114769 0.40740242 #> 144  1209      9       1        0 0.5416667 0.23683273 0.8616373 0.34051772 #> 145  1327      8       1        0 0.4739583 0.27193177 0.8076234 0.27814511 #> 146  1915      7       1        0 0.4062500 0.31266022 0.7497738 0.22011849 #> 147  2122      6       0        2 0.4062500 0.31266022 0.7497738 0.22011849 #> 148  2167      4       0        2 0.4062500 0.31266022 0.7497738 0.22011849 #> 149  2815      2       0        2 0.4062500 0.31266022 0.7497738 0.22011849 #> 150    99     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 151   185     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 152   264     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 153   459      9       1        0 0.6666667 0.20412415 0.9946254 0.44684608 #> 154   555      8       1        0 0.5833333 0.24397502 0.9409980 0.36161371 #> 155  1159      7       1        0 0.5000000 0.28867513 0.8804217 0.28395485 #> 156  2008      6       0        2 0.5000000 0.28867513 0.8804217 0.28395485 #> 157  2679      4       0        2 0.5000000 0.28867513 0.8804217 0.28395485 #> 158  2747      2       0        2 0.5000000 0.28867513 0.8804217 0.28395485 #> 159   118      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 160   528      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 161  1981      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 162  2083      1       1        0 0.0000000        Inf        NA         NA #> 163    80      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 164   433      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 165   561      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 166   833      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 167  3017      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 168   632      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 169   735      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 170   887      6       1        1 0.6250000 0.27386128 1.0000000 0.36540028 #> 171  1021      4       1        0 0.4687500 0.39791121 1.0000000 0.21490110 #> 172  1290      3       1        0 0.3125000 0.57008771 0.9552335 0.10223285 #> 173  2130      2       0        2 0.3125000 0.57008771 0.9552335 0.10223285 #> 174   296     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 175   313      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 176   398      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 177   700      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 178   716      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 179   840      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 180  1929      4       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 181  2001      2       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 182    80     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 183   121     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 184   230     14       1        0 0.8125000 0.12009612 1.0000000 0.64209217 #> 185   241     13       1        0 0.7500000 0.14433757 0.9952258 0.56519837 #> 186   264     12       1        0 0.6875000 0.16854997 0.9566271 0.49408619 #> 187   384     11       1        0 0.6250000 0.19364917 0.9135125 0.42760773 #> 188   496     10       1        0 0.5625000 0.22047928 0.8665524 0.36513228 #> 189   576      9       1        0 0.5000000 0.25000000 0.8161508 0.30631596 #> 190   874      8       1        0 0.4375000 0.28347335 0.7625547 0.25100658 #> 191  1295      7       1        0 0.3750000 0.32274861 0.7059198 0.19920817 #> 192  1976      6       0        2 0.3750000 0.32274861 0.7059198 0.19920817 #> 193  2486      4       0        2 0.3750000 0.32274861 0.7059198 0.19920817 #> 194  3078      2       0        2 0.3750000 0.32274861 0.7059198 0.19920817 #> 195    72      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 196    79      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 197   113      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 198   122      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 199   259      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 200   365      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 201   542      2       1        0 0.1250000 0.93541435 0.7818729 0.01998407 #> 202   963      1       1        0 0.0000000        Inf        NA         NA #> 203  2232      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 204  2257      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 205  2562      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 206  1274      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 207  2195      5       0        2 0.8333333 0.18257419 1.0000000 0.58265480 #> 208  2287      3       1        0 0.5555556 0.44721360 1.0000000 0.23123767 #> 209  2580      2       0        2 0.5555556 0.44721360 1.0000000 0.23123767 #> 210   726      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 211  1057      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 212  2458      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 213  2706      4       0        1 0.7500000 0.20412415 1.0000000 0.50270184 #> 214  2794      3       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 215  2849      1       0        1 0.7500000 0.20412415 1.0000000 0.50270184 #> 216   608      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 217  1139      5       2        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 218  1434      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 219  2097      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 220  2324      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 221  2118      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 222  2066      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 223   154      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 224   208      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 225   382      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 226   832      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 227  1902      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 228   227      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 229   253      1       1        0 0.0000000        Inf        NA         NA #> 230   223      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 231   612      1       1        0 0.0000000        Inf        NA         NA #> 232   334      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 233   390      1       1        0 0.0000000        Inf        NA         NA #> 234  2743      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 235   245      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 236   924      1       1        0 0.0000000        Inf        NA         NA #> 237  1852      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 238  2574      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 239   411      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 240   591      1       1        0 0.0000000        Inf        NA         NA #> 241   354      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 242   563      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 243  2157      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 244   174      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 245   469      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 246  2429      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 247   344      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 248   453      3       0        2 0.7500000 0.28867513 1.0000000 0.42593227 #> 249  1313      1       1        0 0.0000000        Inf        NA         NA #> 250    45      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 251   462      1       1        0 0.0000000        Inf        NA         NA #> 252  2313      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 253   772      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 254  1166      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 255  2176      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 256  2761      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 257    77      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 258   166      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 259   237      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 260   409      1       1        0 0.0000000        Inf        NA         NA #> 261  2184      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 262   304      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 263   413      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 264   437      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 265  1304      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 266  2111      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 267  2754      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 268   625      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 269  1101      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 270  1749      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 271  2527      1       1        0 0.0000000        Inf        NA         NA #> 272  2393      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 273  1455      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 274  2261      1       0        1 0.5000000 0.70710678 1.0000000 0.12504883 #> 275   173      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 276   717      1       1        0 0.0000000        Inf        NA         NA #> 277  2170      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 278   930     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 279  1353      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 280  1436      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 281  1692      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 282  1875      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 283  1907      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 284  2153      4       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 285  2204      2       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 286   401     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 287   543     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 288   721     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 289  1437      9       1        0 0.6666667 0.20412415 0.9946254 0.44684608 #> 290  1855      8       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 291  2025      6       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 292  2190      4       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 293  2716      2       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 294  3192      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 295   421      8       1        1 0.8750000 0.13363062 1.0000000 0.67338194 #> 296   686      6       1        0 0.7291667 0.22625312 1.0000000 0.46799348 #> 297   957      5       1        0 0.5833333 0.31810451 1.0000000 0.31271286 #> 298  1432      4       1        0 0.4375000 0.42956235 1.0000000 0.18850980 #> 299  2149      3       0        1 0.4375000 0.42956235 1.0000000 0.18850980 #> 300  2862      2       0        2 0.4375000 0.42956235 1.0000000 0.18850980 #> 301   739     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 302   752     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 303   803     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 304   883      9       1        0 0.6666667 0.20412415 0.9946254 0.44684608 #> 305   929      8       1        0 0.5833333 0.24397502 0.9409980 0.36161371 #> 306  1884      7       1        0 0.5000000 0.28867513 0.8804217 0.28395485 #> 307  2148      6       1        0 0.4166667 0.34156503 0.8138220 0.21332811 #> 308  2288      5       1        0 0.3333333 0.40824829 0.7419597 0.14975357 #> 309  2485      4       0        1 0.3333333 0.40824829 0.7419597 0.14975357 #> 310  2618      3       0        2 0.3333333 0.40824829 0.7419597 0.14975357 #> 311  2800      1       0        1 0.3333333 0.40824829 0.7419597 0.14975357 #> 312    59     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 313   145     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 314   203     14       1        0 0.8125000 0.12009612 1.0000000 0.64209217 #> 315   273     13       1        0 0.7500000 0.14433757 0.9952258 0.56519837 #> 316   360     12       1        0 0.6875000 0.16854997 0.9566271 0.49408619 #> 317   702     11       1        0 0.6250000 0.19364917 0.9135125 0.42760773 #> 318   949     10       1        0 0.5625000 0.22047928 0.8665524 0.36513228 #> 319  1070      9       1        0 0.5000000 0.25000000 0.8161508 0.30631596 #> 320  1083      8       1        0 0.4375000 0.28347335 0.7625547 0.25100658 #> 321  1539      7       1        0 0.3750000 0.32274861 0.7059198 0.19920817 #> 322  2191      6       0        1 0.3750000 0.32274861 0.7059198 0.19920817 #> 323  2202      5       0        2 0.3750000 0.32274861 0.7059198 0.19920817 #> 324  2435      3       0        2 0.3750000 0.32274861 0.7059198 0.19920817 #> 325  2530      1       0        1 0.3750000 0.32274861 0.7059198 0.19920817 #> 326   433     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 327   465      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 328   495      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 329  1950      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 330  2132      6       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 331  2176      4       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 332  2194      2       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 333   127     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 334   238     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 335   349     14       1        0 0.8125000 0.12009612 1.0000000 0.64209217 #> 336   381     13       1        0 0.7500000 0.14433757 0.9952258 0.56519837 #> 337   537     12       1        0 0.6875000 0.16854997 0.9566271 0.49408619 #> 338   855     11       1        0 0.6250000 0.19364917 0.9135125 0.42760773 #> 339   975     10       1        0 0.5625000 0.22047928 0.8665524 0.36513228 #> 340  1134      9       1        0 0.5000000 0.25000000 0.8161508 0.30631596 #> 341  1216      8       1        0 0.4375000 0.28347335 0.7625547 0.25100658 #> 342  2093      7       0        2 0.4375000 0.28347335 0.7625547 0.25100658 #> 343  2139      5       0        1 0.4375000 0.28347335 0.7625547 0.25100658 #> 344  2235      4       0        2 0.4375000 0.28347335 0.7625547 0.25100658 #> 345  2558      2       0        2 0.4375000 0.28347335 0.7625547 0.25100658 #> 346   378      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 347   435      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 348   510      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 349   774      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 350   912      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 351  1856      3       0        2 0.3750000 0.45643546 0.9173812 0.15328960 #> 352  2351      1       1        0 0.0000000        Inf        NA         NA #> 353   165     14       1        0 0.9285714 0.07412493 1.0000000 0.80300835 #> 354   185     13       1        0 0.8571429 0.10910895 1.0000000 0.69211699 #> 355   242     12       1        0 0.7857143 0.13957263 1.0000000 0.59766828 #> 356   271     11       1        0 0.7142857 0.16903085 0.9948355 0.51285270 #> 357   577     10       1        0 0.6428571 0.19920477 0.9499000 0.43506192 #> 358   760      9       1        0 0.5714286 0.23145502 0.8994496 0.36303381 #> 359   761      8       1        0 0.5000000 0.26726124 0.8442347 0.29612619 #> 360  1031      7       1        0 0.4285714 0.30860670 0.7847110 0.23406513 #> 361  1823      6       0        2 0.4285714 0.30860670 0.7847110 0.23406513 #> 362  2110      4       0        2 0.4285714 0.30860670 0.7847110 0.23406513 #> 363  2231      2       0        2 0.4285714 0.30860670 0.7847110 0.23406513 #> 364   257     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 365   280      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 366   286      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 367   331      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 368   413      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 369   532      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 370   587      4       1        0 0.3000000 0.48304589 0.7731979 0.11639970 #> 371   863      3       1        0 0.2000000 0.63245553 0.6908394 0.05790057 #> 372  2200      2       0        2 0.2000000 0.63245553 0.6908394 0.05790057 #> 373   161      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 374   417      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 375   534      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 376  1548      1       1        0 0.0000000        Inf        NA         NA #> 377   499     14       1        0 0.9285714 0.07412493 1.0000000 0.80300835 #> 378  1130     13       1        0 0.8571429 0.10910895 1.0000000 0.69211699 #> 379  1447     12       1        0 0.7857143 0.13957263 1.0000000 0.59766828 #> 380  1818     11       1        1 0.7142857 0.16903085 0.9948355 0.51285270 #> 381  2085      9       1        0 0.6349206 0.20605901 0.9508613 0.42395688 #> 382  2158      8       0        2 0.6349206 0.20605901 0.9508613 0.42395688 #> 383  2191      6       0        2 0.6349206 0.20605901 0.9508613 0.42395688 #> 384  2423      4       0        2 0.6349206 0.20605901 0.9508613 0.42395688 #> 385  2789      2       1        1 0.3174603 0.73651905 1.0000000 0.07494856 #> 386   230      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 387   384      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 388   663      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 389   928      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 390  2325      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 391    20     18       1        0 0.9444444 0.05716620 1.0000000 0.84433825 #> 392   108     17       1        0 0.8888889 0.08333333 1.0000000 0.75494274 #> 393   109     16       1        0 0.8333333 0.10540926 1.0000000 0.67778856 #> 394   164     15       1        0 0.7777778 0.12598816 0.9956274 0.60759503 #> 395   259     14       1        0 0.7222222 0.14617634 0.9618257 0.54230714 #> 396   379     13       1        0 0.6666667 0.16666667 0.9242206 0.48088565 #> 397   406     12       1        0 0.6111111 0.18802536 0.8834209 0.42273938 #> 398   622     11       1        0 0.5555556 0.21081851 0.8398013 0.36751786 #> 399   854     10       1        0 0.5000000 0.23570226 0.7935972 0.31502127 #> 400  1314      9       1        1 0.4444444 0.26352314 0.7449528 0.26515888 #> 401  1905      7       0        1 0.4444444 0.26352314 0.7449528 0.26515888 #> 402  2076      6       0        2 0.4444444 0.26352314 0.7449528 0.26515888 #> 403  2269      4       0        2 0.4444444 0.26352314 0.7449528 0.26515888 #> 404  2528      2       0        2 0.4444444 0.26352314 0.7449528 0.26515888 #> 405   201     18       1        0 0.9444444 0.05716620 1.0000000 0.84433825 #> 406   228     17       1        0 0.8888889 0.08333333 1.0000000 0.75494274 #> 407   263     16       1        0 0.8333333 0.10540926 1.0000000 0.67778856 #> 408   322     15       1        0 0.7777778 0.12598816 0.9956274 0.60759503 #> 409   438     14       1        0 0.7222222 0.14617634 0.9618257 0.54230714 #> 410   709     13       1        0 0.6666667 0.16666667 0.9242206 0.48088565 #> 411  1042     12       1        0 0.6111111 0.18802536 0.8834209 0.42273938 #> 412  1788     11       1        0 0.5555556 0.21081851 0.8398013 0.36751786 #> 413  2120     10       0        2 0.5555556 0.21081851 0.8398013 0.36751786 #> 414  2365      8       0        2 0.5555556 0.21081851 0.8398013 0.36751786 #> 415  2487      6       0        2 0.5555556 0.21081851 0.8398013 0.36751786 #> 416  2628      4       0        2 0.5555556 0.21081851 0.8398013 0.36751786 #> 417  2761      2       0        2 0.5555556 0.21081851 0.8398013 0.36751786 #> 418   102     22       1        0 0.9545455 0.04652421 1.0000000 0.87135501 #> 419   218     21       1        0 0.9090909 0.06741999 1.0000000 0.79656151 #> 420   731     20       1        0 0.8636364 0.08471737 1.0000000 0.73150847 #> 421   835     19       1        0 0.8181818 0.10050378 0.9963199 0.67189414 #> 422   901     18       1        0 0.7727273 0.11562432 0.9692724 0.61603678 #> 423   966     17       1        0 0.7272727 0.13055824 0.9393527 0.56307458 #> 424  1089     16       1        0 0.6818182 0.14564382 0.9070700 0.51250291 #> 425  1198     15       1        1 0.6363636 0.16116459 0.8727481 0.46400409 #> 426  1323     13       1        0 0.5874126 0.17995633 0.8358385 0.41282324 #> 427  1530     12       1        0 0.5384615 0.19990007 0.7967277 0.36391456 #> 428  1723     11       1        0 0.4895105 0.22147449 0.7555817 0.31713383 #> 429  1968     10       0        2 0.4895105 0.22147449 0.7555817 0.31713383 #> 430  2170      8       0        2 0.4895105 0.22147449 0.7555817 0.31713383 #> 431  2391      6       0        1 0.4895105 0.22147449 0.7555817 0.31713383 #> 432  2532      5       0        2 0.4895105 0.22147449 0.7555817 0.31713383 #> 433  2577      3       0        2 0.4895105 0.22147449 0.7555817 0.31713383 #> 434  3214      1       0        1 0.4895105 0.22147449 0.7555817 0.31713383 #> 435   523      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 436   659      1       1        0 0.0000000        Inf        NA         NA #> 437   308      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 438   493      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 439   748      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 440   775      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 441  1048      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 442  1057      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 443  1656      2       1        0 0.1250000 0.93541435 0.7818729 0.01998407 #> 444  2171      1       1        0 0.0000000        Inf        NA         NA #> 445    94      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 446   125      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 447   489      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 448   685      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 449  2326      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 450  2447      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 451   845      6       1        1 0.8333333 0.18257419 1.0000000 0.58265480 #> 452  1106      4       1        0 0.6250000 0.34156503 1.0000000 0.31999216 #> 453  1790      3       1        0 0.4166667 0.53229065 1.0000000 0.14679192 #> 454  2227      2       0        2 0.4166667 0.53229065 1.0000000 0.14679192 #> 455   215      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 456   976      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 457  1759      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 458  1772      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 459  1935      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 460  2210      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 461   113     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 462   238     11       2        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 463   485      9       1        1 0.6666667 0.20412415 0.9946254 0.44684608 #> 464   665      7       1        1 0.5714286 0.25588316 0.9435612 0.34606192 #> 465   730      5       1        0 0.4571429 0.33981788 0.8898267 0.23485426 #> 466  1195      4       1        0 0.3428571 0.44588062 0.8215755 0.14308000 #> 467  2126      3       0        1 0.3428571 0.44588062 0.8215755 0.14308000 #> 468  2517      2       0        2 0.3428571 0.44588062 0.8215755 0.14308000 #> 469   276      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 470   961      1       1        0 0.0000000        Inf        NA         NA #> 471    88     14       1        0 0.9285714 0.07412493 1.0000000 0.80300835 #> 472   215     13       1        0 0.8571429 0.10910895 1.0000000 0.69211699 #> 473   291     12       1        0 0.7857143 0.13957263 1.0000000 0.59766828 #> 474   311     11       1        0 0.7142857 0.16903085 0.9948355 0.51285270 #> 475   352     10       1        0 0.6428571 0.19920477 0.9499000 0.43506192 #> 476  1178      9       1        0 0.5714286 0.23145502 0.8994496 0.36303381 #> 477  1475      8       1        0 0.5000000 0.26726124 0.8442347 0.29612619 #> 478  2213      7       0        2 0.5000000 0.26726124 0.8442347 0.29612619 #> 479  2284      5       1        0 0.4000000 0.34846603 0.7919081 0.20204363 #> 480  2695      4       1        1 0.3000000 0.45250625 0.7282748 0.12357973 #> 481  2765      2       0        2 0.3000000 0.45250625 0.7282748 0.12357973 #> 482   712      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 483  1081      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 484  1482      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 485  2231      1       0        1 0.2500000 0.86602540 1.0000000 0.04579076 #> 486    43      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 487   570      1       1        0 0.0000000        Inf        NA         NA #> 488  1870      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 489  2229      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 490   751      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 491  1325      1       1        0 0.0000000        Inf        NA         NA #> 492   235      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 493   439      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 494   573      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 495  1568      1       1        0 0.0000000        Inf        NA         NA #> 496   504      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 497   675      1       1        0 0.0000000        Inf        NA         NA #> 498   482      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 499  1145      1       1        0 0.0000000        Inf        NA         NA #> 500  2613      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 501   511      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 502   573      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 503  1178      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 504  1295      1       1        0 0.0000000        Inf        NA         NA #> 505   959      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 506  2173      3       0        1 0.7500000 0.28867513 1.0000000 0.42593227 #> 507  2572      2       0        2 0.7500000 0.28867513 1.0000000 0.42593227 #> 508   413      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 509  1122      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 510  1564      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 511  2339      1       0        1 0.2500000 0.86602540 1.0000000 0.04579076 #> 512  2114      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 513  2349      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 514   116      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 515   286      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 516   608      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 517   961      1       1        0 0.0000000        Inf        NA         NA #> 518   286      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 519   559      1       1        0 0.0000000        Inf        NA         NA #> 520   260      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 521   415      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 522   438      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 523   909      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 524  2708      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 525   313      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 526  1161      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 527  2147      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 528   372      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 529  1768      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 530  2908      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 531  2789      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 532  1589      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 533  2385      5       0        1 0.8333333 0.18257419 1.0000000 0.58265480 #> 534  2545      4       0        2 0.8333333 0.18257419 1.0000000 0.58265480 #> 535  3329      2       0        2 0.8333333 0.18257419 1.0000000 0.58265480 #> 536   333      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 537   366      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 538  2951      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 539   145      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 540   257      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 541   578      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 542  2111      3       0        2 0.5000000 0.40824829 1.0000000 0.22463035 #> 543  2663      1       0        1 0.5000000 0.40824829 1.0000000 0.22463035 #> 544    72      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 545   122      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 546   335      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 547   490      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 548   997      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 549  2152      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 550  2739      2       0        2 0.2500000 0.61237244 0.8302184 0.07528139 #> 551   352      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 552  1551      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 553  1864      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 554  2171      2       1        0 0.3333333 0.76376262 1.0000000 0.07460412 #> 555  2565      1       0        1 0.3333333 0.76376262 1.0000000 0.07460412 #> 556  2442      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 557  2544      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 558  2703      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 559    38      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 560    93      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 561  1992      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 562  2190      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 563  2779      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 564    77      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 565   232      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 566  2187      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 567  2191      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 568  2588      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 569   439     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 570   720      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 571  2323      8       0        2 0.8000000 0.15811388 1.0000000 0.58681770 #> 572  2513      6       0        2 0.8000000 0.15811388 1.0000000 0.58681770 #> 573  2628      4       0        2 0.8000000 0.15811388 1.0000000 0.58681770 #> 574  2740      2       0        2 0.8000000 0.15811388 1.0000000 0.58681770 #> 575   615      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 576  1687      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 577  1850      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 578  2312      5       0        2 0.6250000 0.27386128 1.0000000 0.36540028 #> 579  2347      3       0        1 0.6250000 0.27386128 1.0000000 0.36540028 #> 580  2802      2       0        2 0.6250000 0.27386128 1.0000000 0.36540028 #> 581   146     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 582   175      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 583   181      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 584   204      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 585   342      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 586   402      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 587   952      4       1        0 0.3000000 0.48304589 0.7731979 0.11639970 #> 588  1183      3       1        0 0.2000000 0.63245553 0.6908394 0.05790057 #> 589  2138      2       0        1 0.2000000 0.63245553 0.6908394 0.05790057 #> 590  2310      1       0        1 0.2000000 0.63245553 0.6908394 0.05790057 #> 591   113     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 592   314      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 593   337      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 594   348      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 595   440      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 596   684      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 597   709      4       1        0 0.3000000 0.48304589 0.7731979 0.11639970 #> 598  1851      3       1        0 0.2000000 0.63245553 0.6908394 0.05790057 #> 599  1981      2       0        2 0.2000000 0.63245553 0.6908394 0.05790057 #> 600   560      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 601   730      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 602  1902      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 603  2250      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 604  3325      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 605   224      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 606  2122      3       0        2 0.7500000 0.28867513 1.0000000 0.42593227 #> 607  2242      1       0        1 0.7500000 0.28867513 1.0000000 0.42593227 #> 608    85      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 609    98      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 610   283      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 611   325      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 612   355      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 613  2393      3       0        2 0.3750000 0.45643546 0.9173812 0.15328960 #> 614  2467      1       0        1 0.3750000 0.45643546 0.9173812 0.15328960 #> 615   176     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 616   226      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 617   271      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 618   444      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 619  2152      6       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 620  2501      4       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 621  2711      2       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 622   356      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 623   642      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 624   663      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 625  1037      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 626  1647      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 627  1820      3       0        2 0.3750000 0.45643546 0.9173812 0.15328960 #> 628  2188      1       0        1 0.3750000 0.45643546 0.9173812 0.15328960 #> 629    91      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 630   759      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 631  2656      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 632   185     18       2        0 0.8888889 0.08333333 1.0000000 0.75494274 #> 633   290     16       1        0 0.8333333 0.10540926 1.0000000 0.67778856 #> 634   505     15       1        0 0.7777778 0.12598816 0.9956274 0.60759503 #> 635   593     14       1        0 0.7222222 0.14617634 0.9618257 0.54230714 #> 636   697     13       1        0 0.6666667 0.16666667 0.9242206 0.48088565 #> 637   706     12       1        0 0.6111111 0.18802536 0.8834209 0.42273938 #> 638   806     11       1        0 0.5555556 0.21081851 0.8398013 0.36751786 #> 639   858     10       1        0 0.5000000 0.23570226 0.7935972 0.31502127 #> 640   944      9       1        0 0.4444444 0.26352314 0.7449528 0.26515888 #> 641   960      8       1        0 0.3888889 0.29546842 0.6939508 0.21793268 #> 642   968      7       1        0 0.3333333 0.33333333 0.6406378 0.17343826 #> 643  1034      6       1        0 0.2777778 0.38005848 0.5850647 0.13188370 #> 644  1055      5       1        0 0.2222222 0.44095855 0.5273902 0.09363601 #> 645  1275      4       1        0 0.1666667 0.52704628 0.4682431 0.05932342 #> 646  1509      3       1        0 0.1111111 0.66666667 0.4104169 0.03008083 #> 647  2186      2       0        2 0.1111111 0.66666667 0.4104169 0.03008083 #> 648   116     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 649   370      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 650   680      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 651   902      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 652   940      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 653  1191      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 654  1918      4       1        1 0.3000000 0.48304589 0.7731979 0.11639970 #> 655  2506      2       0        2 0.3000000 0.48304589 0.7731979 0.11639970 #> 656   290     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 657   294     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 658   532     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 659   643      9       1        0 0.6666667 0.20412415 0.9946254 0.44684608 #> 660   678      8       1        0 0.5833333 0.24397502 0.9409980 0.36161371 #> 661   766      7       1        0 0.5000000 0.28867513 0.8804217 0.28395485 #> 662  1838      6       0        2 0.5000000 0.28867513 0.8804217 0.28395485 #> 663  2280      4       0        2 0.5000000 0.28867513 0.8804217 0.28395485 #> 664  2548      2       0        2 0.5000000 0.28867513 0.8804217 0.28395485 #> 665   891      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 666  1219      1       1        0 0.0000000        Inf        NA         NA #> 667   169      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 668   174      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 669   382      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 670  1652      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 671  2154      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 672  1211      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 673  2497      3       0        1 0.7500000 0.28867513 1.0000000 0.42593227 #> 674  2709      2       0        2 0.7500000 0.28867513 1.0000000 0.42593227 #> 675   218     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 676  1092     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 677  2058     10       0        2 0.8333333 0.12909944 1.0000000 0.64703699 #> 678  2065      8       0        2 0.8333333 0.12909944 1.0000000 0.64703699 #> 679  2144      6       0        2 0.8333333 0.12909944 1.0000000 0.64703699 #> 680  2200      4       0        2 0.8333333 0.12909944 1.0000000 0.64703699 #> 681  2828      2       0        2 0.8333333 0.12909944 1.0000000 0.64703699 #> 682  1471      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 683  1885      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 684  2284      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 685  2331      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 686   654      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 687  1117      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 688  2079      4       1        1 0.5000000 0.40824829 1.0000000 0.22463035 #> 689  2676      2       0        2 0.5000000 0.40824829 1.0000000 0.22463035 #> 690  2161      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 691  1980      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 692    56      2       1        1 0.5000000 0.70710678 1.0000000 0.12504883 #> 693   189      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 694  1207      1       1        0 0.0000000        Inf        NA         NA #> 695   246      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 696   499      1       1        0 0.0000000        Inf        NA         NA #> 697  2006      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 698  1939      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 699  1606      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 700  2128      1       1        0 0.0000000        Inf        NA         NA #> 701   111      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 702   165      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 703   458      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 704   986      1       1        0 0.0000000        Inf        NA         NA #> 705   191      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 706   362      1       1        0 0.0000000        Inf        NA         NA #> 707   429      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 708  2129      3       0        1 0.7500000 0.28867513 1.0000000 0.42593227 #> 709  2270      2       0        2 0.7500000 0.28867513 1.0000000 0.42593227 #> 710   900      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 711  1112      1       1        0 0.0000000        Inf        NA         NA #> 712    80      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 713   206      1       1        0 0.0000000        Inf        NA         NA #> 714   653      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 715  1135      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 716  2066      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 717  2525      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 718  1029      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 719  1829      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 720  2148      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 721  2099      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 722  2263      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 723  2765      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 724   668      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 725  2142      7       0        2 0.8750000 0.13363062 1.0000000 0.67338194 #> 726  2593      5       1        0 0.7000000 0.26049404 1.0000000 0.42011203 #> 727  2730      4       0        2 0.7000000 0.26049404 1.0000000 0.42011203 #> 728  3173      2       0        2 0.7000000 0.26049404 1.0000000 0.42011203 #> 729   330      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 730   386      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 731   548      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 732   589      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 733   602      2       1        0 0.1666667 0.91287093 0.9974380 0.02784913 #> 734   755      1       1        0 0.0000000        Inf        NA         NA #> 735   380      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 736   795      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 737  1026      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 738  2509      5       0        2 0.6250000 0.27386128 1.0000000 0.36540028 #> 739  2520      3       0        2 0.6250000 0.27386128 1.0000000 0.36540028 #> 740  2723      1       0        1 0.6250000 0.27386128 1.0000000 0.36540028 #> 741  2138      8       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 742  2227      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 743  2472      4       0        4 1.0000000 0.00000000 1.0000000 1.00000000 #> 744    78      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 745   141      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 746   219      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 747   323      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 748  1895      2       1        0 0.1666667 0.91287093 0.9974380 0.02784913 #> 749  2969      1       0        1 0.1666667 0.91287093 0.9974380 0.02784913 #> 750   279      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 751   513      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 752   647      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 753  1046      1       1        0 0.0000000        Inf        NA         NA #> 754    98      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 755   723      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 756  2274      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 757  2380      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 758   250     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 759   262     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 760   582     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 761   638      9       1        0 0.6666667 0.20412415 0.9946254 0.44684608 #> 762  1839      8       1        0 0.5833333 0.24397502 0.9409980 0.36161371 #> 763  1976      7       1        0 0.5000000 0.28867513 0.8804217 0.28395485 #> 764  2303      6       0        2 0.5000000 0.28867513 0.8804217 0.28395485 #> 765  2356      4       0        2 0.5000000 0.28867513 0.8804217 0.28395485 #> 766  2683      2       1        0 0.2500000 0.76376262 1.0000000 0.05595309 #> 767  2765      1       0        1 0.2500000 0.76376262 1.0000000 0.05595309 #> 768   253      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 769   366      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 770   474      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 771   583      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 772   629      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 773   729      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 774   905      2       1        0 0.1250000 0.93541435 0.7818729 0.01998407 #> 775  1061      1       1        0 0.0000000        Inf        NA         NA #> 776  2018      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 777  2130      5       0        2 0.8333333 0.18257419 1.0000000 0.58265480 #> 778  2244      3       0        2 0.8333333 0.18257419 1.0000000 0.58265480 #> 779  2718      1       1        0 0.0000000        Inf        NA         NA #> 780   119      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 781   356      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 782   525      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 783   527      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 784   739      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 785   764      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 786  2449      2       0        2 0.2500000 0.61237244 0.8302184 0.07528139 #> 787   196      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 788   222      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 789   454      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 790  1041      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 791  2264      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 792  2690      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 793   174     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 794   348     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 795   476     14       1        0 0.8125000 0.12009612 1.0000000 0.64209217 #> 796   553     13       1        0 0.7500000 0.14433757 0.9952258 0.56519837 #> 797   885     12       1        0 0.6875000 0.16854997 0.9566271 0.49408619 #> 798   938     11       1        1 0.6250000 0.19364917 0.9135125 0.42760773 #> 799  1399      9       1        0 0.5555556 0.22669118 0.8663380 0.35626045 #> 800  2449      8       0        2 0.5555556 0.22669118 0.8663380 0.35626045 #> 801  2555      6       0        2 0.5555556 0.22669118 0.8663380 0.35626045 #> 802  2764      4       0        2 0.5555556 0.22669118 0.8663380 0.35626045 #> 803  2772      2       0        2 0.5555556 0.22669118 0.8663380 0.35626045 #> 804    19      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 805   422      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 806  2012      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 807  2174      3       0        2 0.5000000 0.40824829 1.0000000 0.22463035 #> 808  2386      1       0        1 0.5000000 0.40824829 1.0000000 0.22463035 #> 809   136     14       1        0 0.9285714 0.07412493 1.0000000 0.80300835 #> 810   274     13       1        0 0.8571429 0.10910895 1.0000000 0.69211699 #> 811   276     12       1        0 0.7857143 0.13957263 1.0000000 0.59766828 #> 812   300     11       1        0 0.7142857 0.16903085 0.9948355 0.51285270 #> 813   314     10       1        0 0.6428571 0.19920477 0.9499000 0.43506192 #> 814   512      9       1        0 0.5714286 0.23145502 0.8994496 0.36303381 #> 815   833      8       1        0 0.5000000 0.26726124 0.8442347 0.29612619 #> 816  1932      7       1        0 0.4285714 0.30860670 0.7847110 0.23406513 #> 817  2093      6       0        2 0.4285714 0.30860670 0.7847110 0.23406513 #> 818  2212      4       0        2 0.4285714 0.30860670 0.7847110 0.23406513 #> 819  2484      2       0        2 0.4285714 0.30860670 0.7847110 0.23406513 #> 820   100     20       1        0 0.9500000 0.05129892 1.0000000 0.85912803 #> 821   147     19       1        0 0.9000000 0.07453560 1.0000000 0.77767420 #> 822   150     18       1        0 0.8500000 0.09393364 1.0000000 0.70707008 #> 823   171     17       1        0 0.8000000 0.11180340 0.9959951 0.64257343 #> 824   465     16       1        0 0.7500000 0.12909944 0.9659417 0.58233329 #> 825   613     15       1        0 0.7000000 0.14638501 0.9326124 0.52540584 #> 826   664     14       1        0 0.6500000 0.16408253 0.8965627 0.47124424 #> 827  1434     13       1        0 0.6000000 0.18257419 0.8581411 0.41951145 #> 828  2076     12       0        2 0.6000000 0.18257419 0.8581411 0.41951145 #> 829  2183     10       0        2 0.6000000 0.18257419 0.8581411 0.41951145 #> 830  2252      8       0        2 0.6000000 0.18257419 0.8581411 0.41951145 #> 831  2600      6       0        2 0.6000000 0.18257419 0.8581411 0.41951145 #> 832  2679      4       0        2 0.6000000 0.18257419 0.8581411 0.41951145 #> 833  2901      2       0        2 0.6000000 0.18257419 0.8581411 0.41951145 #> 834   258      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 835   406      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 836   717      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 837   759      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 838  2100      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 839  2568      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 840   230     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 841   565     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 842   580     14       1        0 0.8125000 0.12009612 1.0000000 0.64209217 #> 843   675     13       1        0 0.7500000 0.14433757 0.9952258 0.56519837 #> 844  1052     12       1        0 0.6875000 0.16854997 0.9566271 0.49408619 #> 845  1154     11       1        0 0.6250000 0.19364917 0.9135125 0.42760773 #> 846  1252     10       1        0 0.5625000 0.22047928 0.8665524 0.36513228 #> 847  1537      9       0        2 0.5625000 0.22047928 0.8665524 0.36513228 #> 848  2343      7       0        2 0.5625000 0.22047928 0.8665524 0.36513228 #> 849  2345      5       0        1 0.5625000 0.22047928 0.8665524 0.36513228 #> 850  2547      4       0        2 0.5625000 0.22047928 0.8665524 0.36513228 #> 851  3085      2       0        2 0.5625000 0.22047928 0.8665524 0.36513228 #> 852   263     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 853   498     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 854   708     14       1        0 0.8125000 0.12009612 1.0000000 0.64209217 #> 855   875     13       1        0 0.7500000 0.14433757 0.9952258 0.56519837 #> 856  1108     12       1        0 0.6875000 0.16854997 0.9566271 0.49408619 #> 857  1114     11       1        0 0.6250000 0.19364917 0.9135125 0.42760773 #> 858  1262     10       1        0 0.5625000 0.22047928 0.8665524 0.36513228 #> 859  1298      9       1        0 0.5000000 0.25000000 0.8161508 0.30631596 #> 860  1405      8       1        0 0.4375000 0.28347335 0.7625547 0.25100658 #> 861  2067      7       1        0 0.3750000 0.32274861 0.7059198 0.19920817 #> 862  2212      6       0        1 0.3750000 0.32274861 0.7059198 0.19920817 #> 863  2254      5       0        1 0.3750000 0.32274861 0.7059198 0.19920817 #> 864  2352      4       0        2 0.3750000 0.32274861 0.7059198 0.19920817 #> 865  2387      2       0        2 0.3750000 0.32274861 0.7059198 0.19920817 #> 866   216      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 867   475      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 868   491      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 869   743      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 870  2204      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 871  2558      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 872   336     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 873   369      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 874   573      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 875  1540      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 876  2386      6       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 877  2423      4       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 878  2958      2       0        2 0.6000000 0.25819889 0.9952462 0.36171953 #> 879   121      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 880   430      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 881  2458      4       1        1 0.5000000 0.40824829 1.0000000 0.22463035 #> 882  2495      2       0        2 0.5000000 0.40824829 1.0000000 0.22463035 #> 883    62     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 884   230      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 885   316      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 886   337      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 887   376      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 888  1103      5       1        1 0.4000000 0.38729833 0.8545332 0.18723673 #> 889  2023      3       1        0 0.2666667 0.56273143 0.8034643 0.08850562 #> 890  2231      2       1        0 0.1333333 0.90369611 0.7837296 0.02268356 #> 891  2910      1       1        0 0.0000000        Inf        NA         NA #> 892   742      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 893   931      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 894   969      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 895  1105      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 896  1964      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 897  2915      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 898   105      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 899   183      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 900   343      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 901   349      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 902   672      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 903  1186      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 904  1548      2       1        1 0.1250000 0.93541435 0.7818729 0.01998407 #> 905   219      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 906   356      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 907   569      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 908   828      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 909   846      2       1        0 0.1666667 0.91287093 0.9974380 0.02784913 #> 910   961      1       1        0 0.0000000        Inf        NA         NA #> 911    24     16       1        1 0.9375000 0.06454972 1.0000000 0.82608827 #> 912   279     14       1        0 0.8705357 0.09829126 1.0000000 0.71799417 #> 913   486     13       1        1 0.8035714 0.12677314 1.0000000 0.62677981 #> 914   546     11       1        0 0.7305195 0.15862641 0.9969075 0.53531419 #> 915  1561     10       1        0 0.6574675 0.19045590 0.9549721 0.45264524 #> 916  1709      9       1        0 0.5844156 0.22396950 0.9064941 0.37677198 #> 917  1971      8       0        2 0.5844156 0.22396950 0.9064941 0.37677198 #> 918  2618      6       0        2 0.5844156 0.22396950 0.9064941 0.37677198 #> 919  2691      4       0        2 0.5844156 0.22396950 0.9064941 0.37677198 #> 920  2726      2       0        2 0.5844156 0.22396950 0.9064941 0.37677198 #> 921    35     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 922   113     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 923   129     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 924   157      9       1        0 0.6666667 0.20412415 0.9946254 0.44684608 #> 925   171      8       1        0 0.5833333 0.24397502 0.9409980 0.36161371 #> 926   330      7       1        0 0.5000000 0.28867513 0.8804217 0.28395485 #> 927   602      6       1        0 0.4166667 0.34156503 0.8138220 0.21332811 #> 928   797      5       1        0 0.3333333 0.40824829 0.7419597 0.14975357 #> 929   890      4       1        0 0.2500000 0.50000000 0.6661021 0.09382946 #> 930   997      3       1        0 0.1666667 0.64549722 0.5906048 0.04703277 #> 931  1879      2       0        2 0.1666667 0.64549722 0.5906048 0.04703277 #> 932    28     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 933   628      9       1        1 0.8000000 0.15811388 1.0000000 0.58681770 #> 934   797      7       1        0 0.6857143 0.22092878 1.0000000 0.44472166 #> 935  2185      6       0        2 0.6857143 0.22092878 1.0000000 0.44472166 #> 936  2289      4       0        2 0.6857143 0.22092878 1.0000000 0.44472166 #> 937  2416      2       0        2 0.6857143 0.22092878 1.0000000 0.44472166 #> 938   219      8       1        1 0.8750000 0.13363062 1.0000000 0.67338194 #> 939   341      6       1        0 0.7291667 0.22625312 1.0000000 0.46799348 #> 940  1879      5       1        0 0.5833333 0.31810451 1.0000000 0.31271286 #> 941  2332      4       0        2 0.5833333 0.31810451 1.0000000 0.31271286 #> 942  2444      2       0        2 0.5833333 0.31810451 1.0000000 0.31271286 #> 943   191      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 944   443      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 945   851      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 946  1018      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 947  2414      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 948   229      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 949   420      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 950   599      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 951   669      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 952  1013      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 953  1215      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 954  2720      2       0        2 0.2500000 0.61237244 0.8302184 0.07528139 #> 955  1828      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 956   389      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 957   522      1       1        0 0.0000000        Inf        NA         NA #> 958    62      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 959   133      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 960   176      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 961   179      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 962   191      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 963   472      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 964   883      2       1        0 0.1250000 0.93541435 0.7818729 0.01998407 #> 965   942      1       1        0 0.0000000        Inf        NA         NA #> 966   922      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 967   939      1       1        0 0.0000000        Inf        NA         NA #> 968  2030      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 969  2869      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 970  1421      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 971   255      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 972   415      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 973   576      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 974   765      1       1        0 0.0000000        Inf        NA         NA #> 975     8      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 976   183      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 977   490      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 978  1752      1       1        0 0.0000000        Inf        NA         NA #> 979  2460      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 980  3019      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 981   160      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 982   601      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 983   604      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 984   887      1       1        0 0.0000000        Inf        NA         NA #> 985   132      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 986   693      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 987  2169      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 988  2192      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 989   365      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 990   466      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 991   499      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 992   811      1       1        0 0.0000000        Inf        NA         NA #> 993  2474      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 994   322      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 995   550      1       1        0 0.0000000        Inf        NA         NA #> 996   199      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 997   692      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 998  2821      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 999   315      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1000  484      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1001 1913      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1002 2147      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1003  431      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 1004 1446      1       1        0 0.0000000        Inf        NA         NA #> 1005   68      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1006  127      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1007  205      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 1008  389      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 1009 1488      2       1        0 0.1666667 0.91287093 0.9974380 0.02784913 #> 1010 1995      1       1        0 0.0000000        Inf        NA         NA #> 1011 2250      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1012  554      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1013  887      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1014 2590      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1015  215      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1016  498      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1017 2072      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1018 2527      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1019 2631      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1020 2950      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1021  260      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1022  614      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1023 2076      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1024 2969      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1025 2008      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1026   23     10       1        1 0.9000000 0.10540926 1.0000000 0.73201164 #> 1027  602      8       1        0 0.7875000 0.17020063 1.0000000 0.56412523 #> 1028 1905      7       0        2 0.7875000 0.17020063 1.0000000 0.56412523 #> 1029 2084      5       0        2 0.7875000 0.17020063 1.0000000 0.56412523 #> 1030 2101      3       0        1 0.7875000 0.17020063 1.0000000 0.56412523 #> 1031 2678      2       0        2 0.7875000 0.17020063 1.0000000 0.56412523 #> 1032 1037      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 1033 2835      1       0        1 0.5000000 0.70710678 1.0000000 0.12504883 #> 1034 1032      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1035 1306      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1036 2070      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1037 2209      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1038  458      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1039  491      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1040  603      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 1041  862      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 1042 1786      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 1043 2127      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 1044 2353      2       0        2 0.2500000 0.61237244 0.8302184 0.07528139 #> 1045  322     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 1046  400      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 1047  593      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 1048  649      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 1049 1387      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 1050 1929      5       0        2 0.5000000 0.31622777 0.9292735 0.26902736 #> 1051 2439      3       0        2 0.5000000 0.31622777 0.9292735 0.26902736 #> 1052 2775      1       0        1 0.5000000 0.31622777 0.9292735 0.26902736 #> 1053  185     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 1054  269      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 1055  485      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 1056  580      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 1057  904      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 1058 1767      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 1059 2198      4       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 1060 2221      2       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 1061   40     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 1062   79      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 1063  405      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 1064  666      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 1065  711      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 1066  961      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 1067 2461      4       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 1068 2488      2       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 1069  165      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1070  428      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1071  578      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 1072 1201      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 1073 2840      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 1074  146     14       1        0 0.9285714 0.07412493 1.0000000 0.80300835 #> 1075  283     13       1        0 0.8571429 0.10910895 1.0000000 0.69211699 #> 1076  328     12       1        0 0.7857143 0.13957263 1.0000000 0.59766828 #> 1077  609     11       1        0 0.7142857 0.16903085 0.9948355 0.51285270 #> 1078 2245     10       0        2 0.7142857 0.16903085 0.9948355 0.51285270 #> 1079 2410      8       0        2 0.7142857 0.16903085 0.9948355 0.51285270 #> 1080 2445      6       0        2 0.7142857 0.16903085 0.9948355 0.51285270 #> 1081 2760      4       0        2 0.7142857 0.16903085 0.9948355 0.51285270 #> 1082 2820      2       0        2 0.7142857 0.16903085 0.9948355 0.51285270 #> 1083   49      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1084   52      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1085  536      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 1086 1671      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 1087 1814      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 1088 2107      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 1089  360      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1090  460      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1091  805      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 1092 1637      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 1093 2028      2       1        0 0.1666667 0.91287093 0.9974380 0.02784913 #> 1094 2156      1       0        1 0.1666667 0.91287093 0.9974380 0.02784913 #> 1095 2378      8       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1096 2530      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1097 2630      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1098 2883      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1099  161     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 1100  242      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 1101  304      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 1102  336      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 1103  592      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 1104  916      5       1        0 0.4000000 0.38729833 0.8545332 0.18723673 #> 1105 2362      4       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 1106 3238      2       0        2 0.4000000 0.38729833 0.8545332 0.18723673 #> 1107  393      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1108  529      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1109  853      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 1110 1511      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 1111 2375      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 1112 2927      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 1113  208     20       1        0 0.9500000 0.05129892 1.0000000 0.85912803 #> 1114  237     19       1        0 0.9000000 0.07453560 1.0000000 0.77767420 #> 1115  245     18       1        0 0.8500000 0.09393364 1.0000000 0.70707008 #> 1116  276     17       1        0 0.8000000 0.11180340 0.9959951 0.64257343 #> 1117  293     16       1        0 0.7500000 0.12909944 0.9659417 0.58233329 #> 1118  302     15       1        0 0.7000000 0.14638501 0.9326124 0.52540584 #> 1119  340     14       1        1 0.6500000 0.16408253 0.8965627 0.47124424 #> 1120  526     12       1        0 0.5958333 0.18573862 0.8574835 0.41402236 #> 1121  554     11       1        0 0.5416667 0.20878157 0.8155438 0.35976335 #> 1122  616     10       1        0 0.4875000 0.23388214 0.7710019 0.30824340 #> 1123  806      9       1        0 0.4333333 0.26189644 0.7240170 0.25935549 #> 1124 1831      8       1        1 0.3791667 0.29401851 0.6746821 0.21308905 #> 1125 2165      6       0        2 0.3791667 0.29401851 0.6746821 0.21308905 #> 1126 2277      4       0        2 0.3791667 0.29401851 0.6746821 0.21308905 #> 1127 2653      2       0        2 0.3791667 0.29401851 0.6746821 0.21308905 #> 1128  296      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1129  503      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1130 2174      4       1        1 0.5000000 0.40824829 1.0000000 0.22463035 #> 1131 2747      2       0        2 0.5000000 0.40824829 1.0000000 0.22463035 #> 1132  101     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 1133  141      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 1134 1024      8       1        0 0.7000000 0.20701967 1.0000000 0.46653323 #> 1135 1276      7       1        0 0.6000000 0.25819889 0.9952462 0.36171953 #> 1136 1329      6       1        0 0.5000000 0.31622777 0.9292735 0.26902736 #> 1137 2103      5       0        2 0.5000000 0.31622777 0.9292735 0.26902736 #> 1138 2441      3       0        1 0.5000000 0.31622777 0.9292735 0.26902736 #> 1139 3308      2       0        2 0.5000000 0.31622777 0.9292735 0.26902736 #> 1140  157      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1141  363      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1142  443      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 1143  802      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 1144 2316      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 1145  329     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 1146 1022     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 1147 1233     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 1148 1620      9       1        0 0.6666667 0.20412415 0.9946254 0.44684608 #> 1149 1827      8       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 1150 1985      6       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 1151 2889      4       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 1152 2913      2       0        2 0.6666667 0.20412415 0.9946254 0.44684608 #> 1153  198     18       1        0 0.9444444 0.05716620 1.0000000 0.84433825 #> 1154  274     17       1        0 0.8888889 0.08333333 1.0000000 0.75494274 #> 1155  700     16       1        0 0.8333333 0.10540926 1.0000000 0.67778856 #> 1156 1273     15       1        0 0.7777778 0.12598816 0.9956274 0.60759503 #> 1157 1644     14       1        0 0.7222222 0.14617634 0.9618257 0.54230714 #> 1158 1668     13       2        0 0.6111111 0.18802536 0.8834209 0.42273938 #> 1159 2136     11       0        2 0.6111111 0.18802536 0.8834209 0.42273938 #> 1160 2189      9       0        2 0.6111111 0.18802536 0.8834209 0.42273938 #> 1161 2197      7       1        0 0.5238095 0.24323458 0.8437524 0.32518593 #> 1162 2290      6       0        2 0.5238095 0.24323458 0.8437524 0.32518593 #> 1163 2408      4       0        2 0.5238095 0.24323458 0.8437524 0.32518593 #> 1164 2674      2       0        2 0.5238095 0.24323458 0.8437524 0.32518593 #> 1165  434      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1166 1550      7       1        1 0.7500000 0.20412415 1.0000000 0.50270184 #> 1167 2331      5       0        3 0.7500000 0.20412415 1.0000000 0.50270184 #> 1168 3024      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1169 2496      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1170 2713      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1171  261     18       1        0 0.9444444 0.05716620 1.0000000 0.84433825 #> 1172  380     17       1        0 0.8888889 0.08333333 1.0000000 0.75494274 #> 1173  448     16       1        0 0.8333333 0.10540926 1.0000000 0.67778856 #> 1174  657     15       1        0 0.7777778 0.12598816 0.9956274 0.60759503 #> 1175  802     14       1        0 0.7222222 0.14617634 0.9618257 0.54230714 #> 1176  884     13       1        1 0.6666667 0.16666667 0.9242206 0.48088565 #> 1177  911     11       1        0 0.6060606 0.19201220 0.8829928 0.41598241 #> 1178 1142     10       1        0 0.5454545 0.21904291 0.8379309 0.35506585 #> 1179 1607      9       1        1 0.4848485 0.24873417 0.7894579 0.29777150 #> 1180 2021      7       1        0 0.4155844 0.29270841 0.7375867 0.23415606 #> 1181 2181      6       0        2 0.4155844 0.29270841 0.7375867 0.23415606 #> 1182 2364      4       0        2 0.4155844 0.29270841 0.7375867 0.23415606 #> 1183 2592      2       0        2 0.4155844 0.29270841 0.7375867 0.23415606 #> 1184 1800      8       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1185 2321      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1186 2450      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1187 2506      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1188  186      8       2        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1189 2043      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1190 2541      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1191 2871      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1192  408      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1193 2191      3       0        2 0.7500000 0.28867513 1.0000000 0.42593227 #> 1194 2381      1       0        1 0.7500000 0.28867513 1.0000000 0.42593227 #> 1195 2219      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1196 2842      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1197  326      2       1        1 0.5000000 0.70710678 1.0000000 0.12504883 #> 1198 2724      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1199  392      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1200  591      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1201  692      2       1        0 0.2500000 0.86602540 1.0000000 0.04579076 #> 1202 1439      1       1        0 0.0000000        Inf        NA         NA #> 1203  134      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 1204  643      1       1        0 0.0000000        Inf        NA         NA #> 1205  636      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 1206 1151      1       1        0 0.0000000        Inf        NA         NA #> 1207 2517      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1208  934      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1209 1365      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1210 2050      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1211  594      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1212  616      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1213 1138      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 1214 1159      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 1215 1495      2       1        0 0.1666667 0.91287093 0.9974380 0.02784913 #> 1216 2360      1       0        1 0.1666667 0.91287093 0.9974380 0.02784913 #> 1217   91      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1218  441      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1219 1279      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1220  701      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1221 1246      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1222 1861      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1223 2031      4       1        0 0.5625000 0.35355339 1.0000000 0.28130492 #> 1224 2355      3       0        1 0.5625000 0.35355339 1.0000000 0.28130492 #> 1225 2899      2       0        2 0.5625000 0.35355339 1.0000000 0.28130492 #> 1226 2299      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1227  968      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1228 1521      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1229 2198      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1230  256      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1231  736      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1232 1474      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1233  683      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1234 1302      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1235 1918      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1236 2099      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1237 2332      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1238 1277      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1239 1783      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1240 2278      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1241 2350      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1242 2055      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1243  448      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1244  712      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1245 1723      4       1        0 0.5000000 0.40824829 1.0000000 0.22463035 #> 1246 1812      3       1        0 0.3333333 0.57735027 1.0000000 0.10750714 #> 1247 2726      2       0        2 0.3333333 0.57735027 1.0000000 0.10750714 #> 1248  154      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1249  324      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1250 2699      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1251  617      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1252 1145      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1253 3309      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1254 2222      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1255 1025      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1256 1279      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1257 2472      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1258 3185      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1259    9     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 1260   34     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 1261 1876     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 1262 2020      9       0        2 0.7500000 0.16666667 1.0000000 0.54099636 #> 1263 2240      7       0        2 0.7500000 0.16666667 1.0000000 0.54099636 #> 1264 2330      5       0        2 0.7500000 0.16666667 1.0000000 0.54099636 #> 1265 2482      3       1        0 0.5000000 0.44095855 1.0000000 0.21068102 #> 1266 2905      2       0        2 0.5000000 0.44095855 1.0000000 0.21068102 #> 1267  252      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1268  279      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1269  497      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 1270  641      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 1271 2263      4       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 1272 2672      2       0        2 0.5000000 0.35355339 0.9998048 0.25004882 #> 1273   63      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1274  144      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1275 2162      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1276 2300      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1277 2513      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1278 2162      8       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1279 2592      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1280 2682      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1281 2754      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1282 2120     12       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1283 2179     10       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1284 2488      8       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1285 2725      6       1        1 0.8333333 0.18257419 1.0000000 0.58265480 #> 1286 2781      4       0        2 0.8333333 0.18257419 1.0000000 0.58265480 #> 1287 2916      2       0        2 0.8333333 0.18257419 1.0000000 0.58265480 #> 1288  422      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1289  977      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1290 2029      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1291 2066      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1292 1814     12       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1293 2047     10       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1294 2180      8       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1295 2520      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1296 2538      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1297 2737      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1298  386      6       1        0 0.8333333 0.18257419 1.0000000 0.58265480 #> 1299  430      5       1        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1300 2304      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1301 2309      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1302  285     20       1        0 0.9500000 0.05129892 1.0000000 0.85912803 #> 1303  466     19       1        0 0.9000000 0.07453560 1.0000000 0.77767420 #> 1304  578     18       1        0 0.8500000 0.09393364 1.0000000 0.70707008 #> 1305  696     17       1        0 0.8000000 0.11180340 0.9959951 0.64257343 #> 1306 1122     16       1        0 0.7500000 0.12909944 0.9659417 0.58233329 #> 1307 1798     15       1        0 0.7000000 0.14638501 0.9326124 0.52540584 #> 1308 2076     14       0        2 0.7000000 0.14638501 0.9326124 0.52540584 #> 1309 2183     12       0        2 0.7000000 0.14638501 0.9326124 0.52540584 #> 1310 2267     10       0        2 0.7000000 0.14638501 0.9326124 0.52540584 #> 1311 2422      8       0        2 0.7000000 0.14638501 0.9326124 0.52540584 #> 1312 2497      6       0        2 0.7000000 0.14638501 0.9326124 0.52540584 #> 1313 2985      4       0        2 0.7000000 0.14638501 0.9326124 0.52540584 #> 1314 3087      2       0        2 0.7000000 0.14638501 0.9326124 0.52540584 #> 1315  116      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1316  271      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1317 2117      6       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1318 2350      4       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1319 2941      2       0        2 0.7500000 0.20412415 1.0000000 0.50270184 #> 1320  303     12       1        0 0.9166667 0.08703883 1.0000000 0.77290097 #> 1321  827     11       1        0 0.8333333 0.12909944 1.0000000 0.64703699 #> 1322 1276     10       1        0 0.7500000 0.16666667 1.0000000 0.54099636 #> 1323 2164      9       0        2 0.7500000 0.16666667 1.0000000 0.54099636 #> 1324 2255      7       0        2 0.7500000 0.16666667 1.0000000 0.54099636 #> 1325 2487      5       0        1 0.7500000 0.16666667 1.0000000 0.54099636 #> 1326 2505      4       0        2 0.7500000 0.16666667 1.0000000 0.54099636 #> 1327 2668      2       0        2 0.7500000 0.16666667 1.0000000 0.54099636 #> 1328  168     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 1329  583      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 1330 2164      8       0        2 0.8000000 0.15811388 1.0000000 0.58681770 #> 1331 2540      6       0        2 0.8000000 0.15811388 1.0000000 0.58681770 #> 1332 2648      4       0        2 0.8000000 0.15811388 1.0000000 0.58681770 #> 1333 2918      2       0        2 0.8000000 0.15811388 1.0000000 0.58681770 #> 1334 1853      8       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1335 1997      6       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1336 2189      4       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1337 2656      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1338  248      8       1        0 0.8750000 0.13363062 1.0000000 0.67338194 #> 1339  543      7       1        0 0.7500000 0.20412415 1.0000000 0.50270184 #> 1340  674      6       1        0 0.6250000 0.27386128 1.0000000 0.36540028 #> 1341  849      5       1        0 0.5000000 0.35355339 0.9998048 0.25004882 #> 1342 1212      4       1        0 0.3750000 0.45643546 0.9173812 0.15328960 #> 1343 1424      3       1        0 0.2500000 0.61237244 0.8302184 0.07528139 #> 1344 2456      2       0        2 0.2500000 0.61237244 0.8302184 0.07528139 #> 1345   86      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1346  138      3       1        0 0.5000000 0.50000000 1.0000000 0.18765893 #> 1347 1827      2       0        2 0.5000000 0.50000000 1.0000000 0.18765893 #> 1348  218     16       1        0 0.9375000 0.06454972 1.0000000 0.82608827 #> 1349  251     15       1        0 0.8750000 0.09449112 1.0000000 0.72707141 #> 1350  936     14       1        0 0.8125000 0.12009612 1.0000000 0.64209217 #> 1351 1388     13       1        0 0.7500000 0.14433757 0.9952258 0.56519837 #> 1352 1976     12       0        2 0.7500000 0.14433757 0.9952258 0.56519837 #> 1353 2074     10       1        0 0.6750000 0.17873009 0.9581623 0.47551963 #> 1354 2111      9       0        2 0.6750000 0.17873009 0.9581623 0.47551963 #> 1355 2203      7       0        2 0.6750000 0.17873009 0.9581623 0.47551963 #> 1356 2207      5       0        2 0.6750000 0.17873009 0.9581623 0.47551963 #> 1357 2542      3       1        0 0.4500000 0.44565807 1.0000000 0.18787443 #> 1358 2723      2       0        2 0.4500000 0.44565807 1.0000000 0.18787443 #> 1359  454      6       2        0 0.6666667 0.28867513 1.0000000 0.37860646 #> 1360 1875      4       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1361 2018      2       0        2 0.6666667 0.28867513 1.0000000 0.37860646 #> 1362  844      8       1        1 0.8750000 0.13363062 1.0000000 0.67338194 #> 1363  918      6       1        0 0.7291667 0.22625312 1.0000000 0.46799348 #> 1364 1193      5       1        0 0.5833333 0.31810451 1.0000000 0.31271286 #> 1365 1856      4       1        1 0.4375000 0.42956235 1.0000000 0.18850980 #> 1366 2732      2       0        2 0.4375000 0.42956235 1.0000000 0.18850980 #> 1367   45     12       1        1 0.9166667 0.08703883 1.0000000 0.77290097 #> 1368  355     10       1        1 0.8250000 0.13669992 1.0000000 0.63109504 #> 1369  449      8       1        0 0.7218750 0.19116488 1.0000000 0.49629758 #> 1370  642      7       1        0 0.6187500 0.24566957 1.0000000 0.38229701 #> 1371 1969      6       0        2 0.6187500 0.24566957 1.0000000 0.38229701 #> 1372 2023      4       0        2 0.6187500 0.24566957 1.0000000 0.38229701 #> 1373 2229      2       0        2 0.6187500 0.24566957 1.0000000 0.38229701 #> 1374  622     10       1        0 0.9000000 0.10540926 1.0000000 0.73201164 #> 1375  993      9       1        0 0.8000000 0.15811388 1.0000000 0.58681770 #> 1376 2318      8       1        1 0.7000000 0.20701967 1.0000000 0.46653323 #> 1377 2481      6       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 1378 2490      4       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 1379 2527      2       0        2 0.7000000 0.20701967 1.0000000 0.46653323 #> 1380  510      2       1        0 0.5000000 0.70710678 1.0000000 0.12504883 #> 1381  905      1       1        0 0.0000000        Inf        NA         NA #> 1382 2352      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1383 2279      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #> 1384 1743      4       1        0 0.7500000 0.28867513 1.0000000 0.42593227 #> 1385 1944      3       0        1 0.7500000 0.28867513 1.0000000 0.42593227 #> 1386 2052      2       1        1 0.3750000 0.76376262 1.0000000 0.08392964 #> 1387 2517      2       0        2 1.0000000 0.00000000 1.0000000 1.00000000 #>                         strata      rx sex age #> 1        rx=Obs, sex=0, age=22     Obs   0  22 #> 2        rx=Obs, sex=0, age=25     Obs   0  25 #> 3        rx=Obs, sex=0, age=25     Obs   0  25 #> 4        rx=Obs, sex=0, age=30     Obs   0  30 #> 5        rx=Obs, sex=0, age=30     Obs   0  30 #> 6        rx=Obs, sex=0, age=33     Obs   0  33 #> 7        rx=Obs, sex=0, age=36     Obs   0  36 #> 8        rx=Obs, sex=0, age=36     Obs   0  36 #> 9        rx=Obs, sex=0, age=37     Obs   0  37 #> 10       rx=Obs, sex=0, age=37     Obs   0  37 #> 11       rx=Obs, sex=0, age=39     Obs   0  39 #> 12       rx=Obs, sex=0, age=39     Obs   0  39 #> 13       rx=Obs, sex=0, age=39     Obs   0  39 #> 14       rx=Obs, sex=0, age=39     Obs   0  39 #> 15       rx=Obs, sex=0, age=39     Obs   0  39 #> 16       rx=Obs, sex=0, age=39     Obs   0  39 #> 17       rx=Obs, sex=0, age=39     Obs   0  39 #> 18       rx=Obs, sex=0, age=40     Obs   0  40 #> 19       rx=Obs, sex=0, age=40     Obs   0  40 #> 20       rx=Obs, sex=0, age=40     Obs   0  40 #> 21       rx=Obs, sex=0, age=40     Obs   0  40 #> 22       rx=Obs, sex=0, age=40     Obs   0  40 #> 23       rx=Obs, sex=0, age=40     Obs   0  40 #> 24       rx=Obs, sex=0, age=41     Obs   0  41 #> 25       rx=Obs, sex=0, age=41     Obs   0  41 #> 26       rx=Obs, sex=0, age=44     Obs   0  44 #> 27       rx=Obs, sex=0, age=44     Obs   0  44 #> 28       rx=Obs, sex=0, age=44     Obs   0  44 #> 29       rx=Obs, sex=0, age=44     Obs   0  44 #> 30       rx=Obs, sex=0, age=45     Obs   0  45 #> 31       rx=Obs, sex=0, age=46     Obs   0  46 #> 32       rx=Obs, sex=0, age=46     Obs   0  46 #> 33       rx=Obs, sex=0, age=46     Obs   0  46 #> 34       rx=Obs, sex=0, age=46     Obs   0  46 #> 35       rx=Obs, sex=0, age=46     Obs   0  46 #> 36       rx=Obs, sex=0, age=46     Obs   0  46 #> 37       rx=Obs, sex=0, age=46     Obs   0  46 #> 38       rx=Obs, sex=0, age=48     Obs   0  48 #> 39       rx=Obs, sex=0, age=48     Obs   0  48 #> 40       rx=Obs, sex=0, age=48     Obs   0  48 #> 41       rx=Obs, sex=0, age=48     Obs   0  48 #> 42       rx=Obs, sex=0, age=48     Obs   0  48 #> 43       rx=Obs, sex=0, age=48     Obs   0  48 #> 44       rx=Obs, sex=0, age=48     Obs   0  48 #> 45       rx=Obs, sex=0, age=48     Obs   0  48 #> 46       rx=Obs, sex=0, age=49     Obs   0  49 #> 47       rx=Obs, sex=0, age=49     Obs   0  49 #> 48       rx=Obs, sex=0, age=49     Obs   0  49 #> 49       rx=Obs, sex=0, age=49     Obs   0  49 #> 50       rx=Obs, sex=0, age=49     Obs   0  49 #> 51       rx=Obs, sex=0, age=49     Obs   0  49 #> 52       rx=Obs, sex=0, age=50     Obs   0  50 #> 53       rx=Obs, sex=0, age=50     Obs   0  50 #> 54       rx=Obs, sex=0, age=50     Obs   0  50 #> 55       rx=Obs, sex=0, age=50     Obs   0  50 #> 56       rx=Obs, sex=0, age=51     Obs   0  51 #> 57       rx=Obs, sex=0, age=51     Obs   0  51 #> 58       rx=Obs, sex=0, age=51     Obs   0  51 #> 59       rx=Obs, sex=0, age=51     Obs   0  51 #> 60       rx=Obs, sex=0, age=51     Obs   0  51 #> 61       rx=Obs, sex=0, age=51     Obs   0  51 #> 62       rx=Obs, sex=0, age=51     Obs   0  51 #> 63       rx=Obs, sex=0, age=52     Obs   0  52 #> 64       rx=Obs, sex=0, age=52     Obs   0  52 #> 65       rx=Obs, sex=0, age=52     Obs   0  52 #> 66       rx=Obs, sex=0, age=53     Obs   0  53 #> 67       rx=Obs, sex=0, age=53     Obs   0  53 #> 68       rx=Obs, sex=0, age=53     Obs   0  53 #> 69       rx=Obs, sex=0, age=53     Obs   0  53 #> 70       rx=Obs, sex=0, age=53     Obs   0  53 #> 71       rx=Obs, sex=0, age=54     Obs   0  54 #> 72       rx=Obs, sex=0, age=54     Obs   0  54 #> 73       rx=Obs, sex=0, age=54     Obs   0  54 #> 74       rx=Obs, sex=0, age=55     Obs   0  55 #> 75       rx=Obs, sex=0, age=55     Obs   0  55 #> 76       rx=Obs, sex=0, age=55     Obs   0  55 #> 77       rx=Obs, sex=0, age=55     Obs   0  55 #> 78       rx=Obs, sex=0, age=55     Obs   0  55 #> 79       rx=Obs, sex=0, age=55     Obs   0  55 #> 80       rx=Obs, sex=0, age=55     Obs   0  55 #> 81       rx=Obs, sex=0, age=55     Obs   0  55 #> 82       rx=Obs, sex=0, age=55     Obs   0  55 #> 83       rx=Obs, sex=0, age=55     Obs   0  55 #> 84       rx=Obs, sex=0, age=56     Obs   0  56 #> 85       rx=Obs, sex=0, age=56     Obs   0  56 #> 86       rx=Obs, sex=0, age=56     Obs   0  56 #> 87       rx=Obs, sex=0, age=56     Obs   0  56 #> 88       rx=Obs, sex=0, age=56     Obs   0  56 #> 89       rx=Obs, sex=0, age=56     Obs   0  56 #> 90       rx=Obs, sex=0, age=56     Obs   0  56 #> 91       rx=Obs, sex=0, age=56     Obs   0  56 #> 92       rx=Obs, sex=0, age=56     Obs   0  56 #> 93       rx=Obs, sex=0, age=56     Obs   0  56 #> 94       rx=Obs, sex=0, age=57     Obs   0  57 #> 95       rx=Obs, sex=0, age=57     Obs   0  57 #> 96       rx=Obs, sex=0, age=57     Obs   0  57 #> 97       rx=Obs, sex=0, age=57     Obs   0  57 #> 98       rx=Obs, sex=0, age=57     Obs   0  57 #> 99       rx=Obs, sex=0, age=57     Obs   0  57 #> 100      rx=Obs, sex=0, age=57     Obs   0  57 #> 101      rx=Obs, sex=0, age=57     Obs   0  57 #> 102      rx=Obs, sex=0, age=58     Obs   0  58 #> 103      rx=Obs, sex=0, age=58     Obs   0  58 #> 104      rx=Obs, sex=0, age=58     Obs   0  58 #> 105      rx=Obs, sex=0, age=59     Obs   0  59 #> 106      rx=Obs, sex=0, age=59     Obs   0  59 #> 107      rx=Obs, sex=0, age=59     Obs   0  59 #> 108      rx=Obs, sex=0, age=59     Obs   0  59 #> 109      rx=Obs, sex=0, age=59     Obs   0  59 #> 110      rx=Obs, sex=0, age=59     Obs   0  59 #> 111      rx=Obs, sex=0, age=59     Obs   0  59 #> 112      rx=Obs, sex=0, age=59     Obs   0  59 #> 113      rx=Obs, sex=0, age=59     Obs   0  59 #> 114      rx=Obs, sex=0, age=59     Obs   0  59 #> 115      rx=Obs, sex=0, age=59     Obs   0  59 #> 116      rx=Obs, sex=0, age=60     Obs   0  60 #> 117      rx=Obs, sex=0, age=60     Obs   0  60 #> 118      rx=Obs, sex=0, age=60     Obs   0  60 #> 119      rx=Obs, sex=0, age=60     Obs   0  60 #> 120      rx=Obs, sex=0, age=60     Obs   0  60 #> 121      rx=Obs, sex=0, age=60     Obs   0  60 #> 122      rx=Obs, sex=0, age=60     Obs   0  60 #> 123      rx=Obs, sex=0, age=61     Obs   0  61 #> 124      rx=Obs, sex=0, age=61     Obs   0  61 #> 125      rx=Obs, sex=0, age=61     Obs   0  61 #> 126      rx=Obs, sex=0, age=61     Obs   0  61 #> 127      rx=Obs, sex=0, age=61     Obs   0  61 #> 128      rx=Obs, sex=0, age=61     Obs   0  61 #> 129      rx=Obs, sex=0, age=62     Obs   0  62 #> 130      rx=Obs, sex=0, age=62     Obs   0  62 #> 131      rx=Obs, sex=0, age=62     Obs   0  62 #> 132      rx=Obs, sex=0, age=62     Obs   0  62 #> 133      rx=Obs, sex=0, age=63     Obs   0  63 #> 134      rx=Obs, sex=0, age=63     Obs   0  63 #> 135      rx=Obs, sex=0, age=63     Obs   0  63 #> 136      rx=Obs, sex=0, age=63     Obs   0  63 #> 137      rx=Obs, sex=0, age=63     Obs   0  63 #> 138      rx=Obs, sex=0, age=64     Obs   0  64 #> 139      rx=Obs, sex=0, age=64     Obs   0  64 #> 140      rx=Obs, sex=0, age=64     Obs   0  64 #> 141      rx=Obs, sex=0, age=64     Obs   0  64 #> 142      rx=Obs, sex=0, age=64     Obs   0  64 #> 143      rx=Obs, sex=0, age=64     Obs   0  64 #> 144      rx=Obs, sex=0, age=64     Obs   0  64 #> 145      rx=Obs, sex=0, age=64     Obs   0  64 #> 146      rx=Obs, sex=0, age=64     Obs   0  64 #> 147      rx=Obs, sex=0, age=64     Obs   0  64 #> 148      rx=Obs, sex=0, age=64     Obs   0  64 #> 149      rx=Obs, sex=0, age=64     Obs   0  64 #> 150      rx=Obs, sex=0, age=65     Obs   0  65 #> 151      rx=Obs, sex=0, age=65     Obs   0  65 #> 152      rx=Obs, sex=0, age=65     Obs   0  65 #> 153      rx=Obs, sex=0, age=65     Obs   0  65 #> 154      rx=Obs, sex=0, age=65     Obs   0  65 #> 155      rx=Obs, sex=0, age=65     Obs   0  65 #> 156      rx=Obs, sex=0, age=65     Obs   0  65 #> 157      rx=Obs, sex=0, age=65     Obs   0  65 #> 158      rx=Obs, sex=0, age=65     Obs   0  65 #> 159      rx=Obs, sex=0, age=66     Obs   0  66 #> 160      rx=Obs, sex=0, age=66     Obs   0  66 #> 161      rx=Obs, sex=0, age=66     Obs   0  66 #> 162      rx=Obs, sex=0, age=66     Obs   0  66 #> 163      rx=Obs, sex=0, age=67     Obs   0  67 #> 164      rx=Obs, sex=0, age=67     Obs   0  67 #> 165      rx=Obs, sex=0, age=67     Obs   0  67 #> 166      rx=Obs, sex=0, age=67     Obs   0  67 #> 167      rx=Obs, sex=0, age=67     Obs   0  67 #> 168      rx=Obs, sex=0, age=68     Obs   0  68 #> 169      rx=Obs, sex=0, age=68     Obs   0  68 #> 170      rx=Obs, sex=0, age=68     Obs   0  68 #> 171      rx=Obs, sex=0, age=68     Obs   0  68 #> 172      rx=Obs, sex=0, age=68     Obs   0  68 #> 173      rx=Obs, sex=0, age=68     Obs   0  68 #> 174      rx=Obs, sex=0, age=69     Obs   0  69 #> 175      rx=Obs, sex=0, age=69     Obs   0  69 #> 176      rx=Obs, sex=0, age=69     Obs   0  69 #> 177      rx=Obs, sex=0, age=69     Obs   0  69 #> 178      rx=Obs, sex=0, age=69     Obs   0  69 #> 179      rx=Obs, sex=0, age=69     Obs   0  69 #> 180      rx=Obs, sex=0, age=69     Obs   0  69 #> 181      rx=Obs, sex=0, age=69     Obs   0  69 #> 182      rx=Obs, sex=0, age=70     Obs   0  70 #> 183      rx=Obs, sex=0, age=70     Obs   0  70 #> 184      rx=Obs, sex=0, age=70     Obs   0  70 #> 185      rx=Obs, sex=0, age=70     Obs   0  70 #> 186      rx=Obs, sex=0, age=70     Obs   0  70 #> 187      rx=Obs, sex=0, age=70     Obs   0  70 #> 188      rx=Obs, sex=0, age=70     Obs   0  70 #> 189      rx=Obs, sex=0, age=70     Obs   0  70 #> 190      rx=Obs, sex=0, age=70     Obs   0  70 #> 191      rx=Obs, sex=0, age=70     Obs   0  70 #> 192      rx=Obs, sex=0, age=70     Obs   0  70 #> 193      rx=Obs, sex=0, age=70     Obs   0  70 #> 194      rx=Obs, sex=0, age=70     Obs   0  70 #> 195      rx=Obs, sex=0, age=71     Obs   0  71 #> 196      rx=Obs, sex=0, age=71     Obs   0  71 #> 197      rx=Obs, sex=0, age=71     Obs   0  71 #> 198      rx=Obs, sex=0, age=71     Obs   0  71 #> 199      rx=Obs, sex=0, age=71     Obs   0  71 #> 200      rx=Obs, sex=0, age=71     Obs   0  71 #> 201      rx=Obs, sex=0, age=71     Obs   0  71 #> 202      rx=Obs, sex=0, age=71     Obs   0  71 #> 203      rx=Obs, sex=0, age=72     Obs   0  72 #> 204      rx=Obs, sex=0, age=72     Obs   0  72 #> 205      rx=Obs, sex=0, age=72     Obs   0  72 #> 206      rx=Obs, sex=0, age=74     Obs   0  74 #> 207      rx=Obs, sex=0, age=74     Obs   0  74 #> 208      rx=Obs, sex=0, age=74     Obs   0  74 #> 209      rx=Obs, sex=0, age=74     Obs   0  74 #> 210      rx=Obs, sex=0, age=75     Obs   0  75 #> 211      rx=Obs, sex=0, age=75     Obs   0  75 #> 212      rx=Obs, sex=0, age=75     Obs   0  75 #> 213      rx=Obs, sex=0, age=75     Obs   0  75 #> 214      rx=Obs, sex=0, age=75     Obs   0  75 #> 215      rx=Obs, sex=0, age=75     Obs   0  75 #> 216      rx=Obs, sex=0, age=76     Obs   0  76 #> 217      rx=Obs, sex=0, age=76     Obs   0  76 #> 218      rx=Obs, sex=0, age=76     Obs   0  76 #> 219      rx=Obs, sex=0, age=76     Obs   0  76 #> 220      rx=Obs, sex=0, age=77     Obs   0  77 #> 221      rx=Obs, sex=0, age=78     Obs   0  78 #> 222      rx=Obs, sex=0, age=79     Obs   0  79 #> 223      rx=Obs, sex=0, age=81     Obs   0  81 #> 224      rx=Obs, sex=0, age=81     Obs   0  81 #> 225      rx=Obs, sex=0, age=81     Obs   0  81 #> 226      rx=Obs, sex=0, age=81     Obs   0  81 #> 227      rx=Obs, sex=0, age=81     Obs   0  81 #> 228      rx=Obs, sex=0, age=85     Obs   0  85 #> 229      rx=Obs, sex=0, age=85     Obs   0  85 #> 230      rx=Obs, sex=1, age=18     Obs   1  18 #> 231      rx=Obs, sex=1, age=18     Obs   1  18 #> 232      rx=Obs, sex=1, age=27     Obs   1  27 #> 233      rx=Obs, sex=1, age=27     Obs   1  27 #> 234      rx=Obs, sex=1, age=30     Obs   1  30 #> 235      rx=Obs, sex=1, age=31     Obs   1  31 #> 236      rx=Obs, sex=1, age=31     Obs   1  31 #> 237      rx=Obs, sex=1, age=32     Obs   1  32 #> 238      rx=Obs, sex=1, age=33     Obs   1  33 #> 239      rx=Obs, sex=1, age=34     Obs   1  34 #> 240      rx=Obs, sex=1, age=34     Obs   1  34 #> 241      rx=Obs, sex=1, age=36     Obs   1  36 #> 242      rx=Obs, sex=1, age=36     Obs   1  36 #> 243      rx=Obs, sex=1, age=36     Obs   1  36 #> 244      rx=Obs, sex=1, age=38     Obs   1  38 #> 245      rx=Obs, sex=1, age=38     Obs   1  38 #> 246      rx=Obs, sex=1, age=38     Obs   1  38 #> 247      rx=Obs, sex=1, age=39     Obs   1  39 #> 248      rx=Obs, sex=1, age=39     Obs   1  39 #> 249      rx=Obs, sex=1, age=39     Obs   1  39 #> 250      rx=Obs, sex=1, age=41     Obs   1  41 #> 251      rx=Obs, sex=1, age=41     Obs   1  41 #> 252      rx=Obs, sex=1, age=42     Obs   1  42 #> 253      rx=Obs, sex=1, age=43     Obs   1  43 #> 254      rx=Obs, sex=1, age=43     Obs   1  43 #> 255      rx=Obs, sex=1, age=43     Obs   1  43 #> 256      rx=Obs, sex=1, age=43     Obs   1  43 #> 257      rx=Obs, sex=1, age=44     Obs   1  44 #> 258      rx=Obs, sex=1, age=44     Obs   1  44 #> 259      rx=Obs, sex=1, age=44     Obs   1  44 #> 260      rx=Obs, sex=1, age=44     Obs   1  44 #> 261      rx=Obs, sex=1, age=45     Obs   1  45 #> 262      rx=Obs, sex=1, age=46     Obs   1  46 #> 263      rx=Obs, sex=1, age=46     Obs   1  46 #> 264      rx=Obs, sex=1, age=46     Obs   1  46 #> 265      rx=Obs, sex=1, age=46     Obs   1  46 #> 266      rx=Obs, sex=1, age=46     Obs   1  46 #> 267      rx=Obs, sex=1, age=46     Obs   1  46 #> 268      rx=Obs, sex=1, age=47     Obs   1  47 #> 269      rx=Obs, sex=1, age=47     Obs   1  47 #> 270      rx=Obs, sex=1, age=47     Obs   1  47 #> 271      rx=Obs, sex=1, age=47     Obs   1  47 #> 272      rx=Obs, sex=1, age=48     Obs   1  48 #> 273      rx=Obs, sex=1, age=49     Obs   1  49 #> 274      rx=Obs, sex=1, age=49     Obs   1  49 #> 275      rx=Obs, sex=1, age=50     Obs   1  50 #> 276      rx=Obs, sex=1, age=50     Obs   1  50 #> 277      rx=Obs, sex=1, age=51     Obs   1  51 #> 278      rx=Obs, sex=1, age=52     Obs   1  52 #> 279      rx=Obs, sex=1, age=52     Obs   1  52 #> 280      rx=Obs, sex=1, age=52     Obs   1  52 #> 281      rx=Obs, sex=1, age=52     Obs   1  52 #> 282      rx=Obs, sex=1, age=52     Obs   1  52 #> 283      rx=Obs, sex=1, age=52     Obs   1  52 #> 284      rx=Obs, sex=1, age=52     Obs   1  52 #> 285      rx=Obs, sex=1, age=52     Obs   1  52 #> 286      rx=Obs, sex=1, age=53     Obs   1  53 #> 287      rx=Obs, sex=1, age=53     Obs   1  53 #> 288      rx=Obs, sex=1, age=53     Obs   1  53 #> 289      rx=Obs, sex=1, age=53     Obs   1  53 #> 290      rx=Obs, sex=1, age=53     Obs   1  53 #> 291      rx=Obs, sex=1, age=53     Obs   1  53 #> 292      rx=Obs, sex=1, age=53     Obs   1  53 #> 293      rx=Obs, sex=1, age=53     Obs   1  53 #> 294      rx=Obs, sex=1, age=54     Obs   1  54 #> 295      rx=Obs, sex=1, age=55     Obs   1  55 #> 296      rx=Obs, sex=1, age=55     Obs   1  55 #> 297      rx=Obs, sex=1, age=55     Obs   1  55 #> 298      rx=Obs, sex=1, age=55     Obs   1  55 #> 299      rx=Obs, sex=1, age=55     Obs   1  55 #> 300      rx=Obs, sex=1, age=55     Obs   1  55 #> 301      rx=Obs, sex=1, age=56     Obs   1  56 #> 302      rx=Obs, sex=1, age=56     Obs   1  56 #> 303      rx=Obs, sex=1, age=56     Obs   1  56 #> 304      rx=Obs, sex=1, age=56     Obs   1  56 #> 305      rx=Obs, sex=1, age=56     Obs   1  56 #> 306      rx=Obs, sex=1, age=56     Obs   1  56 #> 307      rx=Obs, sex=1, age=56     Obs   1  56 #> 308      rx=Obs, sex=1, age=56     Obs   1  56 #> 309      rx=Obs, sex=1, age=56     Obs   1  56 #> 310      rx=Obs, sex=1, age=56     Obs   1  56 #> 311      rx=Obs, sex=1, age=56     Obs   1  56 #> 312      rx=Obs, sex=1, age=57     Obs   1  57 #> 313      rx=Obs, sex=1, age=57     Obs   1  57 #> 314      rx=Obs, sex=1, age=57     Obs   1  57 #> 315      rx=Obs, sex=1, age=57     Obs   1  57 #> 316      rx=Obs, sex=1, age=57     Obs   1  57 #> 317      rx=Obs, sex=1, age=57     Obs   1  57 #> 318      rx=Obs, sex=1, age=57     Obs   1  57 #> 319      rx=Obs, sex=1, age=57     Obs   1  57 #> 320      rx=Obs, sex=1, age=57     Obs   1  57 #> 321      rx=Obs, sex=1, age=57     Obs   1  57 #> 322      rx=Obs, sex=1, age=57     Obs   1  57 #> 323      rx=Obs, sex=1, age=57     Obs   1  57 #> 324      rx=Obs, sex=1, age=57     Obs   1  57 #> 325      rx=Obs, sex=1, age=57     Obs   1  57 #> 326      rx=Obs, sex=1, age=58     Obs   1  58 #> 327      rx=Obs, sex=1, age=58     Obs   1  58 #> 328      rx=Obs, sex=1, age=58     Obs   1  58 #> 329      rx=Obs, sex=1, age=58     Obs   1  58 #> 330      rx=Obs, sex=1, age=58     Obs   1  58 #> 331      rx=Obs, sex=1, age=58     Obs   1  58 #> 332      rx=Obs, sex=1, age=58     Obs   1  58 #> 333      rx=Obs, sex=1, age=59     Obs   1  59 #> 334      rx=Obs, sex=1, age=59     Obs   1  59 #> 335      rx=Obs, sex=1, age=59     Obs   1  59 #> 336      rx=Obs, sex=1, age=59     Obs   1  59 #> 337      rx=Obs, sex=1, age=59     Obs   1  59 #> 338      rx=Obs, sex=1, age=59     Obs   1  59 #> 339      rx=Obs, sex=1, age=59     Obs   1  59 #> 340      rx=Obs, sex=1, age=59     Obs   1  59 #> 341      rx=Obs, sex=1, age=59     Obs   1  59 #> 342      rx=Obs, sex=1, age=59     Obs   1  59 #> 343      rx=Obs, sex=1, age=59     Obs   1  59 #> 344      rx=Obs, sex=1, age=59     Obs   1  59 #> 345      rx=Obs, sex=1, age=59     Obs   1  59 #> 346      rx=Obs, sex=1, age=60     Obs   1  60 #> 347      rx=Obs, sex=1, age=60     Obs   1  60 #> 348      rx=Obs, sex=1, age=60     Obs   1  60 #> 349      rx=Obs, sex=1, age=60     Obs   1  60 #> 350      rx=Obs, sex=1, age=60     Obs   1  60 #> 351      rx=Obs, sex=1, age=60     Obs   1  60 #> 352      rx=Obs, sex=1, age=60     Obs   1  60 #> 353      rx=Obs, sex=1, age=61     Obs   1  61 #> 354      rx=Obs, sex=1, age=61     Obs   1  61 #> 355      rx=Obs, sex=1, age=61     Obs   1  61 #> 356      rx=Obs, sex=1, age=61     Obs   1  61 #> 357      rx=Obs, sex=1, age=61     Obs   1  61 #> 358      rx=Obs, sex=1, age=61     Obs   1  61 #> 359      rx=Obs, sex=1, age=61     Obs   1  61 #> 360      rx=Obs, sex=1, age=61     Obs   1  61 #> 361      rx=Obs, sex=1, age=61     Obs   1  61 #> 362      rx=Obs, sex=1, age=61     Obs   1  61 #> 363      rx=Obs, sex=1, age=61     Obs   1  61 #> 364      rx=Obs, sex=1, age=62     Obs   1  62 #> 365      rx=Obs, sex=1, age=62     Obs   1  62 #> 366      rx=Obs, sex=1, age=62     Obs   1  62 #> 367      rx=Obs, sex=1, age=62     Obs   1  62 #> 368      rx=Obs, sex=1, age=62     Obs   1  62 #> 369      rx=Obs, sex=1, age=62     Obs   1  62 #> 370      rx=Obs, sex=1, age=62     Obs   1  62 #> 371      rx=Obs, sex=1, age=62     Obs   1  62 #> 372      rx=Obs, sex=1, age=62     Obs   1  62 #> 373      rx=Obs, sex=1, age=63     Obs   1  63 #> 374      rx=Obs, sex=1, age=63     Obs   1  63 #> 375      rx=Obs, sex=1, age=63     Obs   1  63 #> 376      rx=Obs, sex=1, age=63     Obs   1  63 #> 377      rx=Obs, sex=1, age=64     Obs   1  64 #> 378      rx=Obs, sex=1, age=64     Obs   1  64 #> 379      rx=Obs, sex=1, age=64     Obs   1  64 #> 380      rx=Obs, sex=1, age=64     Obs   1  64 #> 381      rx=Obs, sex=1, age=64     Obs   1  64 #> 382      rx=Obs, sex=1, age=64     Obs   1  64 #> 383      rx=Obs, sex=1, age=64     Obs   1  64 #> 384      rx=Obs, sex=1, age=64     Obs   1  64 #> 385      rx=Obs, sex=1, age=64     Obs   1  64 #> 386      rx=Obs, sex=1, age=65     Obs   1  65 #> 387      rx=Obs, sex=1, age=65     Obs   1  65 #> 388      rx=Obs, sex=1, age=65     Obs   1  65 #> 389      rx=Obs, sex=1, age=65     Obs   1  65 #> 390      rx=Obs, sex=1, age=65     Obs   1  65 #> 391      rx=Obs, sex=1, age=66     Obs   1  66 #> 392      rx=Obs, sex=1, age=66     Obs   1  66 #> 393      rx=Obs, sex=1, age=66     Obs   1  66 #> 394      rx=Obs, sex=1, age=66     Obs   1  66 #> 395      rx=Obs, sex=1, age=66     Obs   1  66 #> 396      rx=Obs, sex=1, age=66     Obs   1  66 #> 397      rx=Obs, sex=1, age=66     Obs   1  66 #> 398      rx=Obs, sex=1, age=66     Obs   1  66 #> 399      rx=Obs, sex=1, age=66     Obs   1  66 #> 400      rx=Obs, sex=1, age=66     Obs   1  66 #> 401      rx=Obs, sex=1, age=66     Obs   1  66 #> 402      rx=Obs, sex=1, age=66     Obs   1  66 #> 403      rx=Obs, sex=1, age=66     Obs   1  66 #> 404      rx=Obs, sex=1, age=66     Obs   1  66 #> 405      rx=Obs, sex=1, age=67     Obs   1  67 #> 406      rx=Obs, sex=1, age=67     Obs   1  67 #> 407      rx=Obs, sex=1, age=67     Obs   1  67 #> 408      rx=Obs, sex=1, age=67     Obs   1  67 #> 409      rx=Obs, sex=1, age=67     Obs   1  67 #> 410      rx=Obs, sex=1, age=67     Obs   1  67 #> 411      rx=Obs, sex=1, age=67     Obs   1  67 #> 412      rx=Obs, sex=1, age=67     Obs   1  67 #> 413      rx=Obs, sex=1, age=67     Obs   1  67 #> 414      rx=Obs, sex=1, age=67     Obs   1  67 #> 415      rx=Obs, sex=1, age=67     Obs   1  67 #> 416      rx=Obs, sex=1, age=67     Obs   1  67 #> 417      rx=Obs, sex=1, age=67     Obs   1  67 #> 418      rx=Obs, sex=1, age=68     Obs   1  68 #> 419      rx=Obs, sex=1, age=68     Obs   1  68 #> 420      rx=Obs, sex=1, age=68     Obs   1  68 #> 421      rx=Obs, sex=1, age=68     Obs   1  68 #> 422      rx=Obs, sex=1, age=68     Obs   1  68 #> 423      rx=Obs, sex=1, age=68     Obs   1  68 #> 424      rx=Obs, sex=1, age=68     Obs   1  68 #> 425      rx=Obs, sex=1, age=68     Obs   1  68 #> 426      rx=Obs, sex=1, age=68     Obs   1  68 #> 427      rx=Obs, sex=1, age=68     Obs   1  68 #> 428      rx=Obs, sex=1, age=68     Obs   1  68 #> 429      rx=Obs, sex=1, age=68     Obs   1  68 #> 430      rx=Obs, sex=1, age=68     Obs   1  68 #> 431      rx=Obs, sex=1, age=68     Obs   1  68 #> 432      rx=Obs, sex=1, age=68     Obs   1  68 #> 433      rx=Obs, sex=1, age=68     Obs   1  68 #> 434      rx=Obs, sex=1, age=68     Obs   1  68 #> 435      rx=Obs, sex=1, age=69     Obs   1  69 #> 436      rx=Obs, sex=1, age=69     Obs   1  69 #> 437      rx=Obs, sex=1, age=70     Obs   1  70 #> 438      rx=Obs, sex=1, age=70     Obs   1  70 #> 439      rx=Obs, sex=1, age=70     Obs   1  70 #> 440      rx=Obs, sex=1, age=70     Obs   1  70 #> 441      rx=Obs, sex=1, age=70     Obs   1  70 #> 442      rx=Obs, sex=1, age=70     Obs   1  70 #> 443      rx=Obs, sex=1, age=70     Obs   1  70 #> 444      rx=Obs, sex=1, age=70     Obs   1  70 #> 445      rx=Obs, sex=1, age=71     Obs   1  71 #> 446      rx=Obs, sex=1, age=71     Obs   1  71 #> 447      rx=Obs, sex=1, age=71     Obs   1  71 #> 448      rx=Obs, sex=1, age=71     Obs   1  71 #> 449      rx=Obs, sex=1, age=71     Obs   1  71 #> 450      rx=Obs, sex=1, age=71     Obs   1  71 #> 451      rx=Obs, sex=1, age=72     Obs   1  72 #> 452      rx=Obs, sex=1, age=72     Obs   1  72 #> 453      rx=Obs, sex=1, age=72     Obs   1  72 #> 454      rx=Obs, sex=1, age=72     Obs   1  72 #> 455      rx=Obs, sex=1, age=73     Obs   1  73 #> 456      rx=Obs, sex=1, age=73     Obs   1  73 #> 457      rx=Obs, sex=1, age=73     Obs   1  73 #> 458      rx=Obs, sex=1, age=73     Obs   1  73 #> 459      rx=Obs, sex=1, age=73     Obs   1  73 #> 460      rx=Obs, sex=1, age=73     Obs   1  73 #> 461      rx=Obs, sex=1, age=74     Obs   1  74 #> 462      rx=Obs, sex=1, age=74     Obs   1  74 #> 463      rx=Obs, sex=1, age=74     Obs   1  74 #> 464      rx=Obs, sex=1, age=74     Obs   1  74 #> 465      rx=Obs, sex=1, age=74     Obs   1  74 #> 466      rx=Obs, sex=1, age=74     Obs   1  74 #> 467      rx=Obs, sex=1, age=74     Obs   1  74 #> 468      rx=Obs, sex=1, age=74     Obs   1  74 #> 469      rx=Obs, sex=1, age=75     Obs   1  75 #> 470      rx=Obs, sex=1, age=75     Obs   1  75 #> 471      rx=Obs, sex=1, age=76     Obs   1  76 #> 472      rx=Obs, sex=1, age=76     Obs   1  76 #> 473      rx=Obs, sex=1, age=76     Obs   1  76 #> 474      rx=Obs, sex=1, age=76     Obs   1  76 #> 475      rx=Obs, sex=1, age=76     Obs   1  76 #> 476      rx=Obs, sex=1, age=76     Obs   1  76 #> 477      rx=Obs, sex=1, age=76     Obs   1  76 #> 478      rx=Obs, sex=1, age=76     Obs   1  76 #> 479      rx=Obs, sex=1, age=76     Obs   1  76 #> 480      rx=Obs, sex=1, age=76     Obs   1  76 #> 481      rx=Obs, sex=1, age=76     Obs   1  76 #> 482      rx=Obs, sex=1, age=77     Obs   1  77 #> 483      rx=Obs, sex=1, age=77     Obs   1  77 #> 484      rx=Obs, sex=1, age=77     Obs   1  77 #> 485      rx=Obs, sex=1, age=77     Obs   1  77 #> 486      rx=Obs, sex=1, age=79     Obs   1  79 #> 487      rx=Obs, sex=1, age=79     Obs   1  79 #> 488      rx=Obs, sex=1, age=80     Obs   1  80 #> 489      rx=Obs, sex=1, age=82     Obs   1  82 #> 490      rx=Lev, sex=0, age=27     Lev   0  27 #> 491      rx=Lev, sex=0, age=27     Lev   0  27 #> 492      rx=Lev, sex=0, age=33     Lev   0  33 #> 493      rx=Lev, sex=0, age=33     Lev   0  33 #> 494      rx=Lev, sex=0, age=33     Lev   0  33 #> 495      rx=Lev, sex=0, age=33     Lev   0  33 #> 496      rx=Lev, sex=0, age=34     Lev   0  34 #> 497      rx=Lev, sex=0, age=34     Lev   0  34 #> 498      rx=Lev, sex=0, age=36     Lev   0  36 #> 499      rx=Lev, sex=0, age=36     Lev   0  36 #> 500      rx=Lev, sex=0, age=37     Lev   0  37 #> 501      rx=Lev, sex=0, age=38     Lev   0  38 #> 502      rx=Lev, sex=0, age=38     Lev   0  38 #> 503      rx=Lev, sex=0, age=38     Lev   0  38 #> 504      rx=Lev, sex=0, age=38     Lev   0  38 #> 505      rx=Lev, sex=0, age=39     Lev   0  39 #> 506      rx=Lev, sex=0, age=39     Lev   0  39 #> 507      rx=Lev, sex=0, age=39     Lev   0  39 #> 508      rx=Lev, sex=0, age=41     Lev   0  41 #> 509      rx=Lev, sex=0, age=41     Lev   0  41 #> 510      rx=Lev, sex=0, age=41     Lev   0  41 #> 511      rx=Lev, sex=0, age=41     Lev   0  41 #> 512      rx=Lev, sex=0, age=42     Lev   0  42 #> 513      rx=Lev, sex=0, age=42     Lev   0  42 #> 514      rx=Lev, sex=0, age=43     Lev   0  43 #> 515      rx=Lev, sex=0, age=43     Lev   0  43 #> 516      rx=Lev, sex=0, age=43     Lev   0  43 #> 517      rx=Lev, sex=0, age=43     Lev   0  43 #> 518      rx=Lev, sex=0, age=44     Lev   0  44 #> 519      rx=Lev, sex=0, age=44     Lev   0  44 #> 520      rx=Lev, sex=0, age=45     Lev   0  45 #> 521      rx=Lev, sex=0, age=45     Lev   0  45 #> 522      rx=Lev, sex=0, age=45     Lev   0  45 #> 523      rx=Lev, sex=0, age=45     Lev   0  45 #> 524      rx=Lev, sex=0, age=45     Lev   0  45 #> 525      rx=Lev, sex=0, age=46     Lev   0  46 #> 526      rx=Lev, sex=0, age=46     Lev   0  46 #> 527      rx=Lev, sex=0, age=46     Lev   0  46 #> 528      rx=Lev, sex=0, age=47     Lev   0  47 #> 529      rx=Lev, sex=0, age=47     Lev   0  47 #> 530      rx=Lev, sex=0, age=47     Lev   0  47 #> 531      rx=Lev, sex=0, age=49     Lev   0  49 #> 532      rx=Lev, sex=0, age=50     Lev   0  50 #> 533      rx=Lev, sex=0, age=50     Lev   0  50 #> 534      rx=Lev, sex=0, age=50     Lev   0  50 #> 535      rx=Lev, sex=0, age=50     Lev   0  50 #> 536      rx=Lev, sex=0, age=51     Lev   0  51 #> 537      rx=Lev, sex=0, age=51     Lev   0  51 #> 538      rx=Lev, sex=0, age=51     Lev   0  51 #> 539      rx=Lev, sex=0, age=52     Lev   0  52 #> 540      rx=Lev, sex=0, age=52     Lev   0  52 #> 541      rx=Lev, sex=0, age=52     Lev   0  52 #> 542      rx=Lev, sex=0, age=52     Lev   0  52 #> 543      rx=Lev, sex=0, age=52     Lev   0  52 #> 544      rx=Lev, sex=0, age=53     Lev   0  53 #> 545      rx=Lev, sex=0, age=53     Lev   0  53 #> 546      rx=Lev, sex=0, age=53     Lev   0  53 #> 547      rx=Lev, sex=0, age=53     Lev   0  53 #> 548      rx=Lev, sex=0, age=53     Lev   0  53 #> 549      rx=Lev, sex=0, age=53     Lev   0  53 #> 550      rx=Lev, sex=0, age=53     Lev   0  53 #> 551      rx=Lev, sex=0, age=54     Lev   0  54 #> 552      rx=Lev, sex=0, age=54     Lev   0  54 #> 553      rx=Lev, sex=0, age=54     Lev   0  54 #> 554      rx=Lev, sex=0, age=54     Lev   0  54 #> 555      rx=Lev, sex=0, age=54     Lev   0  54 #> 556      rx=Lev, sex=0, age=55     Lev   0  55 #> 557      rx=Lev, sex=0, age=55     Lev   0  55 #> 558      rx=Lev, sex=0, age=55     Lev   0  55 #> 559      rx=Lev, sex=0, age=56     Lev   0  56 #> 560      rx=Lev, sex=0, age=56     Lev   0  56 #> 561      rx=Lev, sex=0, age=56     Lev   0  56 #> 562      rx=Lev, sex=0, age=56     Lev   0  56 #> 563      rx=Lev, sex=0, age=56     Lev   0  56 #> 564      rx=Lev, sex=0, age=57     Lev   0  57 #> 565      rx=Lev, sex=0, age=57     Lev   0  57 #> 566      rx=Lev, sex=0, age=57     Lev   0  57 #> 567      rx=Lev, sex=0, age=57     Lev   0  57 #> 568      rx=Lev, sex=0, age=57     Lev   0  57 #> 569      rx=Lev, sex=0, age=58     Lev   0  58 #> 570      rx=Lev, sex=0, age=58     Lev   0  58 #> 571      rx=Lev, sex=0, age=58     Lev   0  58 #> 572      rx=Lev, sex=0, age=58     Lev   0  58 #> 573      rx=Lev, sex=0, age=58     Lev   0  58 #> 574      rx=Lev, sex=0, age=58     Lev   0  58 #> 575      rx=Lev, sex=0, age=59     Lev   0  59 #> 576      rx=Lev, sex=0, age=59     Lev   0  59 #> 577      rx=Lev, sex=0, age=59     Lev   0  59 #> 578      rx=Lev, sex=0, age=59     Lev   0  59 #> 579      rx=Lev, sex=0, age=59     Lev   0  59 #> 580      rx=Lev, sex=0, age=59     Lev   0  59 #> 581      rx=Lev, sex=0, age=60     Lev   0  60 #> 582      rx=Lev, sex=0, age=60     Lev   0  60 #> 583      rx=Lev, sex=0, age=60     Lev   0  60 #> 584      rx=Lev, sex=0, age=60     Lev   0  60 #> 585      rx=Lev, sex=0, age=60     Lev   0  60 #> 586      rx=Lev, sex=0, age=60     Lev   0  60 #> 587      rx=Lev, sex=0, age=60     Lev   0  60 #> 588      rx=Lev, sex=0, age=60     Lev   0  60 #> 589      rx=Lev, sex=0, age=60     Lev   0  60 #> 590      rx=Lev, sex=0, age=60     Lev   0  60 #> 591      rx=Lev, sex=0, age=61     Lev   0  61 #> 592      rx=Lev, sex=0, age=61     Lev   0  61 #> 593      rx=Lev, sex=0, age=61     Lev   0  61 #> 594      rx=Lev, sex=0, age=61     Lev   0  61 #> 595      rx=Lev, sex=0, age=61     Lev   0  61 #> 596      rx=Lev, sex=0, age=61     Lev   0  61 #> 597      rx=Lev, sex=0, age=61     Lev   0  61 #> 598      rx=Lev, sex=0, age=61     Lev   0  61 #> 599      rx=Lev, sex=0, age=61     Lev   0  61 #> 600      rx=Lev, sex=0, age=62     Lev   0  62 #> 601      rx=Lev, sex=0, age=62     Lev   0  62 #> 602      rx=Lev, sex=0, age=62     Lev   0  62 #> 603      rx=Lev, sex=0, age=62     Lev   0  62 #> 604      rx=Lev, sex=0, age=62     Lev   0  62 #> 605      rx=Lev, sex=0, age=63     Lev   0  63 #> 606      rx=Lev, sex=0, age=63     Lev   0  63 #> 607      rx=Lev, sex=0, age=63     Lev   0  63 #> 608      rx=Lev, sex=0, age=64     Lev   0  64 #> 609      rx=Lev, sex=0, age=64     Lev   0  64 #> 610      rx=Lev, sex=0, age=64     Lev   0  64 #> 611      rx=Lev, sex=0, age=64     Lev   0  64 #> 612      rx=Lev, sex=0, age=64     Lev   0  64 #> 613      rx=Lev, sex=0, age=64     Lev   0  64 #> 614      rx=Lev, sex=0, age=64     Lev   0  64 #> 615      rx=Lev, sex=0, age=65     Lev   0  65 #> 616      rx=Lev, sex=0, age=65     Lev   0  65 #> 617      rx=Lev, sex=0, age=65     Lev   0  65 #> 618      rx=Lev, sex=0, age=65     Lev   0  65 #> 619      rx=Lev, sex=0, age=65     Lev   0  65 #> 620      rx=Lev, sex=0, age=65     Lev   0  65 #> 621      rx=Lev, sex=0, age=65     Lev   0  65 #> 622      rx=Lev, sex=0, age=66     Lev   0  66 #> 623      rx=Lev, sex=0, age=66     Lev   0  66 #> 624      rx=Lev, sex=0, age=66     Lev   0  66 #> 625      rx=Lev, sex=0, age=66     Lev   0  66 #> 626      rx=Lev, sex=0, age=66     Lev   0  66 #> 627      rx=Lev, sex=0, age=66     Lev   0  66 #> 628      rx=Lev, sex=0, age=66     Lev   0  66 #> 629      rx=Lev, sex=0, age=67     Lev   0  67 #> 630      rx=Lev, sex=0, age=67     Lev   0  67 #> 631      rx=Lev, sex=0, age=67     Lev   0  67 #> 632      rx=Lev, sex=0, age=68     Lev   0  68 #> 633      rx=Lev, sex=0, age=68     Lev   0  68 #> 634      rx=Lev, sex=0, age=68     Lev   0  68 #> 635      rx=Lev, sex=0, age=68     Lev   0  68 #> 636      rx=Lev, sex=0, age=68     Lev   0  68 #> 637      rx=Lev, sex=0, age=68     Lev   0  68 #> 638      rx=Lev, sex=0, age=68     Lev   0  68 #> 639      rx=Lev, sex=0, age=68     Lev   0  68 #> 640      rx=Lev, sex=0, age=68     Lev   0  68 #> 641      rx=Lev, sex=0, age=68     Lev   0  68 #> 642      rx=Lev, sex=0, age=68     Lev   0  68 #> 643      rx=Lev, sex=0, age=68     Lev   0  68 #> 644      rx=Lev, sex=0, age=68     Lev   0  68 #> 645      rx=Lev, sex=0, age=68     Lev   0  68 #> 646      rx=Lev, sex=0, age=68     Lev   0  68 #> 647      rx=Lev, sex=0, age=68     Lev   0  68 #> 648      rx=Lev, sex=0, age=69     Lev   0  69 #> 649      rx=Lev, sex=0, age=69     Lev   0  69 #> 650      rx=Lev, sex=0, age=69     Lev   0  69 #> 651      rx=Lev, sex=0, age=69     Lev   0  69 #> 652      rx=Lev, sex=0, age=69     Lev   0  69 #> 653      rx=Lev, sex=0, age=69     Lev   0  69 #> 654      rx=Lev, sex=0, age=69     Lev   0  69 #> 655      rx=Lev, sex=0, age=69     Lev   0  69 #> 656      rx=Lev, sex=0, age=70     Lev   0  70 #> 657      rx=Lev, sex=0, age=70     Lev   0  70 #> 658      rx=Lev, sex=0, age=70     Lev   0  70 #> 659      rx=Lev, sex=0, age=70     Lev   0  70 #> 660      rx=Lev, sex=0, age=70     Lev   0  70 #> 661      rx=Lev, sex=0, age=70     Lev   0  70 #> 662      rx=Lev, sex=0, age=70     Lev   0  70 #> 663      rx=Lev, sex=0, age=70     Lev   0  70 #> 664      rx=Lev, sex=0, age=70     Lev   0  70 #> 665      rx=Lev, sex=0, age=71     Lev   0  71 #> 666      rx=Lev, sex=0, age=71     Lev   0  71 #> 667      rx=Lev, sex=0, age=72     Lev   0  72 #> 668      rx=Lev, sex=0, age=72     Lev   0  72 #> 669      rx=Lev, sex=0, age=72     Lev   0  72 #> 670      rx=Lev, sex=0, age=72     Lev   0  72 #> 671      rx=Lev, sex=0, age=72     Lev   0  72 #> 672      rx=Lev, sex=0, age=73     Lev   0  73 #> 673      rx=Lev, sex=0, age=73     Lev   0  73 #> 674      rx=Lev, sex=0, age=73     Lev   0  73 #> 675      rx=Lev, sex=0, age=74     Lev   0  74 #> 676      rx=Lev, sex=0, age=74     Lev   0  74 #> 677      rx=Lev, sex=0, age=74     Lev   0  74 #> 678      rx=Lev, sex=0, age=74     Lev   0  74 #> 679      rx=Lev, sex=0, age=74     Lev   0  74 #> 680      rx=Lev, sex=0, age=74     Lev   0  74 #> 681      rx=Lev, sex=0, age=74     Lev   0  74 #> 682      rx=Lev, sex=0, age=75     Lev   0  75 #> 683      rx=Lev, sex=0, age=75     Lev   0  75 #> 684      rx=Lev, sex=0, age=75     Lev   0  75 #> 685      rx=Lev, sex=0, age=75     Lev   0  75 #> 686      rx=Lev, sex=0, age=76     Lev   0  76 #> 687      rx=Lev, sex=0, age=76     Lev   0  76 #> 688      rx=Lev, sex=0, age=76     Lev   0  76 #> 689      rx=Lev, sex=0, age=76     Lev   0  76 #> 690      rx=Lev, sex=0, age=77     Lev   0  77 #> 691      rx=Lev, sex=0, age=78     Lev   0  78 #> 692      rx=Lev, sex=0, age=79     Lev   0  79 #> 693      rx=Lev, sex=0, age=80     Lev   0  80 #> 694      rx=Lev, sex=0, age=80     Lev   0  80 #> 695      rx=Lev, sex=1, age=28     Lev   1  28 #> 696      rx=Lev, sex=1, age=28     Lev   1  28 #> 697      rx=Lev, sex=1, age=29     Lev   1  29 #> 698      rx=Lev, sex=1, age=30     Lev   1  30 #> 699      rx=Lev, sex=1, age=32     Lev   1  32 #> 700      rx=Lev, sex=1, age=32     Lev   1  32 #> 701      rx=Lev, sex=1, age=36     Lev   1  36 #> 702      rx=Lev, sex=1, age=36     Lev   1  36 #> 703      rx=Lev, sex=1, age=36     Lev   1  36 #> 704      rx=Lev, sex=1, age=36     Lev   1  36 #> 705      rx=Lev, sex=1, age=38     Lev   1  38 #> 706      rx=Lev, sex=1, age=38     Lev   1  38 #> 707      rx=Lev, sex=1, age=39     Lev   1  39 #> 708      rx=Lev, sex=1, age=39     Lev   1  39 #> 709      rx=Lev, sex=1, age=39     Lev   1  39 #> 710      rx=Lev, sex=1, age=41     Lev   1  41 #> 711      rx=Lev, sex=1, age=41     Lev   1  41 #> 712      rx=Lev, sex=1, age=42     Lev   1  42 #> 713      rx=Lev, sex=1, age=42     Lev   1  42 #> 714      rx=Lev, sex=1, age=43     Lev   1  43 #> 715      rx=Lev, sex=1, age=43     Lev   1  43 #> 716      rx=Lev, sex=1, age=43     Lev   1  43 #> 717      rx=Lev, sex=1, age=43     Lev   1  43 #> 718      rx=Lev, sex=1, age=44     Lev   1  44 #> 719      rx=Lev, sex=1, age=44     Lev   1  44 #> 720      rx=Lev, sex=1, age=44     Lev   1  44 #> 721      rx=Lev, sex=1, age=45     Lev   1  45 #> 722      rx=Lev, sex=1, age=45     Lev   1  45 #> 723      rx=Lev, sex=1, age=45     Lev   1  45 #> 724      rx=Lev, sex=1, age=46     Lev   1  46 #> 725      rx=Lev, sex=1, age=46     Lev   1  46 #> 726      rx=Lev, sex=1, age=46     Lev   1  46 #> 727      rx=Lev, sex=1, age=46     Lev   1  46 #> 728      rx=Lev, sex=1, age=46     Lev   1  46 #> 729      rx=Lev, sex=1, age=47     Lev   1  47 #> 730      rx=Lev, sex=1, age=47     Lev   1  47 #> 731      rx=Lev, sex=1, age=47     Lev   1  47 #> 732      rx=Lev, sex=1, age=47     Lev   1  47 #> 733      rx=Lev, sex=1, age=47     Lev   1  47 #> 734      rx=Lev, sex=1, age=47     Lev   1  47 #> 735      rx=Lev, sex=1, age=48     Lev   1  48 #> 736      rx=Lev, sex=1, age=48     Lev   1  48 #> 737      rx=Lev, sex=1, age=48     Lev   1  48 #> 738      rx=Lev, sex=1, age=48     Lev   1  48 #> 739      rx=Lev, sex=1, age=48     Lev   1  48 #> 740      rx=Lev, sex=1, age=48     Lev   1  48 #> 741      rx=Lev, sex=1, age=49     Lev   1  49 #> 742      rx=Lev, sex=1, age=49     Lev   1  49 #> 743      rx=Lev, sex=1, age=49     Lev   1  49 #> 744      rx=Lev, sex=1, age=50     Lev   1  50 #> 745      rx=Lev, sex=1, age=50     Lev   1  50 #> 746      rx=Lev, sex=1, age=50     Lev   1  50 #> 747      rx=Lev, sex=1, age=50     Lev   1  50 #> 748      rx=Lev, sex=1, age=50     Lev   1  50 #> 749      rx=Lev, sex=1, age=50     Lev   1  50 #> 750      rx=Lev, sex=1, age=51     Lev   1  51 #> 751      rx=Lev, sex=1, age=51     Lev   1  51 #> 752      rx=Lev, sex=1, age=51     Lev   1  51 #> 753      rx=Lev, sex=1, age=51     Lev   1  51 #> 754      rx=Lev, sex=1, age=52     Lev   1  52 #> 755      rx=Lev, sex=1, age=52     Lev   1  52 #> 756      rx=Lev, sex=1, age=52     Lev   1  52 #> 757      rx=Lev, sex=1, age=52     Lev   1  52 #> 758      rx=Lev, sex=1, age=53     Lev   1  53 #> 759      rx=Lev, sex=1, age=53     Lev   1  53 #> 760      rx=Lev, sex=1, age=53     Lev   1  53 #> 761      rx=Lev, sex=1, age=53     Lev   1  53 #> 762      rx=Lev, sex=1, age=53     Lev   1  53 #> 763      rx=Lev, sex=1, age=53     Lev   1  53 #> 764      rx=Lev, sex=1, age=53     Lev   1  53 #> 765      rx=Lev, sex=1, age=53     Lev   1  53 #> 766      rx=Lev, sex=1, age=53     Lev   1  53 #> 767      rx=Lev, sex=1, age=53     Lev   1  53 #> 768      rx=Lev, sex=1, age=54     Lev   1  54 #> 769      rx=Lev, sex=1, age=54     Lev   1  54 #> 770      rx=Lev, sex=1, age=54     Lev   1  54 #> 771      rx=Lev, sex=1, age=54     Lev   1  54 #> 772      rx=Lev, sex=1, age=54     Lev   1  54 #> 773      rx=Lev, sex=1, age=54     Lev   1  54 #> 774      rx=Lev, sex=1, age=54     Lev   1  54 #> 775      rx=Lev, sex=1, age=54     Lev   1  54 #> 776      rx=Lev, sex=1, age=55     Lev   1  55 #> 777      rx=Lev, sex=1, age=55     Lev   1  55 #> 778      rx=Lev, sex=1, age=55     Lev   1  55 #> 779      rx=Lev, sex=1, age=55     Lev   1  55 #> 780      rx=Lev, sex=1, age=56     Lev   1  56 #> 781      rx=Lev, sex=1, age=56     Lev   1  56 #> 782      rx=Lev, sex=1, age=56     Lev   1  56 #> 783      rx=Lev, sex=1, age=56     Lev   1  56 #> 784      rx=Lev, sex=1, age=56     Lev   1  56 #> 785      rx=Lev, sex=1, age=56     Lev   1  56 #> 786      rx=Lev, sex=1, age=56     Lev   1  56 #> 787      rx=Lev, sex=1, age=57     Lev   1  57 #> 788      rx=Lev, sex=1, age=57     Lev   1  57 #> 789      rx=Lev, sex=1, age=57     Lev   1  57 #> 790      rx=Lev, sex=1, age=57     Lev   1  57 #> 791      rx=Lev, sex=1, age=57     Lev   1  57 #> 792      rx=Lev, sex=1, age=57     Lev   1  57 #> 793      rx=Lev, sex=1, age=58     Lev   1  58 #> 794      rx=Lev, sex=1, age=58     Lev   1  58 #> 795      rx=Lev, sex=1, age=58     Lev   1  58 #> 796      rx=Lev, sex=1, age=58     Lev   1  58 #> 797      rx=Lev, sex=1, age=58     Lev   1  58 #> 798      rx=Lev, sex=1, age=58     Lev   1  58 #> 799      rx=Lev, sex=1, age=58     Lev   1  58 #> 800      rx=Lev, sex=1, age=58     Lev   1  58 #> 801      rx=Lev, sex=1, age=58     Lev   1  58 #> 802      rx=Lev, sex=1, age=58     Lev   1  58 #> 803      rx=Lev, sex=1, age=58     Lev   1  58 #> 804      rx=Lev, sex=1, age=59     Lev   1  59 #> 805      rx=Lev, sex=1, age=59     Lev   1  59 #> 806      rx=Lev, sex=1, age=59     Lev   1  59 #> 807      rx=Lev, sex=1, age=59     Lev   1  59 #> 808      rx=Lev, sex=1, age=59     Lev   1  59 #> 809      rx=Lev, sex=1, age=60     Lev   1  60 #> 810      rx=Lev, sex=1, age=60     Lev   1  60 #> 811      rx=Lev, sex=1, age=60     Lev   1  60 #> 812      rx=Lev, sex=1, age=60     Lev   1  60 #> 813      rx=Lev, sex=1, age=60     Lev   1  60 #> 814      rx=Lev, sex=1, age=60     Lev   1  60 #> 815      rx=Lev, sex=1, age=60     Lev   1  60 #> 816      rx=Lev, sex=1, age=60     Lev   1  60 #> 817      rx=Lev, sex=1, age=60     Lev   1  60 #> 818      rx=Lev, sex=1, age=60     Lev   1  60 #> 819      rx=Lev, sex=1, age=60     Lev   1  60 #> 820      rx=Lev, sex=1, age=61     Lev   1  61 #> 821      rx=Lev, sex=1, age=61     Lev   1  61 #> 822      rx=Lev, sex=1, age=61     Lev   1  61 #> 823      rx=Lev, sex=1, age=61     Lev   1  61 #> 824      rx=Lev, sex=1, age=61     Lev   1  61 #> 825      rx=Lev, sex=1, age=61     Lev   1  61 #> 826      rx=Lev, sex=1, age=61     Lev   1  61 #> 827      rx=Lev, sex=1, age=61     Lev   1  61 #> 828      rx=Lev, sex=1, age=61     Lev   1  61 #> 829      rx=Lev, sex=1, age=61     Lev   1  61 #> 830      rx=Lev, sex=1, age=61     Lev   1  61 #> 831      rx=Lev, sex=1, age=61     Lev   1  61 #> 832      rx=Lev, sex=1, age=61     Lev   1  61 #> 833      rx=Lev, sex=1, age=61     Lev   1  61 #> 834      rx=Lev, sex=1, age=62     Lev   1  62 #> 835      rx=Lev, sex=1, age=62     Lev   1  62 #> 836      rx=Lev, sex=1, age=62     Lev   1  62 #> 837      rx=Lev, sex=1, age=62     Lev   1  62 #> 838      rx=Lev, sex=1, age=62     Lev   1  62 #> 839      rx=Lev, sex=1, age=62     Lev   1  62 #> 840      rx=Lev, sex=1, age=63     Lev   1  63 #> 841      rx=Lev, sex=1, age=63     Lev   1  63 #> 842      rx=Lev, sex=1, age=63     Lev   1  63 #> 843      rx=Lev, sex=1, age=63     Lev   1  63 #> 844      rx=Lev, sex=1, age=63     Lev   1  63 #> 845      rx=Lev, sex=1, age=63     Lev   1  63 #> 846      rx=Lev, sex=1, age=63     Lev   1  63 #> 847      rx=Lev, sex=1, age=63     Lev   1  63 #> 848      rx=Lev, sex=1, age=63     Lev   1  63 #> 849      rx=Lev, sex=1, age=63     Lev   1  63 #> 850      rx=Lev, sex=1, age=63     Lev   1  63 #> 851      rx=Lev, sex=1, age=63     Lev   1  63 #> 852      rx=Lev, sex=1, age=64     Lev   1  64 #> 853      rx=Lev, sex=1, age=64     Lev   1  64 #> 854      rx=Lev, sex=1, age=64     Lev   1  64 #> 855      rx=Lev, sex=1, age=64     Lev   1  64 #> 856      rx=Lev, sex=1, age=64     Lev   1  64 #> 857      rx=Lev, sex=1, age=64     Lev   1  64 #> 858      rx=Lev, sex=1, age=64     Lev   1  64 #> 859      rx=Lev, sex=1, age=64     Lev   1  64 #> 860      rx=Lev, sex=1, age=64     Lev   1  64 #> 861      rx=Lev, sex=1, age=64     Lev   1  64 #> 862      rx=Lev, sex=1, age=64     Lev   1  64 #> 863      rx=Lev, sex=1, age=64     Lev   1  64 #> 864      rx=Lev, sex=1, age=64     Lev   1  64 #> 865      rx=Lev, sex=1, age=64     Lev   1  64 #> 866      rx=Lev, sex=1, age=65     Lev   1  65 #> 867      rx=Lev, sex=1, age=65     Lev   1  65 #> 868      rx=Lev, sex=1, age=65     Lev   1  65 #> 869      rx=Lev, sex=1, age=65     Lev   1  65 #> 870      rx=Lev, sex=1, age=65     Lev   1  65 #> 871      rx=Lev, sex=1, age=65     Lev   1  65 #> 872      rx=Lev, sex=1, age=66     Lev   1  66 #> 873      rx=Lev, sex=1, age=66     Lev   1  66 #> 874      rx=Lev, sex=1, age=66     Lev   1  66 #> 875      rx=Lev, sex=1, age=66     Lev   1  66 #> 876      rx=Lev, sex=1, age=66     Lev   1  66 #> 877      rx=Lev, sex=1, age=66     Lev   1  66 #> 878      rx=Lev, sex=1, age=66     Lev   1  66 #> 879      rx=Lev, sex=1, age=67     Lev   1  67 #> 880      rx=Lev, sex=1, age=67     Lev   1  67 #> 881      rx=Lev, sex=1, age=67     Lev   1  67 #> 882      rx=Lev, sex=1, age=67     Lev   1  67 #> 883      rx=Lev, sex=1, age=68     Lev   1  68 #> 884      rx=Lev, sex=1, age=68     Lev   1  68 #> 885      rx=Lev, sex=1, age=68     Lev   1  68 #> 886      rx=Lev, sex=1, age=68     Lev   1  68 #> 887      rx=Lev, sex=1, age=68     Lev   1  68 #> 888      rx=Lev, sex=1, age=68     Lev   1  68 #> 889      rx=Lev, sex=1, age=68     Lev   1  68 #> 890      rx=Lev, sex=1, age=68     Lev   1  68 #> 891      rx=Lev, sex=1, age=68     Lev   1  68 #> 892      rx=Lev, sex=1, age=69     Lev   1  69 #> 893      rx=Lev, sex=1, age=69     Lev   1  69 #> 894      rx=Lev, sex=1, age=69     Lev   1  69 #> 895      rx=Lev, sex=1, age=69     Lev   1  69 #> 896      rx=Lev, sex=1, age=69     Lev   1  69 #> 897      rx=Lev, sex=1, age=69     Lev   1  69 #> 898      rx=Lev, sex=1, age=70     Lev   1  70 #> 899      rx=Lev, sex=1, age=70     Lev   1  70 #> 900      rx=Lev, sex=1, age=70     Lev   1  70 #> 901      rx=Lev, sex=1, age=70     Lev   1  70 #> 902      rx=Lev, sex=1, age=70     Lev   1  70 #> 903      rx=Lev, sex=1, age=70     Lev   1  70 #> 904      rx=Lev, sex=1, age=70     Lev   1  70 #> 905      rx=Lev, sex=1, age=71     Lev   1  71 #> 906      rx=Lev, sex=1, age=71     Lev   1  71 #> 907      rx=Lev, sex=1, age=71     Lev   1  71 #> 908      rx=Lev, sex=1, age=71     Lev   1  71 #> 909      rx=Lev, sex=1, age=71     Lev   1  71 #> 910      rx=Lev, sex=1, age=71     Lev   1  71 #> 911      rx=Lev, sex=1, age=72     Lev   1  72 #> 912      rx=Lev, sex=1, age=72     Lev   1  72 #> 913      rx=Lev, sex=1, age=72     Lev   1  72 #> 914      rx=Lev, sex=1, age=72     Lev   1  72 #> 915      rx=Lev, sex=1, age=72     Lev   1  72 #> 916      rx=Lev, sex=1, age=72     Lev   1  72 #> 917      rx=Lev, sex=1, age=72     Lev   1  72 #> 918      rx=Lev, sex=1, age=72     Lev   1  72 #> 919      rx=Lev, sex=1, age=72     Lev   1  72 #> 920      rx=Lev, sex=1, age=72     Lev   1  72 #> 921      rx=Lev, sex=1, age=73     Lev   1  73 #> 922      rx=Lev, sex=1, age=73     Lev   1  73 #> 923      rx=Lev, sex=1, age=73     Lev   1  73 #> 924      rx=Lev, sex=1, age=73     Lev   1  73 #> 925      rx=Lev, sex=1, age=73     Lev   1  73 #> 926      rx=Lev, sex=1, age=73     Lev   1  73 #> 927      rx=Lev, sex=1, age=73     Lev   1  73 #> 928      rx=Lev, sex=1, age=73     Lev   1  73 #> 929      rx=Lev, sex=1, age=73     Lev   1  73 #> 930      rx=Lev, sex=1, age=73     Lev   1  73 #> 931      rx=Lev, sex=1, age=73     Lev   1  73 #> 932      rx=Lev, sex=1, age=74     Lev   1  74 #> 933      rx=Lev, sex=1, age=74     Lev   1  74 #> 934      rx=Lev, sex=1, age=74     Lev   1  74 #> 935      rx=Lev, sex=1, age=74     Lev   1  74 #> 936      rx=Lev, sex=1, age=74     Lev   1  74 #> 937      rx=Lev, sex=1, age=74     Lev   1  74 #> 938      rx=Lev, sex=1, age=75     Lev   1  75 #> 939      rx=Lev, sex=1, age=75     Lev   1  75 #> 940      rx=Lev, sex=1, age=75     Lev   1  75 #> 941      rx=Lev, sex=1, age=75     Lev   1  75 #> 942      rx=Lev, sex=1, age=75     Lev   1  75 #> 943      rx=Lev, sex=1, age=76     Lev   1  76 #> 944      rx=Lev, sex=1, age=76     Lev   1  76 #> 945      rx=Lev, sex=1, age=76     Lev   1  76 #> 946      rx=Lev, sex=1, age=76     Lev   1  76 #> 947      rx=Lev, sex=1, age=76     Lev   1  76 #> 948      rx=Lev, sex=1, age=77     Lev   1  77 #> 949      rx=Lev, sex=1, age=77     Lev   1  77 #> 950      rx=Lev, sex=1, age=77     Lev   1  77 #> 951      rx=Lev, sex=1, age=77     Lev   1  77 #> 952      rx=Lev, sex=1, age=77     Lev   1  77 #> 953      rx=Lev, sex=1, age=77     Lev   1  77 #> 954      rx=Lev, sex=1, age=77     Lev   1  77 #> 955      rx=Lev, sex=1, age=78     Lev   1  78 #> 956      rx=Lev, sex=1, age=79     Lev   1  79 #> 957      rx=Lev, sex=1, age=79     Lev   1  79 #> 958      rx=Lev, sex=1, age=80     Lev   1  80 #> 959      rx=Lev, sex=1, age=80     Lev   1  80 #> 960      rx=Lev, sex=1, age=80     Lev   1  80 #> 961      rx=Lev, sex=1, age=80     Lev   1  80 #> 962      rx=Lev, sex=1, age=80     Lev   1  80 #> 963      rx=Lev, sex=1, age=80     Lev   1  80 #> 964      rx=Lev, sex=1, age=80     Lev   1  80 #> 965      rx=Lev, sex=1, age=80     Lev   1  80 #> 966      rx=Lev, sex=1, age=82     Lev   1  82 #> 967      rx=Lev, sex=1, age=82     Lev   1  82 #> 968      rx=Lev, sex=1, age=83     Lev   1  83 #> 969  rx=Lev+5FU, sex=0, age=26 Lev+5FU   0  26 #> 970  rx=Lev+5FU, sex=0, age=27 Lev+5FU   0  27 #> 971  rx=Lev+5FU, sex=0, age=30 Lev+5FU   0  30 #> 972  rx=Lev+5FU, sex=0, age=30 Lev+5FU   0  30 #> 973  rx=Lev+5FU, sex=0, age=30 Lev+5FU   0  30 #> 974  rx=Lev+5FU, sex=0, age=30 Lev+5FU   0  30 #> 975  rx=Lev+5FU, sex=0, age=32 Lev+5FU   0  32 #> 976  rx=Lev+5FU, sex=0, age=32 Lev+5FU   0  32 #> 977  rx=Lev+5FU, sex=0, age=32 Lev+5FU   0  32 #> 978  rx=Lev+5FU, sex=0, age=32 Lev+5FU   0  32 #> 979  rx=Lev+5FU, sex=0, age=33 Lev+5FU   0  33 #> 980  rx=Lev+5FU, sex=0, age=33 Lev+5FU   0  33 #> 981  rx=Lev+5FU, sex=0, age=34 Lev+5FU   0  34 #> 982  rx=Lev+5FU, sex=0, age=34 Lev+5FU   0  34 #> 983  rx=Lev+5FU, sex=0, age=34 Lev+5FU   0  34 #> 984  rx=Lev+5FU, sex=0, age=34 Lev+5FU   0  34 #> 985  rx=Lev+5FU, sex=0, age=36 Lev+5FU   0  36 #> 986  rx=Lev+5FU, sex=0, age=36 Lev+5FU   0  36 #> 987  rx=Lev+5FU, sex=0, age=36 Lev+5FU   0  36 #> 988  rx=Lev+5FU, sex=0, age=36 Lev+5FU   0  36 #> 989  rx=Lev+5FU, sex=0, age=38 Lev+5FU   0  38 #> 990  rx=Lev+5FU, sex=0, age=38 Lev+5FU   0  38 #> 991  rx=Lev+5FU, sex=0, age=38 Lev+5FU   0  38 #> 992  rx=Lev+5FU, sex=0, age=38 Lev+5FU   0  38 #> 993  rx=Lev+5FU, sex=0, age=39 Lev+5FU   0  39 #> 994  rx=Lev+5FU, sex=0, age=40 Lev+5FU   0  40 #> 995  rx=Lev+5FU, sex=0, age=40 Lev+5FU   0  40 #> 996  rx=Lev+5FU, sex=0, age=41 Lev+5FU   0  41 #> 997  rx=Lev+5FU, sex=0, age=41 Lev+5FU   0  41 #> 998  rx=Lev+5FU, sex=0, age=41 Lev+5FU   0  41 #> 999  rx=Lev+5FU, sex=0, age=42 Lev+5FU   0  42 #> 1000 rx=Lev+5FU, sex=0, age=42 Lev+5FU   0  42 #> 1001 rx=Lev+5FU, sex=0, age=42 Lev+5FU   0  42 #> 1002 rx=Lev+5FU, sex=0, age=43 Lev+5FU   0  43 #> 1003 rx=Lev+5FU, sex=0, age=44 Lev+5FU   0  44 #> 1004 rx=Lev+5FU, sex=0, age=44 Lev+5FU   0  44 #> 1005 rx=Lev+5FU, sex=0, age=45 Lev+5FU   0  45 #> 1006 rx=Lev+5FU, sex=0, age=45 Lev+5FU   0  45 #> 1007 rx=Lev+5FU, sex=0, age=45 Lev+5FU   0  45 #> 1008 rx=Lev+5FU, sex=0, age=45 Lev+5FU   0  45 #> 1009 rx=Lev+5FU, sex=0, age=45 Lev+5FU   0  45 #> 1010 rx=Lev+5FU, sex=0, age=45 Lev+5FU   0  45 #> 1011 rx=Lev+5FU, sex=0, age=46 Lev+5FU   0  46 #> 1012 rx=Lev+5FU, sex=0, age=47 Lev+5FU   0  47 #> 1013 rx=Lev+5FU, sex=0, age=47 Lev+5FU   0  47 #> 1014 rx=Lev+5FU, sex=0, age=47 Lev+5FU   0  47 #> 1015 rx=Lev+5FU, sex=0, age=48 Lev+5FU   0  48 #> 1016 rx=Lev+5FU, sex=0, age=48 Lev+5FU   0  48 #> 1017 rx=Lev+5FU, sex=0, age=48 Lev+5FU   0  48 #> 1018 rx=Lev+5FU, sex=0, age=48 Lev+5FU   0  48 #> 1019 rx=Lev+5FU, sex=0, age=48 Lev+5FU   0  48 #> 1020 rx=Lev+5FU, sex=0, age=49 Lev+5FU   0  49 #> 1021 rx=Lev+5FU, sex=0, age=50 Lev+5FU   0  50 #> 1022 rx=Lev+5FU, sex=0, age=50 Lev+5FU   0  50 #> 1023 rx=Lev+5FU, sex=0, age=50 Lev+5FU   0  50 #> 1024 rx=Lev+5FU, sex=0, age=50 Lev+5FU   0  50 #> 1025 rx=Lev+5FU, sex=0, age=51 Lev+5FU   0  51 #> 1026 rx=Lev+5FU, sex=0, age=52 Lev+5FU   0  52 #> 1027 rx=Lev+5FU, sex=0, age=52 Lev+5FU   0  52 #> 1028 rx=Lev+5FU, sex=0, age=52 Lev+5FU   0  52 #> 1029 rx=Lev+5FU, sex=0, age=52 Lev+5FU   0  52 #> 1030 rx=Lev+5FU, sex=0, age=52 Lev+5FU   0  52 #> 1031 rx=Lev+5FU, sex=0, age=52 Lev+5FU   0  52 #> 1032 rx=Lev+5FU, sex=0, age=53 Lev+5FU   0  53 #> 1033 rx=Lev+5FU, sex=0, age=53 Lev+5FU   0  53 #> 1034 rx=Lev+5FU, sex=0, age=54 Lev+5FU   0  54 #> 1035 rx=Lev+5FU, sex=0, age=54 Lev+5FU   0  54 #> 1036 rx=Lev+5FU, sex=0, age=54 Lev+5FU   0  54 #> 1037 rx=Lev+5FU, sex=0, age=54 Lev+5FU   0  54 #> 1038 rx=Lev+5FU, sex=0, age=55 Lev+5FU   0  55 #> 1039 rx=Lev+5FU, sex=0, age=55 Lev+5FU   0  55 #> 1040 rx=Lev+5FU, sex=0, age=55 Lev+5FU   0  55 #> 1041 rx=Lev+5FU, sex=0, age=55 Lev+5FU   0  55 #> 1042 rx=Lev+5FU, sex=0, age=55 Lev+5FU   0  55 #> 1043 rx=Lev+5FU, sex=0, age=55 Lev+5FU   0  55 #> 1044 rx=Lev+5FU, sex=0, age=55 Lev+5FU   0  55 #> 1045 rx=Lev+5FU, sex=0, age=56 Lev+5FU   0  56 #> 1046 rx=Lev+5FU, sex=0, age=56 Lev+5FU   0  56 #> 1047 rx=Lev+5FU, sex=0, age=56 Lev+5FU   0  56 #> 1048 rx=Lev+5FU, sex=0, age=56 Lev+5FU   0  56 #> 1049 rx=Lev+5FU, sex=0, age=56 Lev+5FU   0  56 #> 1050 rx=Lev+5FU, sex=0, age=56 Lev+5FU   0  56 #> 1051 rx=Lev+5FU, sex=0, age=56 Lev+5FU   0  56 #> 1052 rx=Lev+5FU, sex=0, age=56 Lev+5FU   0  56 #> 1053 rx=Lev+5FU, sex=0, age=57 Lev+5FU   0  57 #> 1054 rx=Lev+5FU, sex=0, age=57 Lev+5FU   0  57 #> 1055 rx=Lev+5FU, sex=0, age=57 Lev+5FU   0  57 #> 1056 rx=Lev+5FU, sex=0, age=57 Lev+5FU   0  57 #> 1057 rx=Lev+5FU, sex=0, age=57 Lev+5FU   0  57 #> 1058 rx=Lev+5FU, sex=0, age=57 Lev+5FU   0  57 #> 1059 rx=Lev+5FU, sex=0, age=57 Lev+5FU   0  57 #> 1060 rx=Lev+5FU, sex=0, age=57 Lev+5FU   0  57 #> 1061 rx=Lev+5FU, sex=0, age=58 Lev+5FU   0  58 #> 1062 rx=Lev+5FU, sex=0, age=58 Lev+5FU   0  58 #> 1063 rx=Lev+5FU, sex=0, age=58 Lev+5FU   0  58 #> 1064 rx=Lev+5FU, sex=0, age=58 Lev+5FU   0  58 #> 1065 rx=Lev+5FU, sex=0, age=58 Lev+5FU   0  58 #> 1066 rx=Lev+5FU, sex=0, age=58 Lev+5FU   0  58 #> 1067 rx=Lev+5FU, sex=0, age=58 Lev+5FU   0  58 #> 1068 rx=Lev+5FU, sex=0, age=58 Lev+5FU   0  58 #> 1069 rx=Lev+5FU, sex=0, age=59 Lev+5FU   0  59 #> 1070 rx=Lev+5FU, sex=0, age=59 Lev+5FU   0  59 #> 1071 rx=Lev+5FU, sex=0, age=59 Lev+5FU   0  59 #> 1072 rx=Lev+5FU, sex=0, age=59 Lev+5FU   0  59 #> 1073 rx=Lev+5FU, sex=0, age=59 Lev+5FU   0  59 #> 1074 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1075 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1076 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1077 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1078 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1079 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1080 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1081 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1082 rx=Lev+5FU, sex=0, age=60 Lev+5FU   0  60 #> 1083 rx=Lev+5FU, sex=0, age=61 Lev+5FU   0  61 #> 1084 rx=Lev+5FU, sex=0, age=61 Lev+5FU   0  61 #> 1085 rx=Lev+5FU, sex=0, age=61 Lev+5FU   0  61 #> 1086 rx=Lev+5FU, sex=0, age=61 Lev+5FU   0  61 #> 1087 rx=Lev+5FU, sex=0, age=61 Lev+5FU   0  61 #> 1088 rx=Lev+5FU, sex=0, age=61 Lev+5FU   0  61 #> 1089 rx=Lev+5FU, sex=0, age=62 Lev+5FU   0  62 #> 1090 rx=Lev+5FU, sex=0, age=62 Lev+5FU   0  62 #> 1091 rx=Lev+5FU, sex=0, age=62 Lev+5FU   0  62 #> 1092 rx=Lev+5FU, sex=0, age=62 Lev+5FU   0  62 #> 1093 rx=Lev+5FU, sex=0, age=62 Lev+5FU   0  62 #> 1094 rx=Lev+5FU, sex=0, age=62 Lev+5FU   0  62 #> 1095 rx=Lev+5FU, sex=0, age=63 Lev+5FU   0  63 #> 1096 rx=Lev+5FU, sex=0, age=63 Lev+5FU   0  63 #> 1097 rx=Lev+5FU, sex=0, age=63 Lev+5FU   0  63 #> 1098 rx=Lev+5FU, sex=0, age=63 Lev+5FU   0  63 #> 1099 rx=Lev+5FU, sex=0, age=64 Lev+5FU   0  64 #> 1100 rx=Lev+5FU, sex=0, age=64 Lev+5FU   0  64 #> 1101 rx=Lev+5FU, sex=0, age=64 Lev+5FU   0  64 #> 1102 rx=Lev+5FU, sex=0, age=64 Lev+5FU   0  64 #> 1103 rx=Lev+5FU, sex=0, age=64 Lev+5FU   0  64 #> 1104 rx=Lev+5FU, sex=0, age=64 Lev+5FU   0  64 #> 1105 rx=Lev+5FU, sex=0, age=64 Lev+5FU   0  64 #> 1106 rx=Lev+5FU, sex=0, age=64 Lev+5FU   0  64 #> 1107 rx=Lev+5FU, sex=0, age=65 Lev+5FU   0  65 #> 1108 rx=Lev+5FU, sex=0, age=65 Lev+5FU   0  65 #> 1109 rx=Lev+5FU, sex=0, age=65 Lev+5FU   0  65 #> 1110 rx=Lev+5FU, sex=0, age=65 Lev+5FU   0  65 #> 1111 rx=Lev+5FU, sex=0, age=65 Lev+5FU   0  65 #> 1112 rx=Lev+5FU, sex=0, age=65 Lev+5FU   0  65 #> 1113 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1114 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1115 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1116 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1117 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1118 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1119 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1120 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1121 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1122 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1123 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1124 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1125 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1126 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1127 rx=Lev+5FU, sex=0, age=66 Lev+5FU   0  66 #> 1128 rx=Lev+5FU, sex=0, age=67 Lev+5FU   0  67 #> 1129 rx=Lev+5FU, sex=0, age=67 Lev+5FU   0  67 #> 1130 rx=Lev+5FU, sex=0, age=67 Lev+5FU   0  67 #> 1131 rx=Lev+5FU, sex=0, age=67 Lev+5FU   0  67 #> 1132 rx=Lev+5FU, sex=0, age=68 Lev+5FU   0  68 #> 1133 rx=Lev+5FU, sex=0, age=68 Lev+5FU   0  68 #> 1134 rx=Lev+5FU, sex=0, age=68 Lev+5FU   0  68 #> 1135 rx=Lev+5FU, sex=0, age=68 Lev+5FU   0  68 #> 1136 rx=Lev+5FU, sex=0, age=68 Lev+5FU   0  68 #> 1137 rx=Lev+5FU, sex=0, age=68 Lev+5FU   0  68 #> 1138 rx=Lev+5FU, sex=0, age=68 Lev+5FU   0  68 #> 1139 rx=Lev+5FU, sex=0, age=68 Lev+5FU   0  68 #> 1140 rx=Lev+5FU, sex=0, age=69 Lev+5FU   0  69 #> 1141 rx=Lev+5FU, sex=0, age=69 Lev+5FU   0  69 #> 1142 rx=Lev+5FU, sex=0, age=69 Lev+5FU   0  69 #> 1143 rx=Lev+5FU, sex=0, age=69 Lev+5FU   0  69 #> 1144 rx=Lev+5FU, sex=0, age=69 Lev+5FU   0  69 #> 1145 rx=Lev+5FU, sex=0, age=70 Lev+5FU   0  70 #> 1146 rx=Lev+5FU, sex=0, age=70 Lev+5FU   0  70 #> 1147 rx=Lev+5FU, sex=0, age=70 Lev+5FU   0  70 #> 1148 rx=Lev+5FU, sex=0, age=70 Lev+5FU   0  70 #> 1149 rx=Lev+5FU, sex=0, age=70 Lev+5FU   0  70 #> 1150 rx=Lev+5FU, sex=0, age=70 Lev+5FU   0  70 #> 1151 rx=Lev+5FU, sex=0, age=70 Lev+5FU   0  70 #> 1152 rx=Lev+5FU, sex=0, age=70 Lev+5FU   0  70 #> 1153 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1154 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1155 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1156 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1157 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1158 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1159 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1160 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1161 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1162 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1163 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1164 rx=Lev+5FU, sex=0, age=71 Lev+5FU   0  71 #> 1165 rx=Lev+5FU, sex=0, age=72 Lev+5FU   0  72 #> 1166 rx=Lev+5FU, sex=0, age=72 Lev+5FU   0  72 #> 1167 rx=Lev+5FU, sex=0, age=72 Lev+5FU   0  72 #> 1168 rx=Lev+5FU, sex=0, age=72 Lev+5FU   0  72 #> 1169 rx=Lev+5FU, sex=0, age=73 Lev+5FU   0  73 #> 1170 rx=Lev+5FU, sex=0, age=73 Lev+5FU   0  73 #> 1171 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1172 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1173 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1174 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1175 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1176 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1177 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1178 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1179 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1180 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1181 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1182 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1183 rx=Lev+5FU, sex=0, age=74 Lev+5FU   0  74 #> 1184 rx=Lev+5FU, sex=0, age=75 Lev+5FU   0  75 #> 1185 rx=Lev+5FU, sex=0, age=75 Lev+5FU   0  75 #> 1186 rx=Lev+5FU, sex=0, age=75 Lev+5FU   0  75 #> 1187 rx=Lev+5FU, sex=0, age=75 Lev+5FU   0  75 #> 1188 rx=Lev+5FU, sex=0, age=76 Lev+5FU   0  76 #> 1189 rx=Lev+5FU, sex=0, age=76 Lev+5FU   0  76 #> 1190 rx=Lev+5FU, sex=0, age=76 Lev+5FU   0  76 #> 1191 rx=Lev+5FU, sex=0, age=76 Lev+5FU   0  76 #> 1192 rx=Lev+5FU, sex=0, age=77 Lev+5FU   0  77 #> 1193 rx=Lev+5FU, sex=0, age=77 Lev+5FU   0  77 #> 1194 rx=Lev+5FU, sex=0, age=77 Lev+5FU   0  77 #> 1195 rx=Lev+5FU, sex=0, age=78 Lev+5FU   0  78 #> 1196 rx=Lev+5FU, sex=0, age=78 Lev+5FU   0  78 #> 1197 rx=Lev+5FU, sex=0, age=79 Lev+5FU   0  79 #> 1198 rx=Lev+5FU, sex=0, age=80 Lev+5FU   0  80 #> 1199 rx=Lev+5FU, sex=0, age=81 Lev+5FU   0  81 #> 1200 rx=Lev+5FU, sex=0, age=81 Lev+5FU   0  81 #> 1201 rx=Lev+5FU, sex=0, age=81 Lev+5FU   0  81 #> 1202 rx=Lev+5FU, sex=0, age=81 Lev+5FU   0  81 #> 1203 rx=Lev+5FU, sex=1, age=31 Lev+5FU   1  31 #> 1204 rx=Lev+5FU, sex=1, age=31 Lev+5FU   1  31 #> 1205 rx=Lev+5FU, sex=1, age=32 Lev+5FU   1  32 #> 1206 rx=Lev+5FU, sex=1, age=32 Lev+5FU   1  32 #> 1207 rx=Lev+5FU, sex=1, age=33 Lev+5FU   1  33 #> 1208 rx=Lev+5FU, sex=1, age=35 Lev+5FU   1  35 #> 1209 rx=Lev+5FU, sex=1, age=35 Lev+5FU   1  35 #> 1210 rx=Lev+5FU, sex=1, age=35 Lev+5FU   1  35 #> 1211 rx=Lev+5FU, sex=1, age=38 Lev+5FU   1  38 #> 1212 rx=Lev+5FU, sex=1, age=38 Lev+5FU   1  38 #> 1213 rx=Lev+5FU, sex=1, age=38 Lev+5FU   1  38 #> 1214 rx=Lev+5FU, sex=1, age=38 Lev+5FU   1  38 #> 1215 rx=Lev+5FU, sex=1, age=38 Lev+5FU   1  38 #> 1216 rx=Lev+5FU, sex=1, age=38 Lev+5FU   1  38 #> 1217 rx=Lev+5FU, sex=1, age=39 Lev+5FU   1  39 #> 1218 rx=Lev+5FU, sex=1, age=39 Lev+5FU   1  39 #> 1219 rx=Lev+5FU, sex=1, age=39 Lev+5FU   1  39 #> 1220 rx=Lev+5FU, sex=1, age=40 Lev+5FU   1  40 #> 1221 rx=Lev+5FU, sex=1, age=40 Lev+5FU   1  40 #> 1222 rx=Lev+5FU, sex=1, age=40 Lev+5FU   1  40 #> 1223 rx=Lev+5FU, sex=1, age=40 Lev+5FU   1  40 #> 1224 rx=Lev+5FU, sex=1, age=40 Lev+5FU   1  40 #> 1225 rx=Lev+5FU, sex=1, age=40 Lev+5FU   1  40 #> 1226 rx=Lev+5FU, sex=1, age=42 Lev+5FU   1  42 #> 1227 rx=Lev+5FU, sex=1, age=43 Lev+5FU   1  43 #> 1228 rx=Lev+5FU, sex=1, age=43 Lev+5FU   1  43 #> 1229 rx=Lev+5FU, sex=1, age=43 Lev+5FU   1  43 #> 1230 rx=Lev+5FU, sex=1, age=45 Lev+5FU   1  45 #> 1231 rx=Lev+5FU, sex=1, age=45 Lev+5FU   1  45 #> 1232 rx=Lev+5FU, sex=1, age=45 Lev+5FU   1  45 #> 1233 rx=Lev+5FU, sex=1, age=46 Lev+5FU   1  46 #> 1234 rx=Lev+5FU, sex=1, age=46 Lev+5FU   1  46 #> 1235 rx=Lev+5FU, sex=1, age=46 Lev+5FU   1  46 #> 1236 rx=Lev+5FU, sex=1, age=46 Lev+5FU   1  46 #> 1237 rx=Lev+5FU, sex=1, age=46 Lev+5FU   1  46 #> 1238 rx=Lev+5FU, sex=1, age=47 Lev+5FU   1  47 #> 1239 rx=Lev+5FU, sex=1, age=47 Lev+5FU   1  47 #> 1240 rx=Lev+5FU, sex=1, age=47 Lev+5FU   1  47 #> 1241 rx=Lev+5FU, sex=1, age=47 Lev+5FU   1  47 #> 1242 rx=Lev+5FU, sex=1, age=48 Lev+5FU   1  48 #> 1243 rx=Lev+5FU, sex=1, age=49 Lev+5FU   1  49 #> 1244 rx=Lev+5FU, sex=1, age=49 Lev+5FU   1  49 #> 1245 rx=Lev+5FU, sex=1, age=49 Lev+5FU   1  49 #> 1246 rx=Lev+5FU, sex=1, age=49 Lev+5FU   1  49 #> 1247 rx=Lev+5FU, sex=1, age=49 Lev+5FU   1  49 #> 1248 rx=Lev+5FU, sex=1, age=50 Lev+5FU   1  50 #> 1249 rx=Lev+5FU, sex=1, age=50 Lev+5FU   1  50 #> 1250 rx=Lev+5FU, sex=1, age=50 Lev+5FU   1  50 #> 1251 rx=Lev+5FU, sex=1, age=52 Lev+5FU   1  52 #> 1252 rx=Lev+5FU, sex=1, age=52 Lev+5FU   1  52 #> 1253 rx=Lev+5FU, sex=1, age=52 Lev+5FU   1  52 #> 1254 rx=Lev+5FU, sex=1, age=53 Lev+5FU   1  53 #> 1255 rx=Lev+5FU, sex=1, age=54 Lev+5FU   1  54 #> 1256 rx=Lev+5FU, sex=1, age=54 Lev+5FU   1  54 #> 1257 rx=Lev+5FU, sex=1, age=54 Lev+5FU   1  54 #> 1258 rx=Lev+5FU, sex=1, age=54 Lev+5FU   1  54 #> 1259 rx=Lev+5FU, sex=1, age=55 Lev+5FU   1  55 #> 1260 rx=Lev+5FU, sex=1, age=55 Lev+5FU   1  55 #> 1261 rx=Lev+5FU, sex=1, age=55 Lev+5FU   1  55 #> 1262 rx=Lev+5FU, sex=1, age=55 Lev+5FU   1  55 #> 1263 rx=Lev+5FU, sex=1, age=55 Lev+5FU   1  55 #> 1264 rx=Lev+5FU, sex=1, age=55 Lev+5FU   1  55 #> 1265 rx=Lev+5FU, sex=1, age=55 Lev+5FU   1  55 #> 1266 rx=Lev+5FU, sex=1, age=55 Lev+5FU   1  55 #> 1267 rx=Lev+5FU, sex=1, age=56 Lev+5FU   1  56 #> 1268 rx=Lev+5FU, sex=1, age=56 Lev+5FU   1  56 #> 1269 rx=Lev+5FU, sex=1, age=56 Lev+5FU   1  56 #> 1270 rx=Lev+5FU, sex=1, age=56 Lev+5FU   1  56 #> 1271 rx=Lev+5FU, sex=1, age=56 Lev+5FU   1  56 #> 1272 rx=Lev+5FU, sex=1, age=56 Lev+5FU   1  56 #> 1273 rx=Lev+5FU, sex=1, age=57 Lev+5FU   1  57 #> 1274 rx=Lev+5FU, sex=1, age=57 Lev+5FU   1  57 #> 1275 rx=Lev+5FU, sex=1, age=57 Lev+5FU   1  57 #> 1276 rx=Lev+5FU, sex=1, age=57 Lev+5FU   1  57 #> 1277 rx=Lev+5FU, sex=1, age=57 Lev+5FU   1  57 #> 1278 rx=Lev+5FU, sex=1, age=58 Lev+5FU   1  58 #> 1279 rx=Lev+5FU, sex=1, age=58 Lev+5FU   1  58 #> 1280 rx=Lev+5FU, sex=1, age=58 Lev+5FU   1  58 #> 1281 rx=Lev+5FU, sex=1, age=58 Lev+5FU   1  58 #> 1282 rx=Lev+5FU, sex=1, age=59 Lev+5FU   1  59 #> 1283 rx=Lev+5FU, sex=1, age=59 Lev+5FU   1  59 #> 1284 rx=Lev+5FU, sex=1, age=59 Lev+5FU   1  59 #> 1285 rx=Lev+5FU, sex=1, age=59 Lev+5FU   1  59 #> 1286 rx=Lev+5FU, sex=1, age=59 Lev+5FU   1  59 #> 1287 rx=Lev+5FU, sex=1, age=59 Lev+5FU   1  59 #> 1288 rx=Lev+5FU, sex=1, age=60 Lev+5FU   1  60 #> 1289 rx=Lev+5FU, sex=1, age=60 Lev+5FU   1  60 #> 1290 rx=Lev+5FU, sex=1, age=60 Lev+5FU   1  60 #> 1291 rx=Lev+5FU, sex=1, age=60 Lev+5FU   1  60 #> 1292 rx=Lev+5FU, sex=1, age=61 Lev+5FU   1  61 #> 1293 rx=Lev+5FU, sex=1, age=61 Lev+5FU   1  61 #> 1294 rx=Lev+5FU, sex=1, age=61 Lev+5FU   1  61 #> 1295 rx=Lev+5FU, sex=1, age=61 Lev+5FU   1  61 #> 1296 rx=Lev+5FU, sex=1, age=61 Lev+5FU   1  61 #> 1297 rx=Lev+5FU, sex=1, age=61 Lev+5FU   1  61 #> 1298 rx=Lev+5FU, sex=1, age=62 Lev+5FU   1  62 #> 1299 rx=Lev+5FU, sex=1, age=62 Lev+5FU   1  62 #> 1300 rx=Lev+5FU, sex=1, age=62 Lev+5FU   1  62 #> 1301 rx=Lev+5FU, sex=1, age=62 Lev+5FU   1  62 #> 1302 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1303 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1304 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1305 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1306 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1307 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1308 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1309 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1310 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1311 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1312 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1313 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1314 rx=Lev+5FU, sex=1, age=63 Lev+5FU   1  63 #> 1315 rx=Lev+5FU, sex=1, age=64 Lev+5FU   1  64 #> 1316 rx=Lev+5FU, sex=1, age=64 Lev+5FU   1  64 #> 1317 rx=Lev+5FU, sex=1, age=64 Lev+5FU   1  64 #> 1318 rx=Lev+5FU, sex=1, age=64 Lev+5FU   1  64 #> 1319 rx=Lev+5FU, sex=1, age=64 Lev+5FU   1  64 #> 1320 rx=Lev+5FU, sex=1, age=65 Lev+5FU   1  65 #> 1321 rx=Lev+5FU, sex=1, age=65 Lev+5FU   1  65 #> 1322 rx=Lev+5FU, sex=1, age=65 Lev+5FU   1  65 #> 1323 rx=Lev+5FU, sex=1, age=65 Lev+5FU   1  65 #> 1324 rx=Lev+5FU, sex=1, age=65 Lev+5FU   1  65 #> 1325 rx=Lev+5FU, sex=1, age=65 Lev+5FU   1  65 #> 1326 rx=Lev+5FU, sex=1, age=65 Lev+5FU   1  65 #> 1327 rx=Lev+5FU, sex=1, age=65 Lev+5FU   1  65 #> 1328 rx=Lev+5FU, sex=1, age=66 Lev+5FU   1  66 #> 1329 rx=Lev+5FU, sex=1, age=66 Lev+5FU   1  66 #> 1330 rx=Lev+5FU, sex=1, age=66 Lev+5FU   1  66 #> 1331 rx=Lev+5FU, sex=1, age=66 Lev+5FU   1  66 #> 1332 rx=Lev+5FU, sex=1, age=66 Lev+5FU   1  66 #> 1333 rx=Lev+5FU, sex=1, age=66 Lev+5FU   1  66 #> 1334 rx=Lev+5FU, sex=1, age=67 Lev+5FU   1  67 #> 1335 rx=Lev+5FU, sex=1, age=67 Lev+5FU   1  67 #> 1336 rx=Lev+5FU, sex=1, age=67 Lev+5FU   1  67 #> 1337 rx=Lev+5FU, sex=1, age=67 Lev+5FU   1  67 #> 1338 rx=Lev+5FU, sex=1, age=68 Lev+5FU   1  68 #> 1339 rx=Lev+5FU, sex=1, age=68 Lev+5FU   1  68 #> 1340 rx=Lev+5FU, sex=1, age=68 Lev+5FU   1  68 #> 1341 rx=Lev+5FU, sex=1, age=68 Lev+5FU   1  68 #> 1342 rx=Lev+5FU, sex=1, age=68 Lev+5FU   1  68 #> 1343 rx=Lev+5FU, sex=1, age=68 Lev+5FU   1  68 #> 1344 rx=Lev+5FU, sex=1, age=68 Lev+5FU   1  68 #> 1345 rx=Lev+5FU, sex=1, age=69 Lev+5FU   1  69 #> 1346 rx=Lev+5FU, sex=1, age=69 Lev+5FU   1  69 #> 1347 rx=Lev+5FU, sex=1, age=69 Lev+5FU   1  69 #> 1348 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1349 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1350 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1351 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1352 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1353 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1354 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1355 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1356 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1357 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1358 rx=Lev+5FU, sex=1, age=70 Lev+5FU   1  70 #> 1359 rx=Lev+5FU, sex=1, age=71 Lev+5FU   1  71 #> 1360 rx=Lev+5FU, sex=1, age=71 Lev+5FU   1  71 #> 1361 rx=Lev+5FU, sex=1, age=71 Lev+5FU   1  71 #> 1362 rx=Lev+5FU, sex=1, age=72 Lev+5FU   1  72 #> 1363 rx=Lev+5FU, sex=1, age=72 Lev+5FU   1  72 #> 1364 rx=Lev+5FU, sex=1, age=72 Lev+5FU   1  72 #> 1365 rx=Lev+5FU, sex=1, age=72 Lev+5FU   1  72 #> 1366 rx=Lev+5FU, sex=1, age=72 Lev+5FU   1  72 #> 1367 rx=Lev+5FU, sex=1, age=73 Lev+5FU   1  73 #> 1368 rx=Lev+5FU, sex=1, age=73 Lev+5FU   1  73 #> 1369 rx=Lev+5FU, sex=1, age=73 Lev+5FU   1  73 #> 1370 rx=Lev+5FU, sex=1, age=73 Lev+5FU   1  73 #> 1371 rx=Lev+5FU, sex=1, age=73 Lev+5FU   1  73 #> 1372 rx=Lev+5FU, sex=1, age=73 Lev+5FU   1  73 #> 1373 rx=Lev+5FU, sex=1, age=73 Lev+5FU   1  73 #> 1374 rx=Lev+5FU, sex=1, age=74 Lev+5FU   1  74 #> 1375 rx=Lev+5FU, sex=1, age=74 Lev+5FU   1  74 #> 1376 rx=Lev+5FU, sex=1, age=74 Lev+5FU   1  74 #> 1377 rx=Lev+5FU, sex=1, age=74 Lev+5FU   1  74 #> 1378 rx=Lev+5FU, sex=1, age=74 Lev+5FU   1  74 #> 1379 rx=Lev+5FU, sex=1, age=74 Lev+5FU   1  74 #> 1380 rx=Lev+5FU, sex=1, age=75 Lev+5FU   1  75 #> 1381 rx=Lev+5FU, sex=1, age=75 Lev+5FU   1  75 #> 1382 rx=Lev+5FU, sex=1, age=76 Lev+5FU   1  76 #> 1383 rx=Lev+5FU, sex=1, age=77 Lev+5FU   1  77 #> 1384 rx=Lev+5FU, sex=1, age=79 Lev+5FU   1  79 #> 1385 rx=Lev+5FU, sex=1, age=79 Lev+5FU   1  79 #> 1386 rx=Lev+5FU, sex=1, age=79 Lev+5FU   1  79 #> 1387 rx=Lev+5FU, sex=1, age=80 Lev+5FU   1  80"}]
