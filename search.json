[{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Automatic Regression Modeling","text":"can install autoReg package github.","code":"#install.packages(\"devtools\") devtools::install_github(\"cardiomoon/autoReg\")"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"load-package","dir":"Articles","previous_headings":"","what":"Load package","title":"Automatic Regression Modeling","text":"load package, use library() function.","code":"library(autoReg) library(dplyr)  Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"linear-model-with-multiple-variables","dir":"Articles","previous_headings":"","what":"Linear model with multiple variables","title":"Automatic Regression Modeling","text":"package autoReg aims automatic selection explanatory variables regression models. Let’s begin famous mtcars data. select mpg(miles per gallon) dependent variable select wt(weight), hp(horse power) (transmission, 0=automatic, 1=manual) explanatory variables included possible interaction. autoReg() function make table summarizing result analysis. can make publication-ready table easily using myft(). makes flextable object can use HTML, PDF, microsoft word powerpoint file. Dependent: mpg  unit value Coefficient (multivariable) wt [1.5,5.4] Mean ± SD 3.2 ± 1.0 -4.80 (-13.06 3.46, p=.242) hp [52,335] Mean ± SD 146.7 ± 68.6 -0.09 (-0.22 0.04, p=.183) [0,1] Mean ± SD 0.4 ± 0.5 12.84 (-16.52 42.19, p=.376) wt:hp    0.01 (-0.03 0.05, p=.458) wt:   -5.36 (-14.85 4.13, p=.255) hp:   -0.03 (-0.22 0.15, p=.717) wt:hp::   0.02 (-0.04 0.07, p=.503) result multivariable analysis, found explanatory variable significant.","code":"fit=lm(mpg~wt*hp*am,data=mtcars) autoReg(fit)  —————————————————————————————————————————————————————————————————————————————————————  Dependent: mpg               unit        value        Coefficient (multivariable)     ————————————————————————————————————————————————————————————————————————————————————— wt              [1.5,5.4]    Mean ± SD     3.2 ± 1.0   -4.80 (-13.06 to 3.46, p=.242)  hp              [52,335]     Mean ± SD  146.7 ± 68.6    -0.09 (-0.22 to 0.04, p=.183)  am              [0,1]        Mean ± SD     0.4 ± 0.5  12.84 (-16.52 to 42.19, p=.376)  wt:hp                                                    0.01 (-0.03 to 0.05, p=.458)  wt:am                                                  -5.36 (-14.85 to 4.13, p=.255)  hp:am                                                   -0.03 (-0.22 to 0.15, p=.717)  wt:hp:am        :                                        0.02 (-0.04 to 0.07, p=.503)  ————————————————————————————————————————————————————————————————————————————————————— autoReg(fit) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"selection-of-explanatory-variable-from-univariable-model","dir":"Articles","previous_headings":"Linear model with multiple variables","what":"Selection of explanatory variable from univariable model","title":"Automatic Regression Modeling","text":"can start univariable model. list univariable model, can select potentially significant explanatory variable(p value 0.2 example). autoReg() function automatically select univariable model given p value threshold(default value 0.2). Dependent: mpg  unit value Coefficient (univariable) Coefficient (multivariable) wt [1.5,5.4] Mean ± SD 3.2 ± 1.0 -5.34 (-6.49 -4.20, p<.001) -7.50 (-13.21 -1.80, p=.012) hp [52,335] Mean ± SD 146.7 ± 68.6 -0.07 (-0.09 -0.05, p<.001) -0.11 (-0.20 -0.02, p=.022) [0,1] Mean ± SD 0.4 ± 0.5 7.24 (3.64 10.85, p<.001) 1.91 (-11.29 15.10, p=.769) wt:hp    -0.01 (-0.02 -0.01, p<.001) 0.02 (-0.00 0.05, p=.072) wt:   1.89 (0.25 3.52, p=.025) -0.60 (-4.92 3.73, p=.778) hp:   0.01 (-0.02 0.04, p=.452)  wt:hp::   -0.00 (-0.01 0.01, p=.982)  can see table, coefficients hp:(interaction hp ) wt:hp:(interaction wt hp ) p-values 0.2. variables excluded remaining variables used multivariable model. want use explanatory variables multivariable model, set threshold 1.","code":"autoReg(fit,uni=TRUE, threshold=0.2) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"stepwise-backward-elimination","dir":"Articles","previous_headings":"Linear model with multiple variables","what":"Stepwise backward elimination","title":"Automatic Regression Modeling","text":"multivariable model, can perform stepwise backward elimination step() function. can perform univariable analysis variable selection, multivariable analysis stepwise backward elimination one step. Dependent: mpg  unit value Coefficient (univariable) Coefficient (multivariable) Coefficient (final) hp [52,335] Mean ± SD 146.7 ± 68.6 -0.07 (-0.09 -0.05, p<.001) -0.11 (-0.20 -0.02, p=.022) -0.12 (-0.17 -0.07, p<.001) wt [1.5,5.4] Mean ± SD 3.2 ± 1.0 -5.34 (-6.49 -4.20, p<.001) -7.50 (-13.21 -1.80, p=.012) -8.22 (-10.82 -5.62, p<.001) [0,1] Mean ± SD 0.4 ± 0.5 7.24 (3.64 10.85, p<.001) 1.91 (-11.29 15.10, p=.769)  hp:wt    -0.01 (-0.02 -0.01, p<.001) 0.02 (-0.00 0.05, p=.072) 0.03 (0.01 0.04, p<.001) hp:   0.01 (-0.02 0.04, p=.452)   wt:   1.89 (0.25 3.52, p=.025) -0.60 (-4.92 3.73, p=.778)  hp:wt::   -0.00 (-0.01 0.01, p=.982)","code":"fit=lm(mpg~hp+wt+am+wt:hp+wt:am,data=mtcars) final=step(fit,trace=0) summary(final)  Call: lm(formula = mpg ~ hp + wt + hp:wt, data = mtcars)  Residuals:     Min      1Q  Median      3Q     Max  -3.0632 -1.6491 -0.7362  1.4211  4.5513   Coefficients:             Estimate Std. Error t value Pr(>|t|)     (Intercept) 49.80842    3.60516  13.816 5.01e-14 *** hp          -0.12010    0.02470  -4.863 4.04e-05 *** wt          -8.21662    1.26971  -6.471 5.20e-07 *** hp:wt        0.02785    0.00742   3.753 0.000811 *** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  Residual standard error: 2.153 on 28 degrees of freedom Multiple R-squared:  0.8848,    Adjusted R-squared:  0.8724  F-statistic: 71.66 on 3 and 28 DF,  p-value: 2.981e-13 fit=lm(mpg~hp*wt*am,data=mtcars) autoReg(fit,uni=TRUE,final=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"linear-model-with-interaction-between-categorical-variable","dir":"Articles","previous_headings":"","what":"Linear model with interaction between categorical variable","title":"Automatic Regression Modeling","text":"can use autoReg() function models interaction categorical variable(s). Dependent: Sepal.Length  unit value Coefficient (univariable) Coefficient (multivariable) Coefficient (final) Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 -0.22 (-0.53 0.08, p=.152) 0.69 (0.36 1.02, p<.001) 0.80 (0.59 1.01, p<.001) Species setosa     (N=50) Mean ± SD 5.0 ± 0.4     versicolor (N=50) Mean ± SD 5.9 ± 0.5 0.93 (0.73 1.13, p<.001) 0.90 (-0.68 2.48, p=.261) 1.46 (1.24 1.68, p<.001)  virginica  (N=50) Mean ± SD 6.6 ± 0.6 1.58 (1.38 1.79, p<.001) 1.27 (-0.35 2.88, p=.123) 1.95 (1.75 2.14, p<.001) Sepal.Width:Species setosa   0.48 (0.29 0.67, p<.001)   Sepal.Width:Species versicolor   0.93 (0.69 1.17, p<.001) 0.17 (-0.34 0.69, p=.503)  Sepal.Width:Species virginica   1.08 (0.86 1.30, p<.001) 0.21 (-0.29 0.72, p=.411)","code":"fit=lm(Sepal.Length~Sepal.Width*Species,data=iris) autoReg(fit,uni=TRUE, final=TRUE) %>% myft()"},{"path":[]},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"original-data","dir":"Articles","previous_headings":"Missing data - automatic multiple imputation","what":"Original data","title":"Automatic Regression Modeling","text":"Let us think linear regression model iris data. model, Sepal.Length dependent variable Sepal.Width Species explanatory variables. can make table summarizing result follows. name levels unit value Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 Species setosa     (N=50) Mean ± SD 5.0 ± 0.4  versicolor (N=50) Mean ± SD 5.9 ± 0.5  virginica  (N=50) Mean ± SD 6.6 ± 0.6 name levels unit value Coefficient (original data) Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 0.80 (0.59 1.01, p<.001) Species setosa     (N=50) Mean ± SD 5.0 ± 0.4   versicolor (N=50) Mean ± SD 5.9 ± 0.5 1.46 (1.24 1.68, p<.001)  virginica  (N=50) Mean ± SD 6.6 ± 0.6 1.95 (1.75 2.14, p<.001)","code":"df=gaze(Sepal.Length~Sepal.Width+Species,data=iris) df %>% myft() fit=lm(Sepal.Length~Sepal.Width+Species,data=iris) df=addFitSummary(df,fit,\"Coefficient (original data)\") df %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"missed-data","dir":"Articles","previous_headings":"Missing data - automatic multiple imputation","what":"Missed data","title":"Automatic Regression Modeling","text":"simulation MCAR(missing completely random) data, one third Sepal.Width records replace NA(missing). want perform missing data analysis, use gaze() function missing=TRUE. Dependent:Sepal.Width levels missing (N=100) Missing (N=50) p Sepal.Length Mean ± SD 5.8 ± 0.8 5.8 ± 0.9 .939 Petal.Length Mean ± SD 3.8 ± 1.7 3.7 ± 1.9 .899 Petal.Width Mean ± SD 1.2 ± 0.8 1.2 ± 0.8 .608 Species setosa 31 (31%) 19 (38%) .677  versicolor 35 (35%) 15 (30%)   virginica 34 (34%) 16 (32%)  analysis data. name levels unit value Coefficient (original data) Coefficient (missed data) Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 0.80 (0.59 1.01, p<.001) 0.85 (0.59 1.10, p<.001) Species setosa     (N=50) Mean ± SD 5.0 ± 0.4    versicolor (N=50) Mean ± SD 5.9 ± 0.5 1.46 (1.24 1.68, p<.001) 1.54 (1.28 1.81, p<.001)  virginica  (N=50) Mean ± SD 6.6 ± 0.6 1.95 (1.75 2.14, p<.001) 1.92 (1.68 2.15, p<.001)","code":"iris1=iris set.seed=123 no=sample(1:150,50,replace=FALSE) iris1$Sepal.Width[no]=NA gaze(Sepal.Width~.,data=iris1,missing=TRUE) %>% myft() fit1=lm(Sepal.Length~Sepal.Width+Species,data=iris1) df=addFitSummary(df,fit1,\"Coefficient (missed data)\") df %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Automatic_Regression_Modeling.html","id":"multiple-imputation","dir":"Articles","previous_headings":"Missing data - automatic multiple imputation","what":"Multiple imputation","title":"Automatic Regression Modeling","text":"can multiple imputation using imputedReg() function. function perform multiple imputation using mice() function mice package. default value number multiple imputation 20. can adjust number m argument. can set random number generator seed argument. name levels unit value Coefficient (original data) Coefficient (missed data) Coefficient (imputed) Sepal.Width [2,4.4] Mean ± SD 3.1 ± 0.4 0.80 (0.59 1.01, p<.001) 0.85 (0.59 1.10, p<.001) 0.90 (0.64 1.16, p<.001) Species setosa     (N=50) Mean ± SD 5.0 ± 0.4     versicolor (N=50) Mean ± SD 5.9 ± 0.5 1.46 (1.24 1.68, p<.001) 1.54 (1.28 1.81, p<.001) 1.55 (1.31 1.79, p<.001)  virginica  (N=50) Mean ± SD 6.6 ± 0.6 1.95 (1.75 2.14, p<.001) 1.92 (1.68 2.15, p<.001) 2.01 (1.81 2.22, p<.001) can make plot summarizing models modelPlot() function.","code":"fit2=imputedReg(fit1, m=20,seed=1234) df=addFitSummary(df,fit2,statsname=\"Coefficient (imputed)\") df %>% myft() modelPlot(fit1,imputed=TRUE)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started","text":"can install autoReg package github.","code":"#install.packages(\"devtools\") devtools::install_github(\"cardiomoon/autoReg\")"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"load-package","dir":"Articles","previous_headings":"","what":"Load package","title":"Getting started","text":"load package, use library() function.","code":"library(autoReg)"},{"path":[]},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"summarizing-baseline-characteristics-gaze","dir":"Articles","previous_headings":"Main features","what":"1.Summarizing baseline characteristics : gaze()","title":"Getting started","text":"can make table summarizing baseline characteristics easily.","code":"library(moonBook) # For use of example data acs gaze(sex~.,data=acs) ————————————————————————————————————————————————————————————————————————   Dependent:sex        levels           Female          Male        p           (N)                             (N=287)        (N=570)            ———————————————————————————————————————————————————————————————————————— age               Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  cardiogenicShock  No                    275 (95.8%)     530 (93%)   .136                    Yes                     12 (4.2%)       40 (7%)         entry             Femoral               119 (41.5%)   193 (33.9%)   .035                    Radial                168 (58.5%)   377 (66.1%)         Dx                NSTEMI                 50 (17.4%)   103 (18.1%)   .012                    STEMI                  84 (29.3%)   220 (38.6%)                           Unstable Angina       153 (53.3%)   247 (43.3%)         EF                Mean ± SD             56.3 ± 10.1    55.6 ± 9.4   .387  height            Mean ± SD             153.8 ± 6.2   167.9 ± 6.1  <.001  weight            Mean ± SD              57.2 ± 9.3   68.7 ± 10.3  <.001  BMI               Mean ± SD              24.2 ± 3.6    24.3 ± 3.2   .611  obesity           No                    194 (67.6%)   373 (65.4%)   .580                    Yes                    93 (32.4%)   197 (34.6%)         TC                Mean ± SD            188.9 ± 51.1  183.3 ± 45.9   .124  LDLC              Mean ± SD            117.8 ± 41.2  116.0 ± 41.1   .561  HDLC              Mean ± SD             39.0 ± 11.5   37.8 ± 10.9   .145  TG                Mean ± SD            119.9 ± 76.2  127.9 ± 97.3   .195  DM                No                    173 (60.3%)   380 (66.7%)   .077                    Yes                   114 (39.7%)   190 (33.3%)         HBP               No                     83 (28.9%)   273 (47.9%)  <.001                    Yes                   204 (71.1%)   297 (52.1%)         smoking           Ex-smoker              49 (17.1%)   155 (27.2%)  <.001                    Never                 209 (72.8%)   123 (21.6%)                           Smoker                 29 (10.1%)   292 (51.2%)         ————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"for-easy-reproducible-research-myft","dir":"Articles","previous_headings":"Main features","what":"For easy reproducible research : myft()","title":"Getting started","text":"can make publication-ready table easily using myft(). makes flextable object can use either HTML PDF format. name levels Female (N=287) Male (N=570) p age Mean ± SD 68.7 ± 10.7 60.6 ± 11.2 <.001 cardiogenicShock 275 (95.8%) 530 (93%) .136  Yes 12 (4.2%) 40 (7%)  entry Femoral 119 (41.5%) 193 (33.9%) .035  Radial 168 (58.5%) 377 (66.1%)  Dx NSTEMI 50 (17.4%) 103 (18.1%) .012  STEMI 84 (29.3%) 220 (38.6%)   Unstable Angina 153 (53.3%) 247 (43.3%)  EF Mean ± SD 56.3 ± 10.1 55.6 ± 9.4 .387 height Mean ± SD 153.8 ± 6.2 167.9 ± 6.1 <.001 weight Mean ± SD 57.2 ± 9.3 68.7 ± 10.3 <.001 BMI Mean ± SD 24.2 ± 3.6 24.3 ± 3.2 .611 obesity 194 (67.6%) 373 (65.4%) .580  Yes 93 (32.4%) 197 (34.6%)  TC Mean ± SD 188.9 ± 51.1 183.3 ± 45.9 .124 LDLC Mean ± SD 117.8 ± 41.2 116.0 ± 41.1 .561 HDLC Mean ± SD 39.0 ± 11.5 37.8 ± 10.9 .145 TG Mean ± SD 119.9 ± 76.2 127.9 ± 97.3 .195 DM 173 (60.3%) 380 (66.7%) .077  Yes 114 (39.7%) 190 (33.3%)  HBP 83 (28.9%) 273 (47.9%) <.001  Yes 204 (71.1%) 297 (52.1%)  smoking Ex-smoker 49 (17.1%) 155 (27.2%) <.001  Never 209 (72.8%) 123 (21.6%)   Smoker 29 (10.1%) 292 (51.2%)  can also make powerpoint file using rrtable::table2pptx() function. can make microsoft word file using rrtable::table2docx() function.","code":"library(dplyr) # for use of `%>%`  Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union ft=gaze(sex~.,data=acs) %>% myft() ft library(rrtable)  table2pptx(ft) Exported table as Report.pptx table2docx(ft) Exported table as Report.docx"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"summarizing-baseline-characteristics-with-two-or-more-grouping-variables","dir":"Articles","previous_headings":"Main features","what":"Summarizing baseline characteristics with two or more grouping variables","title":"Getting started","text":"can get table summarizing baseline characteristics two grouping variables. sex (N) Female (N=287) Male (N=570) name levels NSTEMI (N=50) STEMI (N=84) Unstable Angina (N=153) p NSTEMI (N=103) STEMI (N=220) Unstable Angina (N=247) p age Mean ± SD 70.9 ± 11.4 69.1 ± 10.4 67.7 ± 10.7 .177 61.1 ± 11.6 59.4 ± 11.7 61.4 ± 10.6 .133 cardiogenicShock 49 (98%) 73 (86.9%) 153 (100%) <.001 100 (97.1%) 183 (83.2%) 247 (100%) <.001  Yes 1 (2%) 11 (13.1%) 0 (0%)  3 (2.9%) 37 (16.8%) 0 (0%)  entry Femoral 22 (44%) 45 (53.6%) 52 (34%) .013 36 (35%) 88 (40%) 69 (27.9%) .022  Radial 28 (56%) 39 (46.4%) 101 (66%)  67 (65%) 132 (60%) 178 (72.1%)  EF Mean ± SD 54.8 ± 9.1 52.3 ± 10.9 59.4 ± 8.8 <.001 55.1 ± 9.4 52.4 ± 8.9 59.1 ± 8.7 <.001 height Mean ± SD 154.2 ± 5.1 155.7 ± 5.4 152.6 ± 6.7 .002 167.5 ± 5.7 168.7 ± 6.0 167.3 ± 6.4 .055 weight Mean ± SD 57.2 ± 10.3 57.4 ± 9.0 57.1 ± 9.1 .978 67.5 ± 8.4 68.8 ± 10.9 69.0 ± 10.6 .479 BMI Mean ± SD 24.1 ± 4.3 23.6 ± 3.2 24.5 ± 3.5 .215 24.1 ± 2.6 24.1 ± 3.4 24.6 ± 3.4 .205 obesity 35 (70%) 60 (71.4%) 99 (64.7%) .528 71 (68.9%) 149 (67.7%) 153 (61.9%) .301  Yes 15 (30%) 24 (28.6%) 54 (35.3%)  32 (31.1%) 71 (32.3%) 94 (38.1%)  TC Mean ± SD 196.3 ± 52.7 180.7 ± 45.7 191.1 ± 53.1 .192 192.6 ± 54.3 184.1 ± 42.6 178.7 ± 44.6 .036 LDLC Mean ± SD 127.7 ± 39.5 111.0 ± 40.0 118.3 ± 41.8 .088 125.4 ± 47.1 118.9 ± 39.1 109.5 ± 39.2 .002 HDLC Mean ± SD 40.1 ± 13.8 39.5 ± 11.2 38.5 ± 10.8 .627 38.4 ± 10.9 38.1 ± 10.9 37.4 ± 10.9 .655 TG Mean ± SD 112.5 ± 51.1 112.3 ± 87.2 126.3 ± 76.0 .316 138.0 ± 100.2 104.3 ± 65.5 144.3 ± 114.2 <.001 DM 25 (50%) 54 (64.3%) 94 (61.4%) .240 71 (68.9%) 154 (70%) 155 (62.8%) .219  Yes 25 (50%) 30 (35.7%) 59 (38.6%)  32 (31.1%) 66 (30%) 92 (37.2%)  HBP 19 (38%) 28 (33.3%) 36 (23.5%) .084 43 (41.7%) 122 (55.5%) 108 (43.7%) .016  Yes 31 (62%) 56 (66.7%) 117 (76.5%)  60 (58.3%) 98 (44.5%) 139 (56.3%)  smoking Ex-smoker 8 (16%) 13 (15.5%) 28 (18.3%) .184 34 (33%) 53 (24.1%) 68 (27.5%) .002  Never 37 (74%) 57 (67.9%) 115 (75.2%)  13 (12.6%) 40 (18.2%) 70 (28.3%)   Smoker 5 (10%) 14 (16.7%) 10 (6.5%)  56 (54.4%) 127 (57.7%) 109 (44.1%)  can also use three grouping variables.resultant table long review, can try. sexDM(N) FemaleNo(N=173) FemaleYes(N=114) MaleNo(N=380) MaleYes(N=190) name levels (N=54) Yes (N=119) p (N=29) Yes (N=85) p (N=205) Yes (N=175) p (N=68) Yes (N=122) p age Mean ± SD 68.5 ± 14.2 69.6 ± 9.9 .589 67.1 ± 7.8 68.0 ± 10.3 .660 57.7 ± 11.5 64.5 ± 10.4 <.001 56.9 ± 10.4 61.9 ± 10.3 .002","code":"gaze(sex+Dx~.,data=acs) %>% myft() gaze(sex+DM+HBP~age,data=acs) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"for-automatic-selection-of-explanatory-variables-autoreg","dir":"Articles","previous_headings":"Main features","what":"2. For automatic selection of explanatory variables : autoReg()","title":"Getting started","text":"can make table summarizing results regression analysis. example, let us perform logistic regression colon cancer data. can make table result. can make publication-ready table. Dependent: status  0 (N=925) 1 (N=897) (multivariable) rx Obs 282 (30.5%) 342 (38.1%)   Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) sex Mean ± SD 0.5 ± 0.5 0.5 ± 0.5 0.95 (0.78-1.15, p=.589) age Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) obstruct Mean ± SD 0.2 ± 0.4 0.2 ± 0.4 1.33 (1.04-1.70, p=.023) perfor Mean ± SD 0.0 ± 0.2 0.0 ± 0.2 1.38 (0.78-2.47, p=.274) nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.26, p<.001) want make table explanation, can make categorical variables numeric variables. example, explanatory variables obstruct(obstruction colon tumor) perfor(perforation colon) coded 0 1, “” “Yes” actually. Also dependent variable status coded 0 1, “Alive” “Died”. Dependent: status.factor  Alive (N=925) Died (N=897) (multivariable) rx Obs 282 (30.5%) 342 (38.1%)   Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) sex.factor Female 436 (47.1%) 434 (48.4%)   Male 489 (52.9%) 463 (51.6%) 0.95 (0.78-1.15, p=.589) age Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) obstruct.factor 764 (82.6%) 706 (78.7%)   Yes 161 (17.4%) 191 (21.3%) 1.33 (1.04-1.70, p=.023) perfor.factor 903 (97.6%) 865 (96.4%)   Yes 22 (2.4%) 32 (3.6%) 1.38 (0.78-2.47, p=.274) nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.26, p<.001) can add labels names variables setLabel() function. Dependent: Mortality  Alive (N=925) Died (N=897) (multivariable) Treatment Obs 282 (30.5%) 342 (38.1%)   Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)   Male 489 (52.9%) 463 (51.6%) 0.95 (0.78-1.15, p=.589) Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) Obstruction 764 (82.6%) 706 (78.7%)   Yes 161 (17.4%) 191 (21.3%) 1.33 (1.04-1.70, p=.023) Perforation 903 (97.6%) 865 (96.4%)   Yes 22 (2.4%) 32 (3.6%) 1.38 (0.78-2.47, p=.274) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.26, p<.001) want show reference values table, can shorten table. Dependent: Mortality  Alive (N=925) Died (N=897) (multivariable) Treatment Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) Sex Male 489 (52.9%) 463 (51.6%) 0.95 (0.78-1.15, p=.589) Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) Obstruction Yes 161 (17.4%) 191 (21.3%) 1.33 (1.04-1.70, p=.023) Perforation Yes 22 (2.4%) 32 (3.6%) 1.38 (0.78-2.47, p=.274) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.26, p<.001)","code":"library(survival)   # For use of data colon data(cancer)    fit=glm(status~rx+sex+age+obstruct+perfor+nodes,data=colon,family=\"binomial\") summary(fit)  Call: glm(formula = status ~ rx + sex + age + obstruct + perfor + nodes,      family = \"binomial\", data = colon)  Deviance Residuals:      Min       1Q   Median       3Q      Max   -2.4950  -1.0594  -0.7885   1.1619   1.6424    Coefficients:              Estimate Std. Error z value Pr(>|z|)     (Intercept) -0.645417   0.285558  -2.260   0.0238 *   rxLev       -0.067422   0.118907  -0.567   0.5707     rxLev+5FU   -0.627480   0.121684  -5.157 2.51e-07 *** sex         -0.053541   0.098975  -0.541   0.5885     age          0.002307   0.004234   0.545   0.5859     obstruct     0.283703   0.125194   2.266   0.0234 *   perfor       0.319281   0.292034   1.093   0.2743     nodes        0.190563   0.018255  10.439  < 2e-16 *** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  (Dispersion parameter for binomial family taken to be 1)      Null deviance: 2525.4  on 1821  degrees of freedom Residual deviance: 2342.4  on 1814  degrees of freedom   (36 observations deleted due to missingness) AIC: 2358.4  Number of Fisher Scoring iterations: 4 autoReg(fit) ——————————————————————————————————————————————————————————————————————————————————  Dependent: status              0 (N=925)    1 (N=897)      OR (multivariable)      —————————————————————————————————————————————————————————————————————————————————— rx                 Obs          282 (30.5%)  342 (38.1%)                                               Lev          285 (30.8%)    323 (36%)  0.93 (0.74-1.18, p=.571)                     Lev+5FU      358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  sex                Mean ± SD      0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  age                Mean ± SD    60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.586)  obstruct           Mean ± SD      0.2 ± 0.4    0.2 ± 0.4  1.33 (1.04-1.70, p=.023)  perfor             Mean ± SD      0.0 ± 0.2    0.0 ± 0.2  1.38 (0.78-2.47, p=.274)  nodes              Mean ± SD      2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.26, p<.001)  —————————————————————————————————————————————————————————————————————————————————— autoReg(fit) %>% myft() colon$status.factor=factor(colon$status,labels=c(\"Alive\",\"Died\")) colon$obstruct.factor=factor(colon$obstruct,labels=c(\"No\",\"Yes\")) colon$perfor.factor=factor(colon$perfor,labels=c(\"No\",\"Yes\")) colon$sex.factor=factor(colon$sex,labels=c(\"Female\",\"Male\"))  fit=glm(status.factor~rx+sex.factor+age+obstruct.factor+perfor.factor+nodes,data=colon,family=\"binomial\") result=autoReg(fit)  result %>% myft() colon$status.factor=setLabel(colon$status.factor,\"Mortality\") colon$rx=setLabel(colon$rx,\"Treatment\") colon$age=setLabel(colon$age,\"Age(Years)\") colon$sex.factor=setLabel(colon$sex.factor,\"Sex\") colon$obstruct.factor=setLabel(colon$obstruct.factor,\"Obstruction\") colon$perfor.factor=setLabel(colon$perfor.factor,\"Perforation\") colon$nodes=setLabel(colon$nodes,\"Positive nodes\")  fit=glm(status.factor~rx+sex.factor+age+obstruct.factor+perfor.factor+nodes,data=colon,family=\"binomial\") result=autoReg(fit)  result %>% myft() shorten(result) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"add-univariate-models-to-table-and-automatic-selection-of-explanatory-variables","dir":"Articles","previous_headings":"Main features","what":"Add univariate models to table and automatic selection of explanatory variables","title":"Getting started","text":"can add results univariate analyses table. time, autoReg() function automatically select explanatory variables threshold(default value 0.2) perform multivariate analysis. table, p values explanatory variables sex.factor age default threshold(0.2), excluded multivariate model. Dependent: Mortality  Alive (N=925) Died (N=897) (univariable) (multivariable) Treatment Obs 282 (30.5%) 342 (38.1%)    Lev 285 (30.8%) 323 (36%) 0.93 (0.75-1.17, p=.554) 0.93 (0.74-1.18, p=.570)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.67, p<.001) 0.54 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)    Male 489 (52.9%) 463 (51.6%) 0.95 (0.79-1.14, p=.594)  Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.00, p=.305)  Obstruction 764 (82.6%) 706 (78.7%)    Yes 161 (17.4%) 191 (21.3%) 1.28 (1.02-1.62, p=.036) 1.32 (1.04-1.69, p=.025) Perforation 903 (97.6%) 865 (96.4%)    Yes 22 (2.4%) 32 (3.6%) 1.52 (0.88-2.67, p=.137) 1.38 (0.78-2.47, p=.273) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001) 1.21 (1.17-1.25, p<.001) want include explanatory variables multivariate model, just set threshold 1. Dependent: Mortality  Alive (N=925) Died (N=897) (univariable) (multivariable) Treatment Obs 282 (30.5%) 342 (38.1%)    Lev 285 (30.8%) 323 (36%) 0.93 (0.75-1.17, p=.554) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.67, p<.001) 0.53 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)    Male 489 (52.9%) 463 (51.6%) 0.95 (0.79-1.14, p=.594) 0.95 (0.78-1.15, p=.589) Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.00, p=.305) 1.00 (0.99-1.01, p=.586) Obstruction 764 (82.6%) 706 (78.7%)    Yes 161 (17.4%) 191 (21.3%) 1.28 (1.02-1.62, p=.036) 1.33 (1.04-1.70, p=.023) Perforation 903 (97.6%) 865 (96.4%)    Yes 22 (2.4%) 32 (3.6%) 1.52 (0.88-2.67, p=.137) 1.38 (0.78-2.47, p=.274) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001) 1.21 (1.17-1.26, p<.001) can perform stepwise backward elimination select variables make final model. Just set final=TRUE. Dependent: Mortality  Alive (N=925) Died (N=897) (univariable) (multivariable) (final) Treatment Obs 282 (30.5%) 342 (38.1%)     Lev 285 (30.8%) 323 (36%) 0.93 (0.75-1.17, p=.554) 0.93 (0.74-1.18, p=.571) 0.94 (0.74-1.18, p=.575)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.67, p<.001) 0.53 (0.42-0.68, p<.001) 0.54 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)     Male 489 (52.9%) 463 (51.6%) 0.95 (0.79-1.14, p=.594) 0.95 (0.78-1.15, p=.589)  Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.00, p=.305) 1.00 (0.99-1.01, p=.586)  Obstruction 764 (82.6%) 706 (78.7%)     Yes 161 (17.4%) 191 (21.3%) 1.28 (1.02-1.62, p=.036) 1.33 (1.04-1.70, p=.023) 1.34 (1.05-1.71, p=.019) Perforation 903 (97.6%) 865 (96.4%)     Yes 22 (2.4%) 32 (3.6%) 1.52 (0.88-2.67, p=.137) 1.38 (0.78-2.47, p=.274)  Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.25, p<.001) 1.21 (1.17-1.26, p<.001) 1.21 (1.17-1.25, p<.001)","code":"autoReg(fit, uni=TRUE) %>% myft() autoReg(fit, uni=TRUE,threshold=1) %>% myft() autoReg(fit, uni=TRUE,threshold=1, final=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"multiple-imputation-with-mice","dir":"Articles","previous_headings":"Main features > Add univariate models to table and automatic selection of explanatory variables","what":"Multiple imputation with mice()","title":"Getting started","text":"argument imputed=TRUE, autoReg() function make multiple imputed model using mice::mice() function. default, 20 imputations performed. want, can change number imputations m argument. Dependent: Mortality  Alive (N=925) Died (N=897) (multivariable) (imputed) Treatment Obs 282 (30.5%) 342 (38.1%)    Lev 285 (30.8%) 323 (36%) 0.93 (0.74-1.18, p=.571) 0.93 (0.74-1.18, p=.571)  Lev+5FU 358 (38.7%) 232 (25.9%) 0.53 (0.42-0.68, p<.001) 0.53 (0.42-0.68, p<.001) Sex Female 436 (47.1%) 434 (48.4%)    Male 489 (52.9%) 463 (51.6%) 0.95 (0.78-1.15, p=.589) 0.95 (0.78-1.15, p=.589) Age(Years) Mean ± SD 60.1 ± 11.5 59.5 ± 12.3 1.00 (0.99-1.01, p=.586) 1.00 (0.99-1.01, p=.586) Obstruction 764 (82.6%) 706 (78.7%)    Yes 161 (17.4%) 191 (21.3%) 1.33 (1.04-1.70, p=.023) 1.33 (1.04-1.70, p=.024) Perforation 903 (97.6%) 865 (96.4%)    Yes 22 (2.4%) 32 (3.6%) 1.38 (0.78-2.47, p=.274) 1.38 (0.78-2.44, p=.274) Positive nodes Mean ± SD 2.7 ± 2.4 4.6 ± 4.2 1.21 (1.17-1.26, p<.001) 1.21 (1.17-1.25, p<.001)","code":"autoReg(fit, imputed=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Getting_started.html","id":"summarize-regression-model-results-in-a-plot-modelplot","dir":"Articles","previous_headings":"Main features","what":"Summarize regression model results in a plot : modelPlot()","title":"Getting started","text":"can draw plot summarizing model modelPlot()  can make powerpoint file plot using rrtable::plot2pptx(). can summarize models plot. want summarize univariate multivariate model plot, just set uni=TRUE adjust threshold. can decide whether show reference show.ref argument.","code":"x=modelPlot(fit) x plot2pptx(print(x)) Exported plot as Report.pptx modelPlot(fit,uni=TRUE,threshold=1,show.ref=FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"loading-package","dir":"Articles","previous_headings":"","what":"Loading package","title":"Statistical tests in gaze","text":"","code":"library(autoReg) library(dplyr) # for use of pipe operator `%>%`  Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"statistical-tests-for-numeric-variables","dir":"Articles","previous_headings":"","what":"Statistical tests for numeric variables","title":"Statistical tests in gaze","text":"gaze() function autoReg package perform statistical tests compare means /among groups. acs data included moonBook package dataset containing demographic laboratory data 857 patients acute coronary syndrome(ACS). make table comparing baseline characteristics, use gaze() function. can make publication-ready table myft() function can used HTML, pdf, microsoft word powerpoint file. name levels Female (N=287) Male (N=570) p age Mean ± SD 68.7 ± 10.7 60.6 ± 11.2 <.001 cardiogenicShock 275 (95.8%) 530 (93%) .136  Yes 12 (4.2%) 40 (7%)  entry Femoral 119 (41.5%) 193 (33.9%) .035  Radial 168 (58.5%) 377 (66.1%)  Dx NSTEMI 50 (17.4%) 103 (18.1%) .012  STEMI 84 (29.3%) 220 (38.6%)   Unstable Angina 153 (53.3%) 247 (43.3%)  EF Mean ± SD 56.3 ± 10.1 55.6 ± 9.4 .387 height Mean ± SD 153.8 ± 6.2 167.9 ± 6.1 <.001 weight Mean ± SD 57.2 ± 9.3 68.7 ± 10.3 <.001 BMI Mean ± SD 24.2 ± 3.6 24.3 ± 3.2 .611 obesity 194 (67.6%) 373 (65.4%) .580  Yes 93 (32.4%) 197 (34.6%)  TC Mean ± SD 188.9 ± 51.1 183.3 ± 45.9 .124 LDLC Mean ± SD 117.8 ± 41.2 116.0 ± 41.1 .561 HDLC Mean ± SD 39.0 ± 11.5 37.8 ± 10.9 .145 TG Mean ± SD 119.9 ± 76.2 127.9 ± 97.3 .195 DM 173 (60.3%) 380 (66.7%) .077  Yes 114 (39.7%) 190 (33.3%)  HBP 83 (28.9%) 273 (47.9%) <.001  Yes 204 (71.1%) 297 (52.1%)  smoking Ex-smoker 49 (17.1%) 155 (27.2%) <.001  Never 209 (72.8%) 123 (21.6%)   Smoker 29 (10.1%) 292 (51.2%)  can select statistical method comparing means /among groups argument method. Possible values methods : 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1.","code":"data(acs, package=\"moonBook\") gaze(sex~.,data=acs) ————————————————————————————————————————————————————————————————————————   Dependent:sex        levels           Female          Male        p           (N)                             (N=287)        (N=570)            ———————————————————————————————————————————————————————————————————————— age               Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  cardiogenicShock  No                    275 (95.8%)     530 (93%)   .136                    Yes                     12 (4.2%)       40 (7%)         entry             Femoral               119 (41.5%)   193 (33.9%)   .035                    Radial                168 (58.5%)   377 (66.1%)         Dx                NSTEMI                 50 (17.4%)   103 (18.1%)   .012                    STEMI                  84 (29.3%)   220 (38.6%)                           Unstable Angina       153 (53.3%)   247 (43.3%)         EF                Mean ± SD             56.3 ± 10.1    55.6 ± 9.4   .387  height            Mean ± SD             153.8 ± 6.2   167.9 ± 6.1  <.001  weight            Mean ± SD              57.2 ± 9.3   68.7 ± 10.3  <.001  BMI               Mean ± SD              24.2 ± 3.6    24.3 ± 3.2   .611  obesity           No                    194 (67.6%)   373 (65.4%)   .580                    Yes                    93 (32.4%)   197 (34.6%)         TC                Mean ± SD            188.9 ± 51.1  183.3 ± 45.9   .124  LDLC              Mean ± SD            117.8 ± 41.2  116.0 ± 41.1   .561  HDLC              Mean ± SD             39.0 ± 11.5   37.8 ± 10.9   .145  TG                Mean ± SD            119.9 ± 76.2  127.9 ± 97.3   .195  DM                No                    173 (60.3%)   380 (66.7%)   .077                    Yes                   114 (39.7%)   190 (33.3%)         HBP               No                     83 (28.9%)   273 (47.9%)  <.001                    Yes                   204 (71.1%)   297 (52.1%)         smoking           Ex-smoker              49 (17.1%)   155 (27.2%)  <.001                    Never                 209 (72.8%)   123 (21.6%)                           Smoker                 29 (10.1%)   292 (51.2%)         ———————————————————————————————————————————————————————————————————————— gaze(sex~.,data=acs) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"comparison-of-two-groups","dir":"Articles","previous_headings":"Statistical tests for numeric variables","what":"1. Comparison of two groups","title":"Statistical tests in gaze","text":"Ejection fraction(EF) refers well left ventricle (right ventricle) pumps blood heart beat. normal values approximately 56-78%.","code":""},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"parametric-method","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 1. Comparison of two groups","what":"(1) Parametric method","title":"Statistical tests in gaze","text":"want compare EF means males females acs data parametric method, compare variances two samples. variances two groups equal, pooled variance used estimate variance. Otherwise Welch (Satterthwaite) approximation degrees freedom used. result var.test significant. reject null hypothesis :\\(H_0 : true\\  ratio\\  \\  variance\\ \\  equal\\  \\  0\\). result, perform t-test using pooled variance. result t.test significant(\\(p=.387\\)). p value table result test. Alternatively, result var.test() significant, perform t.test Welch approximation degrees freedom.","code":"gaze(sex~EF,data=acs)  # default: method=1  ——————————————————————————————————————————————————————————————  Dependent:sex   levels        Female          Male       p          (N)                     (N=287)        (N=570)           —————————————————————————————————————————————————————————————— EF             Mean ± SD       56.3 ± 10.1    55.6 ± 9.4  .387  —————————————————————————————————————————————————————————————— var.test(EF~sex,data=acs)  # F Test to Compare Two Variances      F test to compare two variances  data:  EF by sex F = 1.144, num df = 239, denom df = 482, p-value = 0.2214 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval:  0.9221264 1.4309581 sample estimates: ratio of variances            1.143983 t.test(EF~sex,data=acs,var.equal=TRUE)      Two Sample t-test  data:  EF by sex t = 0.86514, df = 721, p-value = 0.3872 alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 95 percent confidence interval:  -0.8346856  2.1498875 sample estimates: mean in group Female   mean in group Male              56.27375             55.61615 t.test(EF~sex,data=acs) # default value: var.equal=FALSE      Welch Two Sample t-test  data:  EF by sex t = 0.8458, df = 449.65, p-value = 0.3981 alternative hypothesis: true difference in means between group Female and group Male is not equal to 0 95 percent confidence interval:  -0.8703566  2.1855585 sample estimates: mean in group Female   mean in group Male              56.27375             55.61615"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"non-parametric-method","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 1. Comparison of two groups","what":"(2) Non-parametric method","title":"Statistical tests in gaze","text":"choose method=2, Wilcoxon rank sum test(also known Mann-Whitney test) performed.","code":"gaze(sex~EF,data=acs, method=2)  # method=2 forces analysis as continuous non-normal  —————————————————————————————————————————————————————————————————————————————  Dependent:sex     levels           Female                Male           p          (N)                           (N=287)              (N=570)              ————————————————————————————————————————————————————————————————————————————— EF             Median (IQR)    59.2 (51.4 to 63.1)  57.3 (50.0 to 61.8)  .053  ————————————————————————————————————————————————————————————————————————————— wilcox.test(EF~sex,data=acs)      Wilcoxon rank sum test with continuity correction  data:  EF by sex W = 63078, p-value = 0.05295 alternative hypothesis: true location shift is not equal to 0"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"performs-test-for-normality","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 1. Comparison of two groups","what":"(3) Performs test for normality","title":"Statistical tests in gaze","text":"method=3, perform Shapiro-Wilk test Anderson-Daring test normality(nortest::ad.test) decide normal non-normal. number cases 5000, Shapiro-Wilk test performed. 5000, Anderson-Daring test normality performed. result shapiro.test() significant. perform Wilcoxon rank sum test.","code":"gaze(sex~EF,data=acs, method=3)  —————————————————————————————————————————————————————————————————————————————  Dependent:sex     levels           Female                Male           p          (N)                           (N=287)              (N=570)              ————————————————————————————————————————————————————————————————————————————— EF             Median (IQR)    59.2 (51.4 to 63.1)  57.3 (50.0 to 61.8)  .053  ————————————————————————————————————————————————————————————————————————————— nrow(acs) [1] 857 out=lm(age~sex,data=acs) shapiro.test(resid(out))      Shapiro-Wilk normality test  data:  resid(out) W = 0.99343, p-value = 0.000808"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"comparison-of-three-or-more-groups","dir":"Articles","previous_headings":"Statistical tests for numeric variables","what":"2. Comparison of three or more groups","title":"Statistical tests in gaze","text":"‘Dx’ column acs data diagnosis. three groups : Unstable Angina, NSTEMI STEMI. can make table summarizing baseline characteristics among three groups. parametric method comparing means three groups ANOVA, whereas non-parametric method Kruskal-Wallis rank sum test. name levels NSTEMI (N=153) STEMI (N=304) Unstable Angina (N=400) p age Mean ± SD 64.3 ± 12.3 62.1 ± 12.1 63.8 ± 11.0 .073 sex Female 50 (32.7%) 84 (27.6%) 153 (38.2%) .012  Male 103 (67.3%) 220 (72.4%) 247 (61.8%)  cardiogenicShock 149 (97.4%) 256 (84.2%) 400 (100%) <.001  Yes 4 (2.6%) 48 (15.8%) 0 (0%)  entry Femoral 58 (37.9%) 133 (43.8%) 121 (30.2%) .001  Radial 95 (62.1%) 171 (56.2%) 279 (69.8%)  EF Mean ± SD 55.0 ± 9.3 52.4 ± 9.5 59.2 ± 8.7 <.001 height Mean ± SD 163.3 ± 8.2 165.1 ± 8.2 161.7 ± 9.7 <.001 weight Mean ± SD 64.3 ± 10.2 65.7 ± 11.6 64.5 ± 11.6 .361 BMI Mean ± SD 24.1 ± 3.2 24.0 ± 3.3 24.6 ± 3.4 .064 obesity 106 (69.3%) 209 (68.8%) 252 (63%) .186  Yes 47 (30.7%) 95 (31.2%) 148 (37%)  TC Mean ± SD 193.7 ± 53.6 183.2 ± 43.4 183.5 ± 48.3 .057 LDLC Mean ± SD 126.1 ± 44.7 116.7 ± 39.5 112.9 ± 40.4 .004 HDLC Mean ± SD 38.9 ± 11.9 38.5 ± 11.0 37.8 ± 10.9 .501 TG Mean ± SD 130.1 ± 88.5 106.5 ± 72.0 137.4 ± 101.6 <.001 DM 96 (62.7%) 208 (68.4%) 249 (62.2%) .209  Yes 57 (37.3%) 96 (31.6%) 151 (37.8%)  HBP 62 (40.5%) 150 (49.3%) 144 (36%) .002  Yes 91 (59.5%) 154 (50.7%) 256 (64%)  smoking Ex-smoker 42 (27.5%) 66 (21.7%) 96 (24%) <.001  Never 50 (32.7%) 97 (31.9%) 185 (46.2%)   Smoker 61 (39.9%) 141 (46.4%) 119 (29.8%)","code":"gaze(Dx~.,data=acs) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"parametric-method-1","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 2. Comparison of three or more groups","what":"(1) Parametric method","title":"Statistical tests in gaze","text":"Now focus comparing means age among three groups. can perform ANOVA follows analysis variance table can get p value 0.073.","code":"gaze(Dx~age,data=acs)  # default : method=1 ———————————————————————————————————————————————————————————————————————————————————————  Dependent:Dx   levels        NSTEMI          STEMI          Unstable Angina       p         (N)                     (N=153)         (N=304)             (N=400)                ——————————————————————————————————————————————————————————————————————————————————————— age           Mean ± SD       64.3 ± 12.3    62.1 ± 12.1              63.8 ± 11.0  .073  ——————————————————————————————————————————————————————————————————————————————————————— out=lm(age~Dx,data=acs) anova(out) Analysis of Variance Table  Response: age            Df Sum Sq Mean Sq F value  Pr(>F)   Dx          2    715  357.62   2.624 0.07309 . Residuals 854 116389  136.29                   --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"non-parametric-method-1","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 2. Comparison of three or more groups","what":"(2) Non-parametric method","title":"Statistical tests in gaze","text":"name levels NSTEMI (N=153) STEMI (N=304) Unstable Angina (N=400) p age Median (IQR) 65.0 (55.0 75.0) 62.0 (53.0 71.0) 65.0 (56.0 72.0) .109 p value table result Kruskal-Wallis rank sum test.","code":"gaze(Dx~age,data=acs, method=2) %>% myft() kruskal.test(age~Dx,data=acs)      Kruskal-Wallis rank sum test  data:  age by Dx Kruskal-Wallis chi-squared = 4.424, df = 2, p-value = 0.1095 if(sum(result)<=5000) out4=shapiro.test(resid(out3))       else out4=nortest::ad.test(resid(out3))       out5=kruskal.test(as.numeric(x),factor(y))       p=c(out4$p.value,anova(out3)$Pr[1],out5$p.value)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"performs-test-for-normality-1","dir":"Articles","previous_headings":"Statistical tests for numeric variables > 2. Comparison of three or more groups","what":"(3) Performs test for normality","title":"Statistical tests in gaze","text":"name levels NSTEMI (N=153) STEMI (N=304) Unstable Angina (N=400) p age Median (IQR) 65.0 (55.0 75.0) 62.0 (53.0 71.0) 65.0 (56.0 72.0) .109 method=3, gaze() performs normality test. Since result normality test significant(\\(p<0.001\\)), perform Kruskal-Wallis test.","code":"gaze(Dx~age,data=acs, method=3) %>% myft() out=lm(age~Dx,data=acs) shapiro.test(resid(out))      Shapiro-Wilk normality test  data:  resid(out) W = 0.99102, p-value = 4.413e-05"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"statistical-tests-for-categorical-variables","dir":"Articles","previous_headings":"","what":"Statistical tests for categorical variables","title":"Statistical tests in gaze","text":"statistical methods categorical variables gaze() follows: 0 : Perform chi-squared test first. warning present, perform Fisher’s exact test 1 : Perform chi-squared test without continuity correction 2 : Perform chi-squared test continuity correction (default value) 3 : perform Fisher’s exact test 4 : perform test trend proportions can choose setting catMethod argument(default value 2).","code":""},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"default-method-chi-squared-test-with-continuity-correction","dir":"Articles","previous_headings":"Statistical tests for categorical variables","what":"(1) Default method : chi-squared test with continuity correction","title":"Statistical tests in gaze","text":"default method categorical variables chi-squared test Yates’s correction continuity(https://en.wikipedia.org/wiki/Yates%27s_correction_for_continuity). can get result following R code:","code":"gaze(sex~Dx,data=acs) # default : catMethod=2 ————————————————————————————————————————————————————————————————————  Dependent:sex      levels           Female          Male       p          (N)                           (N=287)        (N=570)           ———————————————————————————————————————————————————————————————————— Dx             NSTEMI                 50 (17.4%)   103 (18.1%)  .012                 STEMI                  84 (29.3%)   220 (38.6%)                       Unstable Angina       153 (53.3%)   247 (43.3%)        ———————————————————————————————————————————————————————————————————— result=table(acs$Dx,acs$sex) chisq.test(result)  # default: correct = TRUE      Pearson's Chi-squared test  data:  result X-squared = 8.7983, df = 2, p-value = 0.01229"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"chi-squared-test-without-continuity-correction","dir":"Articles","previous_headings":"Statistical tests for categorical variables","what":"(2) Chi-squared test without continuity correction","title":"Statistical tests in gaze","text":"want perform chi-squared test without continuity correction, just set catMethod=1. default method SPSS. can get result following R code:","code":"gaze(sex~Dx,data=acs, catMethod=1) # Perform chisq.test without continuity correction ————————————————————————————————————————————————————————————————————  Dependent:sex      levels           Female          Male       p          (N)                           (N=287)        (N=570)           ———————————————————————————————————————————————————————————————————— Dx             NSTEMI                 50 (17.4%)   103 (18.1%)  .012                 STEMI                  84 (29.3%)   220 (38.6%)                       Unstable Angina       153 (53.3%)   247 (43.3%)        ———————————————————————————————————————————————————————————————————— result=table(acs$Dx,acs$sex) chisq.test(result, correct=FALSE)  # without continuity correction      Pearson's Chi-squared test  data:  result X-squared = 8.7983, df = 2, p-value = 0.01229"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"fishers-exact-test","dir":"Articles","previous_headings":"Statistical tests for categorical variables","what":"(3) Fisher’s exact test","title":"Statistical tests in gaze","text":"want perform Fisher’s exact test, set catMethod=3. can get result following R code:","code":"gaze(sex~Dx,data=acs, catMethod=3) # Perform Fisher's exact test ————————————————————————————————————————————————————————————————————  Dependent:sex      levels           Female          Male       p          (N)                           (N=287)        (N=570)           ———————————————————————————————————————————————————————————————————— Dx             NSTEMI                 50 (17.4%)   103 (18.1%)  .012                 STEMI                  84 (29.3%)   220 (38.6%)                       Unstable Angina       153 (53.3%)   247 (43.3%)        ———————————————————————————————————————————————————————————————————— result=table(acs$Dx,acs$sex) fisher.test(result)        Fisher's Exact Test for Count Data  data:  result p-value = 0.01191 alternative hypothesis: two.sided"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"test-for-trend-in-proportions","dir":"Articles","previous_headings":"Statistical tests for categorical variables","what":"(4) Test for trend in proportions","title":"Statistical tests in gaze","text":"want perform test trend proportions, set catMethod=4. can perform test grouping variable two group(male female example). can get result following R code:","code":"gaze(sex~Dx,data=acs, catMethod=4) # Perform test for trend in proportions ————————————————————————————————————————————————————————————————————  Dependent:sex      levels           Female          Male       p          (N)                           (N=287)        (N=570)           ———————————————————————————————————————————————————————————————————— Dx             NSTEMI                 50 (17.4%)   103 (18.1%)  .050                 STEMI                  84 (29.3%)   220 (38.6%)                       Unstable Angina       153 (53.3%)   247 (43.3%)        ———————————————————————————————————————————————————————————————————— result=table(acs$Dx,acs$sex) result                                     Female Male   NSTEMI              50  103   STEMI               84  220   Unstable Angina    153  247 prop.trend.test(result[,2],rowSums(result))       Chi-squared Test for Trend in Proportions  data:  result[, 2] out of rowSums(result) ,  using scores: 1 2 3 X-squared = 3.8332, df = 1, p-value = 0.05025"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"make-a-combining-table-with-two-or-more-grouping-variables","dir":"Articles","previous_headings":"","what":"Make a combining table with two or more grouping variables","title":"Statistical tests in gaze","text":"can make combining table two grouping variables. sex (N) Female (N=287) Male (N=570) name levels NSTEMI (N=50) STEMI (N=84) Unstable Angina (N=153) p NSTEMI (N=103) STEMI (N=220) Unstable Angina (N=247) p age Mean ± SD 70.9 ± 11.4 69.1 ± 10.4 67.7 ± 10.7 .177 61.1 ± 11.6 59.4 ± 11.7 61.4 ± 10.6 .133 cardiogenicShock 49 (98%) 73 (86.9%) 153 (100%) <.001 100 (97.1%) 183 (83.2%) 247 (100%) <.001  Yes 1 (2%) 11 (13.1%) 0 (0%)  3 (2.9%) 37 (16.8%) 0 (0%)  entry Femoral 22 (44%) 45 (53.6%) 52 (34%) .013 36 (35%) 88 (40%) 69 (27.9%) .022  Radial 28 (56%) 39 (46.4%) 101 (66%)  67 (65%) 132 (60%) 178 (72.1%)  EF Mean ± SD 54.8 ± 9.1 52.3 ± 10.9 59.4 ± 8.8 <.001 55.1 ± 9.4 52.4 ± 8.9 59.1 ± 8.7 <.001 height Mean ± SD 154.2 ± 5.1 155.7 ± 5.4 152.6 ± 6.7 .002 167.5 ± 5.7 168.7 ± 6.0 167.3 ± 6.4 .055 weight Mean ± SD 57.2 ± 10.3 57.4 ± 9.0 57.1 ± 9.1 .978 67.5 ± 8.4 68.8 ± 10.9 69.0 ± 10.6 .479 BMI Mean ± SD 24.1 ± 4.3 23.6 ± 3.2 24.5 ± 3.5 .215 24.1 ± 2.6 24.1 ± 3.4 24.6 ± 3.4 .205 obesity 35 (70%) 60 (71.4%) 99 (64.7%) .528 71 (68.9%) 149 (67.7%) 153 (61.9%) .301  Yes 15 (30%) 24 (28.6%) 54 (35.3%)  32 (31.1%) 71 (32.3%) 94 (38.1%)  TC Mean ± SD 196.3 ± 52.7 180.7 ± 45.7 191.1 ± 53.1 .192 192.6 ± 54.3 184.1 ± 42.6 178.7 ± 44.6 .036 LDLC Mean ± SD 127.7 ± 39.5 111.0 ± 40.0 118.3 ± 41.8 .088 125.4 ± 47.1 118.9 ± 39.1 109.5 ± 39.2 .002 HDLC Mean ± SD 40.1 ± 13.8 39.5 ± 11.2 38.5 ± 10.8 .627 38.4 ± 10.9 38.1 ± 10.9 37.4 ± 10.9 .655 TG Mean ± SD 112.5 ± 51.1 112.3 ± 87.2 126.3 ± 76.0 .316 138.0 ± 100.2 104.3 ± 65.5 144.3 ± 114.2 <.001 DM 25 (50%) 54 (64.3%) 94 (61.4%) .240 71 (68.9%) 154 (70%) 155 (62.8%) .219  Yes 25 (50%) 30 (35.7%) 59 (38.6%)  32 (31.1%) 66 (30%) 92 (37.2%)  HBP 19 (38%) 28 (33.3%) 36 (23.5%) .084 43 (41.7%) 122 (55.5%) 108 (43.7%) .016  Yes 31 (62%) 56 (66.7%) 117 (76.5%)  60 (58.3%) 98 (44.5%) 139 (56.3%)  smoking Ex-smoker 8 (16%) 13 (15.5%) 28 (18.3%) .184 34 (33%) 53 (24.1%) 68 (27.5%) .002  Never 37 (74%) 57 (67.9%) 115 (75.2%)  13 (12.6%) 40 (18.2%) 70 (28.3%)   Smoker 5 (10%) 14 (16.7%) 10 (6.5%)  56 (54.4%) 127 (57.7%) 109 (44.1%)  can select whether show total column. sex (N) Female (N=287) Male (N=570) name levels NSTEMI (N=50) STEMI (N=84) Unstable Angina (N=153) total (N=287) p NSTEMI (N=103) STEMI (N=220) Unstable Angina (N=247) total (N=570) p age Mean ± SD 70.9 ± 11.4 69.1 ± 10.4 67.7 ± 10.7 68.7 ± 10.7 .177 61.1 ± 11.6 59.4 ± 11.7 61.4 ± 10.6 60.6 ± 11.2 .133 cardiogenicShock 49 (98%) 73 (86.9%) 153 (100%) 275 (95.8%) <.001 100 (97.1%) 183 (83.2%) 247 (100%) 530 (93%) <.001  Yes 1 (2%) 11 (13.1%) 0 (0%) 12 (4.2%)  3 (2.9%) 37 (16.8%) 0 (0%) 40 (7%)  entry Femoral 22 (44%) 45 (53.6%) 52 (34%) 119 (41.5%) .013 36 (35%) 88 (40%) 69 (27.9%) 193 (33.9%) .022  Radial 28 (56%) 39 (46.4%) 101 (66%) 168 (58.5%)  67 (65%) 132 (60%) 178 (72.1%) 377 (66.1%)  EF Mean ± SD 54.8 ± 9.1 52.3 ± 10.9 59.4 ± 8.8 56.3 ± 10.1 <.001 55.1 ± 9.4 52.4 ± 8.9 59.1 ± 8.7 55.6 ± 9.4 <.001 height Mean ± SD 154.2 ± 5.1 155.7 ± 5.4 152.6 ± 6.7 153.8 ± 6.2 .002 167.5 ± 5.7 168.7 ± 6.0 167.3 ± 6.4 167.9 ± 6.1 .055 weight Mean ± SD 57.2 ± 10.3 57.4 ± 9.0 57.1 ± 9.1 57.2 ± 9.3 .978 67.5 ± 8.4 68.8 ± 10.9 69.0 ± 10.6 68.7 ± 10.3 .479 BMI Mean ± SD 24.1 ± 4.3 23.6 ± 3.2 24.5 ± 3.5 24.2 ± 3.6 .215 24.1 ± 2.6 24.1 ± 3.4 24.6 ± 3.4 24.3 ± 3.2 .205 obesity 35 (70%) 60 (71.4%) 99 (64.7%) 194 (67.6%) .528 71 (68.9%) 149 (67.7%) 153 (61.9%) 373 (65.4%) .301  Yes 15 (30%) 24 (28.6%) 54 (35.3%) 93 (32.4%)  32 (31.1%) 71 (32.3%) 94 (38.1%) 197 (34.6%)  TC Mean ± SD 196.3 ± 52.7 180.7 ± 45.7 191.1 ± 53.1 188.9 ± 51.1 .192 192.6 ± 54.3 184.1 ± 42.6 178.7 ± 44.6 183.3 ± 45.9 .036 LDLC Mean ± SD 127.7 ± 39.5 111.0 ± 40.0 118.3 ± 41.8 117.8 ± 41.2 .088 125.4 ± 47.1 118.9 ± 39.1 109.5 ± 39.2 116.0 ± 41.1 .002 HDLC Mean ± SD 40.1 ± 13.8 39.5 ± 11.2 38.5 ± 10.8 39.0 ± 11.5 .627 38.4 ± 10.9 38.1 ± 10.9 37.4 ± 10.9 37.8 ± 10.9 .655 TG Mean ± SD 112.5 ± 51.1 112.3 ± 87.2 126.3 ± 76.0 119.9 ± 76.2 .316 138.0 ± 100.2 104.3 ± 65.5 144.3 ± 114.2 127.9 ± 97.3 <.001 DM 25 (50%) 54 (64.3%) 94 (61.4%) 173 (60.3%) .240 71 (68.9%) 154 (70%) 155 (62.8%) 380 (66.7%) .219  Yes 25 (50%) 30 (35.7%) 59 (38.6%) 114 (39.7%)  32 (31.1%) 66 (30%) 92 (37.2%) 190 (33.3%)  HBP 19 (38%) 28 (33.3%) 36 (23.5%) 83 (28.9%) .084 43 (41.7%) 122 (55.5%) 108 (43.7%) 273 (47.9%) .016  Yes 31 (62%) 56 (66.7%) 117 (76.5%) 204 (71.1%)  60 (58.3%) 98 (44.5%) 139 (56.3%) 297 (52.1%)  smoking Ex-smoker 8 (16%) 13 (15.5%) 28 (18.3%) 49 (17.1%) .184 34 (33%) 53 (24.1%) 68 (27.5%) 155 (27.2%) .002  Never 37 (74%) 57 (67.9%) 115 (75.2%) 209 (72.8%)  13 (12.6%) 40 (18.2%) 70 (28.3%) 123 (21.6%)   Smoker 5 (10%) 14 (16.7%) 10 (6.5%) 29 (10.1%)  56 (54.4%) 127 (57.7%) 109 (44.1%) 292 (51.2%)","code":"gaze(sex+Dx~.,data=acs) %>% myft() gaze(sex+Dx~.,data=acs,show.total=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Statiastical_test_in_gaze.html","id":"missing-data-analysis","dir":"Articles","previous_headings":"","what":"Missing data analysis","title":"Statistical tests in gaze","text":"can use gaze() missing data analysis. Set missing argument TRUE. Dependent:EF levels missing (N=723) Missing (N=134) p age Mean ± SD 63.1 ± 11.9 64.3 ± 10.6 .303 sex Female 240 (33.2%) 47 (35.1%) .746  Male 483 (66.8%) 87 (64.9%)  cardiogenicShock 686 (94.9%) 119 (88.8%) .012  Yes 37 (5.1%) 15 (11.2%)  entry Femoral 262 (36.2%) 50 (37.3%) .889  Radial 461 (63.8%) 84 (62.7%)  Dx NSTEMI 139 (19.2%) 14 (10.4%) <.001  STEMI 272 (37.6%) 32 (23.9%)   Unstable Angina 312 (43.2%) 88 (65.7%)  height Mean ± SD 163.2 ± 9.1 163.1 ± 9.3 .908 weight Mean ± SD 64.7 ± 11.4 66.3 ± 10.7 .251 BMI Mean ± SD 24.2 ± 3.4 24.9 ± 3.1 .093 obesity 465 (64.3%) 102 (76.1%) .011  Yes 258 (35.7%) 32 (23.9%)  TC Mean ± SD 186.1 ± 47.5 179.9 ± 49.0 .183 LDLC Mean ± SD 117.5 ± 40.5 111.1 ± 44.3 .110 HDLC Mean ± SD 38.5 ± 11.0 36.9 ± 11.6 .135 TG Mean ± SD 123.7 ± 87.2 134.1 ± 108.9 .309 DM 462 (63.9%) 91 (67.9%) .428  Yes 261 (36.1%) 43 (32.1%)  HBP 303 (41.9%) 53 (39.6%) .680  Yes 420 (58.1%) 81 (60.4%)  smoking Ex-smoker 172 (23.8%) 32 (23.9%) .033  Never 268 (37.1%) 64 (47.8%)   Smoker 283 (39.1%) 38 (28.4%)  missing data, show table summarizing missing numbers. name levels N stats n age Mean ± SD 857 63.3 ± 11.7 857 cardiogenicShock 857 805 (93.9%) 805  Yes  52 (6.1%) 52 entry Femoral 857 312 (36.4%) 312  Radial  545 (63.6%) 545 Dx NSTEMI 857 153 (17.9%) 153  STEMI  304 (35.5%) 304  Unstable Angina  400 (46.7%) 400 EF Mean ± SD 723 55.8 ± 9.6 723 height Mean ± SD 764 163.2 ± 9.1 764 weight Mean ± SD 766 64.8 ± 11.4 766 BMI Mean ± SD 764 24.3 ± 3.3 764 obesity 857 567 (66.2%) 567  Yes  290 (33.8%) 290 TC Mean ± SD 834 185.2 ± 47.8 834 LDLC Mean ± SD 833 116.6 ± 41.1 833 HDLC Mean ± SD 834 38.2 ± 11.1 834 TG Mean ± SD 842 125.2 ± 90.9 842 DM 857 553 (64.5%) 553  Yes  304 (35.5%) 304 HBP 857 356 (41.5%) 356  Yes  501 (58.5%) 501 smoking Ex-smoker 857 204 (23.8%) 204  Never  332 (38.7%) 332  Smoker  321 (37.5%) 321","code":"gaze(EF~.,data=acs, missing=TRUE) %>% myft() gaze(sex~.,data=acs,missing=TRUE) %>% myft() There is no missing data in column 'sex'"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"what-is-survival-analysis","dir":"Articles","previous_headings":"","what":"What is survival analysis ?","title":"Survival Analysis","text":"Survival analysis study survival times factors influence . Types studies survival outcomes include clinical trials, prospective retrospective observational studies, animal experiments. Examples survival times include time birth death, time entry clinical trial death disease progression, time birth development breast cancer(, age onset). survival endpoint can also refer positive event. example, one might interested time entry clinical trial tumor response. Package autoReg provides number functions make analyses easy perform. writing package autoReg vignette, inspired package finalfit Ewen Harrison.","code":""},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Survival Analysis","text":"can install autoReg package github.","code":"#install.packages(\"devtools\") devtools::install_github(\"cardiomoon/autoReg\")"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"load-package","dir":"Articles","previous_headings":"","what":"Load package","title":"Survival Analysis","text":"load package, use library() function.","code":"library(autoReg) library(survival) library(dplyr)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"data-melanoma","dir":"Articles","previous_headings":"","what":"Data melanoma","title":"Survival Analysis","text":"data melanoma included boot package data 205 patients malignant melanoma. patient tumor removed surgery Department Plastic Surgery, University Hospital Odense, Denmark period 1962 1977. surgery consisted complete removal tumor together 2.5cm surrounding skin. Among measurements taken thickness tumor whether ulcerated . thought important prognostic variables patients thick /ulcerated tumor increased chance death melanoma. Patients followed end 1977. patient status end study coded status variable. 1 indicates died melanoma 2 indicates still alive 3 indicates died causes unrelated melanoma. three options coding . Overall survival: considering -cause mortality, comparing 2 (alive) 1 (died melanoma)/3 (died ) logical expression status!=2 (e.g. status equal 2) Cause-specific survival: considering disease-specific mortality comparing 2 (alive)/3 (died ) 1 (died melanoma) status==1 (e.g. status equal 1 ) Competing risks: comparing 2 (alive) 1 (died melanoma) accounting 3 (died ); make new variable statusCRR sex variable melanoma coded 0=female 1=male. ulcer variable coded 1=present 2= absent. possible use variables analysis, change variables factor proper labels(just aesthetic purpose).","code":"data(melanoma,package=\"boot\") gaze(melanoma) ———————————————————————————————————————    name      levels         stats       ——————————————————————————————————————— time       Mean ± SD    2152.8 ± 1122.1  status     Mean ± SD          1.8 ± 0.6  sex        Mean ± SD          0.4 ± 0.5  age        Mean ± SD        52.5 ± 16.7  year       Mean ± SD       1969.9 ± 2.6  thickness  Mean ± SD          2.9 ± 3.0  ulcer      Mean ± SD          0.4 ± 0.5  ——————————————————————————————————————— melanoma$status1 = ifelse(melanoma$status==1,1,ifelse(melanoma$status==2,0,2)) melanoma$statusCRR=factor(melanoma$status1,labels=c(\"survived\",\"melanoma\",\"other cause\")) melanoma$sex=factor(melanoma$sex,labels=c(\"Female\",\"Male\")) melanoma$ulcer=factor(melanoma$ulcer,labels=c(\"Absent\",\"Present\")) gaze(melanoma,show.n=TRUE) ———————————————————————————————————————————————————    name       levels      N        stats        n   ——————————————————————————————————————————————————— time       Mean ± SD      205  2152.8 ± 1122.1  205  status     Mean ± SD      205        1.8 ± 0.6  205  sex        Female         205      126 (61.5%)  126             Male                     79 (38.5%)   79  age        Mean ± SD      205      52.5 ± 16.7  205  year       Mean ± SD      205     1969.9 ± 2.6  205  thickness  Mean ± SD      205        2.9 ± 3.0  205  ulcer      Absent         205      115 (56.1%)  115             Present                  90 (43.9%)   90  status1    Mean ± SD      205        0.4 ± 0.6  205  statusCRR  survived       205      134 (65.4%)  134             melanoma                 57 (27.8%)   57             other cause               14 (6.8%)   14  ———————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"survival-analysis-for-whole-group","dir":"Articles","previous_headings":"","what":"Survival analysis for whole group","title":"Survival Analysis","text":"can estimate survival whole group survfit() function survival package.","code":"fit=survfit(Surv(time/365.25,status!=2)~1,data=melanoma) fit Call: survfit(formula = Surv(time/365.25, status != 2) ~ 1, data = melanoma)         n events median 0.95LCL 0.95UCL [1,] 205     71     NA    9.14      NA"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"life-table","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Life table","title":"Survival Analysis","text":"life table tabular form KM plot. shows survival proportion, together confidence limits.","code":"summary(fit,times=0:5) Call: survfit(formula = Surv(time/365.25, status != 2) ~ 1, data = melanoma)   time n.risk n.event survival std.err lower 95% CI upper 95% CI     0    205       0    1.000  0.0000        1.000        1.000     1    193      11    0.946  0.0158        0.916        0.978     2    183      10    0.897  0.0213        0.856        0.940     3    167      16    0.819  0.0270        0.767        0.873     4    160       7    0.784  0.0288        0.730        0.843     5    122      10    0.732  0.0313        0.673        0.796"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"kaplan-meier-plot","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Kaplan-Meier Plot","title":"Survival Analysis","text":"can plot survival curves using ggsurvplot() survminer package. numerous options available help page.","code":"library(survminer) ggsurvplot(fit)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"cox-proportional-hazard-model","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Cox-proportional hazard model","title":"Survival Analysis","text":"coxph() function survival package fits Cox proportional hazards regression model. Time dependent variables, time dependent strata, multiple events per subject, extensions incorporated using counting process formulation Andersen Gill. can summarize results coxph() autoReg() function. list univariable model, can select potentially significant explanatory variable(p value 0.2 example). autoReg() function automatically select univariable model given p value threshold(default value 0.2). want use explanatory variables multivariable model, set threshold 1. Dependent: Surv(time, status != 2)  HR (univariable) HR (multivariable) age Mean ± SD 52.5 ± 16.7 1.03 (1.01-1.05, p<.001) 1.02 (1.01-1.04, p=.005) sex Female 126 (61.5%)    Male 79 (38.5%) 1.93 (1.21-3.07, p=.006) 1.51 (0.94-2.42, p=.085) thickness Mean ± SD 2.9 ± 3.0 1.16 (1.10-1.23, p<.001) 1.10 (1.03-1.18, p=.004) ulcer Absent 115 (56.1%)    Present 90 (43.9%) 3.52 (2.14-5.80, p<.001) 2.59 (1.53-4.38, p<.001) want, can decorate table follows: Overall Survival  HR (univariable) HR (multivariable) Age(years) Mean ± SD 52.5 ± 16.7 1.03 (1.01-1.05, p<.001) 1.02 (1.01-1.04, p=.005) Sex Female 126 (61.5%)    Male 79 (38.5%) 1.93 (1.21-3.07, p=.006) 1.51 (0.94-2.42, p=.085) Tumor thickness (mm) Mean ± SD 2.9 ± 3.0 1.16 (1.10-1.23, p<.001) 1.10 (1.03-1.18, p=.004) Ulceration Absent 115 (56.1%)    Present 90 (43.9%) 3.52 (2.14-5.80, p<.001) 2.59 (1.53-4.38, p<.001)","code":"fit=coxph(Surv(time,status!=2)~age+sex+thickness+ulcer,data=melanoma) x=autoReg(fit,uni=TRUE,threshold=1) x %>% myft() x$name=c(\"Age(years)\",\"Sex\",\"\",\"Tumor thickness (mm)\",\"Ulceration\",\"\") names(x)[1]=\"Overall Survival\" x %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"hazard-ratio-plot-modelplot","dir":"Articles","previous_headings":"Survival analysis for whole group > Cox-proportional hazard model","what":"Hazard ratio plot : modelPlot()","title":"Survival Analysis","text":"can draw hazard ratio plot  want add another model summary table, addFitSummary() can . Overall Survival  HR (univariable) HR (multivariable) HR (final) Age(years) Mean ± SD 52.5 ± 16.7 1.03 (1.01-1.05, p<.001) 1.02 (1.01-1.04, p=.005) 1.02 (1.01-1.04, p=.003) Sex Female 126 (61.5%)     Male 79 (38.5%) 1.93 (1.21-3.07, p=.006) 1.51 (0.94-2.42, p=.085)  Tumor thickness (mm) Mean ± SD 2.9 ± 3.0 1.16 (1.10-1.23, p<.001) 1.10 (1.03-1.18, p=.004) 1.10 (1.03-1.18, p=.003) Ulceration Absent 115 (56.1%)     Present 90 (43.9%) 3.52 (2.14-5.80, p<.001) 2.59 (1.53-4.38, p<.001) 2.72 (1.61-4.57, p<.001)","code":"modelPlot(fit,uni=TRUE, threshold=1,show.ref=FALSE) final=coxph(Surv(time,status!=2)~age+thickness+ulcer,data=melanoma) x=x %>% addFitSummary(final,statsname=\"HR (final)\")  x %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"testing-for-proportional-hazards","dir":"Articles","previous_headings":"Survival analysis for whole group > Cox-proportional hazard model","what":"Testing for proportional hazards","title":"Survival Analysis","text":"assumption Cox proportional hazard regression hazard (think risk) associated particular variable change time. example, magnitude increase risk death associated tumor ulceration early post-operative period later years? cox.zph() function survival package allows us test assumption variable. plot scaled Schoenfeld residuals horizontal line. included hypothesis test identifies whether gradient differs zero variable. variable significantly differs zero 5% significance level.","code":"result=cox.zph(fit) result           chisq df     p age       1.610  1 0.205 sex       0.478  1 0.489 thickness 3.124  1 0.077 ulcer     4.633  1 0.031 GLOBAL    7.706  4 0.103 survminer::ggcoxzph(result)"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"disease-specific-survival","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Disease-specific survival","title":"Survival Analysis","text":"can analyze disease specific survival make publication-ready table. Dependent: Surv(time, status == 1)  HR (univariable) HR (multivariable) age Mean ± SD 52.5 ± 16.7 1.02 (1.00-1.04, p=.028) 1.01 (1.00-1.03, p=.141) sex Female 126 (61.5%)    Male 79 (38.5%) 1.94 (1.15-3.26, p=.013) 1.54 (0.91-2.60, p=.106) thickness Mean ± SD 2.9 ± 3.0 1.17 (1.10-1.25, p<.001) 1.12 (1.04-1.20, p=.004) ulcer Absent 115 (56.1%)    Present 90 (43.9%) 4.36 (2.44-7.77, p<.001) 3.20 (1.75-5.88, p<.001)","code":"fit=coxph(Surv(time,status==1)~age+sex+thickness+ulcer,data=melanoma) autoReg(fit,uni=TRUE,threshold=1) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"competing-risk-regression","dir":"Articles","previous_headings":"Survival analysis for whole group","what":"Competing risk regression","title":"Survival Analysis","text":"Competing-risks regression alternative cox proportional regression. can useful outcome interest may able occur simply something else (like death) happened first. instance, example obviously possible patient die melanoma died another disease first. simply looking cause-specific mortality (deaths melanoma) considering deaths censored, bias may result estimates influence predictors. approach Fine Gray one option dealing . implemented package cmprsk. crrFormula() function autoReg package can make competing risk regression model addFitSummary() function can add model summary. Dependent: Surv(time, status == 1)  HR (univariable) HR (multivariable) HR (competing risks multivariable) age Mean ± SD 52.5 ± 16.7 1.02 (1.00-1.04, p=.028) 1.01 (1.00-1.03, p=.141) 1.01 (0.99-1.02, p=.520) sex Female 126 (61.5%)     Male 79 (38.5%) 1.94 (1.15-3.26, p=.013) 1.54 (0.91-2.60, p=.106) 1.50 (0.87-2.57, p=.140) thickness Mean ± SD 2.9 ± 3.0 1.17 (1.10-1.25, p<.001) 1.12 (1.04-1.20, p=.004) 1.09 (1.01-1.18, p=.019) ulcer Absent 115 (56.1%)     Present 90 (43.9%) 4.36 (2.44-7.77, p<.001) 3.20 (1.75-5.88, p<.001) 3.09 (1.71-5.60, p<.001) can estimate cumulative incidence functions competing risk data. 5 years, cumulative death incidence due melanoma 22.3% cumulative death incidence due cause 4.4%. can plot following R code.","code":"fit1=crrFormula(time+status1~age+sex+thickness+ulcer,data=melanoma) autoReg(fit,uni=TRUE,threshold=1) %>%    addFitSummary(fit1,\"HR (competing risks multivariable)\") %>%    myft() library(cmprsk) # for use of cuminc() fit=cuminc(melanoma$time/365,melanoma$status1) fit Estimates and Variances: $est              5        10        15 1 1 0.22353960 0.3387175 0.3387175 1 2 0.04419779 0.1059471 0.1059471  $var                5          10          15 1 1 0.0008713044 0.001690760 0.001690760 1 2 0.0002086252 0.001040155 0.001040155 ggcmprsk(fit,c(\"melanoma\",\"others\"))"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"analysis-of-clustered-data","dir":"Articles","previous_headings":"","what":"Analysis of clustered data","title":"Survival Analysis","text":"clustered data, cases independent. instance, one might interested survival times individuals family unit, town school. case, genetic environmental factors mean survival times within cluster similar clusters, independence assumption longer holds. Marginal approach frailty model can used handle type data.","code":""},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"frailty-survival-model","dir":"Articles","previous_headings":"Analysis of clustered data","what":"1. Frailty survival model","title":"Survival Analysis","text":"retinopathy data trial laser coagulation treatment delay diabetic retinopathy. shall examine effect treatment time--blindness patients diabetic retinopathy, also interaction effect treatment(trt) age onset (juvenile adult onset), defined type indicator. estimate individual effect, frailty(id) shall used. Variance random effect \\(\\hat{\\sigma}^2=0.926\\) p value frailty(id) 0.098. can reject \\(H_0 : \\sigma^2=0\\), individual patient different effect. result summarized table following R code. Dependent: Surv(futime, status)  HR (multivariable) trt Mean ± SD 0.5 ± 0.5 0.60 (0.39-0.94, p=.025) type juvenile 228 (57.9%)   adult 166 (42.1%) 1.49 (0.89-2.47, p=.126) trt:type juvenile   trt:type adult  0.37 (0.18-0.76, p=.006) frailty(id) p=.010 Variance random effect= 0.92598   -likelihood = -847 result, can estimate risk blindness group. juvenile, treated : \\(HR = exp(0) = 1\\) juvenile, treated : \\(HR = 0.6030\\) adult onset, treated : \\(HR = 1.4872\\) adult onset, treated : \\(HR = 0.6030\\times1.4872\\times0.3734=0.3348\\) type diabetes significant development blindness(\\(p=0.130\\)). Laser treatment significantly reduced risk blindness(HR 0.60(95% CI 0.39-0.94), \\(p=0.03\\)). Laser treatment effective type diabetes, effective adult-onset diabetes.","code":"data(retinopathy, package=\"survival\") fit=coxph(Surv(futime,status)~trt*type+frailty(id),data=retinopathy) summary(fit) Call: coxph(formula = Surv(futime, status) ~ trt * type + frailty(id),      data = retinopathy)    n= 394, number of events= 155                 coef    se(coef) se2    Chisq  DF    p      trt           -0.5059 0.2255   0.2207   5.03  1.00 0.0250 typeadult      0.3969 0.2591   0.2053   2.35  1.00 0.1300 frailty(id)                           122.55 88.58 0.0098 trt:typeadult -0.9850 0.3618   0.3553   7.41  1.00 0.0065                exp(coef) exp(-coef) lower .95 upper .95 trt              0.6030     1.6584    0.3876    0.9380 typeadult        1.4872     0.6724    0.8949    2.4714 trt:typeadult    0.3734     2.6779    0.1838    0.7588  Iterations: 6 outer, 31 Newton-Raphson      Variance of random effect= 0.92598   I-likelihood = -847  Degrees of freedom for terms=  1.0  0.6 88.6  1.0  Concordance= 0.86  (se = 0.014 ) Likelihood ratio test= 218.4  on 91.13 df,   p=2e-12 autoReg(fit) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/articles/Survival.html","id":"marginal-approach","dir":"Articles","previous_headings":"Analysis of clustered data","what":"2. Marginal approach","title":"Survival Analysis","text":"marginal approach, proportional hazards assumption presumed hold subjects, despite structure data due clusters. approach, parameter estimates obtained Cox proportional hazards model ignoring cluster structure. result can summarized table. Dependent: Surv(futime, status)  HR (multivariable) trt Mean ± SD 0.5 ± 0.5 0.65 (0.45-0.94, p=.022) type juvenile 228 (57.9%)   adult 166 (42.1%) 1.41 (0.96-2.06, p=.081) trt:type juvenile   trt:type adult  0.43 (0.24-0.78, p=.005) cluster=id result marginal approach similar frailty approach. frailty approach, subject-specific effect estimated, whereas marginal approach, population average effect estimated.","code":"fit=coxph(Surv(futime,status)~trt*type+cluster(id),data=retinopathy) summary(fit) Call: coxph(formula = Surv(futime, status) ~ trt + type + trt:type,      data = retinopathy, cluster = id)    n= 394, number of events= 155                    coef exp(coef) se(coef) robust se      z Pr(>|z|)    trt           -0.4250    0.6538   0.2177    0.1850 -2.297  0.02160 *  typeadult      0.3413    1.4067   0.1992    0.1958  1.743  0.08129 .  trt:typeadult -0.8459    0.4292   0.3509    0.3036 -2.786  0.00534 ** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1                exp(coef) exp(-coef) lower .95 upper .95 trt              0.6538     1.5296    0.4549    0.9395 typeadult        1.4067     0.7109    0.9585    2.0646 trt:typeadult    0.4292     2.3301    0.2367    0.7782  Concordance= 0.613  (se = 0.019 ) Likelihood ratio test= 28.49  on 3 df,   p=3e-06 Wald test            = 34.88  on 3 df,   p=1e-07 Score (logrank) test = 28.44  on 3 df,   p=3e-06,   Robust = 30.29  p=1e-06    (Note: the likelihood ratio and score tests assume independence of      observations within a cluster, the Wald and robust score tests do not). autoReg(fit) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keon-Woong Moon. Author, maintainer.","code":""},{"path":"https://cardiomoon.github.io/autoReg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moon K (2022). autoReg: Automatic Linear Logistic Regression Survival Analysis. https://github.com/cardiomoon/autoReg, https://cardiomoon.github.io/autoReg/.","code":"@Manual{,   title = {autoReg: Automatic Linear and Logistic Regression and Survival Analysis},   author = {Keon-Woong Moon},   year = {2022},   note = {https://github.com/cardiomoon/autoReg, https://cardiomoon.github.io/autoReg/}, }"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can install autoReg package github.","code":"#install.packages(\"devtools\") devtools::install_github(\"cardiomoon/autoReg\")"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"load-package","dir":"","previous_headings":"","what":"Load package","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"load package, use library() function.","code":"library(autoReg)"},{"path":[]},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"1summarizing-baseline-characteristics--gaze","dir":"","previous_headings":"Main features","what":"1.Summarizing baseline characteristics : gaze()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can make table summarizing baseline characteristics easily.","code":"library(moonBook) # For use of example data acs gaze(sex~.,data=acs) ————————————————————————————————————————————————————————————————————————   Dependent:sex        levels           Female          Male        p           (N)                             (N=287)        (N=570)            ———————————————————————————————————————————————————————————————————————— age               Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  cardiogenicShock  No                    275 (95.8%)     530 (93%)   .136                    Yes                     12 (4.2%)       40 (7%)         entry             Femoral               119 (41.5%)   193 (33.9%)   .035                    Radial                168 (58.5%)   377 (66.1%)         Dx                NSTEMI                 50 (17.4%)   103 (18.1%)   .012                    STEMI                  84 (29.3%)   220 (38.6%)                           Unstable Angina       153 (53.3%)   247 (43.3%)         EF                Mean ± SD             56.3 ± 10.1    55.6 ± 9.4   .387  height            Mean ± SD             153.8 ± 6.2   167.9 ± 6.1  <.001  weight            Mean ± SD              57.2 ± 9.3   68.7 ± 10.3  <.001  BMI               Mean ± SD              24.2 ± 3.6    24.3 ± 3.2   .611  obesity           No                    194 (67.6%)   373 (65.4%)   .580                    Yes                    93 (32.4%)   197 (34.6%)         TC                Mean ± SD            188.9 ± 51.1  183.3 ± 45.9   .124  LDLC              Mean ± SD            117.8 ± 41.2  116.0 ± 41.1   .561  HDLC              Mean ± SD             39.0 ± 11.5   37.8 ± 10.9   .145  TG                Mean ± SD            119.9 ± 76.2  127.9 ± 97.3   .195  DM                No                    173 (60.3%)   380 (66.7%)   .077                    Yes                   114 (39.7%)   190 (33.3%)         HBP               No                     83 (28.9%)   273 (47.9%)  <.001                    Yes                   204 (71.1%)   297 (52.1%)         smoking           Ex-smoker              49 (17.1%)   155 (27.2%)  <.001                    Never                 209 (72.8%)   123 (21.6%)                           Smoker                 29 (10.1%)   292 (51.2%)         ————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"for-easy-reproducible-research--myft","dir":"","previous_headings":"Main features","what":"For easy reproducible research : myft()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can make publication-ready table easily using myft(). makes flextable object can use either HTML PDF format.  can also make powerpoint file using rrtable::table2pptx() function. can make microsoft word file using rrtable::table2docx() function.","code":"library(dplyr) # for use of `%>%`  Attaching package: 'dplyr' The following objects are masked from 'package:stats':      filter, lag The following objects are masked from 'package:base':      intersect, setdiff, setequal, union ft=gaze(sex~.,data=acs) %>% myft() ft library(rrtable)  table2pptx(ft) Exported table as Report.pptx table2docx(ft) Exported table as Report.docx"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"summarizing-baseline-characteristics-with-two-or-more-grouping-variables","dir":"","previous_headings":"Main features","what":"Summarizing baseline characteristics with two or more grouping variables","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can get table summarizing baseline characteristics two grouping variables.  can also use three grouping variables.resultant table long review, can try.","code":"gaze(sex+Dx~.,data=acs) %>% myft() gaze(sex+DM+HBP~age,data=acs) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"2-for-automatic-selection-of-explanatory-variables--autoreg","dir":"","previous_headings":"Main features","what":"2. For automatic selection of explanatory variables : autoReg()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can make table summarizing results regression analysis. example, let us perform logistic regression colon cancer data. can make table result. can make publication-ready table.  want make table explanation, can make categorical variables numeric variables. example, explanatory variables obstruct(obstruction colon tumor) perfor(perforation colon) coded 0 1, “” “Yes” actually. Also dependent variable status coded 0 1, “Alive” “Died”.  can add labels names variables setLabel() function.  want show reference values table, can shorten table.","code":"library(survival)   # For use of data colon data(cancer)    fit=glm(status~rx+sex+age+obstruct+perfor+nodes,data=colon,family=\"binomial\") summary(fit)  Call: glm(formula = status ~ rx + sex + age + obstruct + perfor + nodes,      family = \"binomial\", data = colon)  Deviance Residuals:      Min       1Q   Median       3Q      Max   -2.4950  -1.0594  -0.7885   1.1619   1.6424    Coefficients:              Estimate Std. Error z value Pr(>|z|)     (Intercept) -0.645417   0.285558  -2.260   0.0238 *   rxLev       -0.067422   0.118907  -0.567   0.5707     rxLev+5FU   -0.627480   0.121684  -5.157 2.51e-07 *** sex         -0.053541   0.098975  -0.541   0.5885     age          0.002307   0.004234   0.545   0.5859     obstruct     0.283703   0.125194   2.266   0.0234 *   perfor       0.319281   0.292034   1.093   0.2743     nodes        0.190563   0.018255  10.439  < 2e-16 *** --- Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  (Dispersion parameter for binomial family taken to be 1)      Null deviance: 2525.4  on 1821  degrees of freedom Residual deviance: 2342.4  on 1814  degrees of freedom   (36 observations deleted due to missingness) AIC: 2358.4  Number of Fisher Scoring iterations: 4 autoReg(fit) ——————————————————————————————————————————————————————————————————————————————————  Dependent: status              0 (N=925)    1 (N=897)      OR (multivariable)      —————————————————————————————————————————————————————————————————————————————————— rx                 Obs          282 (30.5%)  342 (38.1%)                                               Lev          285 (30.8%)    323 (36%)  0.93 (0.74-1.18, p=.571)                     Lev+5FU      358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  sex                Mean ± SD      0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  age                Mean ± SD    60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.586)  obstruct           Mean ± SD      0.2 ± 0.4    0.2 ± 0.4  1.33 (1.04-1.70, p=.023)  perfor             Mean ± SD      0.0 ± 0.2    0.0 ± 0.2  1.38 (0.78-2.47, p=.274)  nodes              Mean ± SD      2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.26, p<.001)  —————————————————————————————————————————————————————————————————————————————————— autoReg(fit) %>% myft() colon$status.factor=factor(colon$status,labels=c(\"Alive\",\"Died\")) colon$obstruct.factor=factor(colon$obstruct,labels=c(\"No\",\"Yes\")) colon$perfor.factor=factor(colon$perfor,labels=c(\"No\",\"Yes\")) colon$sex.factor=factor(colon$sex,labels=c(\"Female\",\"Male\"))  fit=glm(status.factor~rx+sex.factor+age+obstruct.factor+perfor.factor+nodes,data=colon,family=\"binomial\") result=autoReg(fit)  result %>% myft() colon$status.factor=setLabel(colon$status.factor,\"Mortality\") colon$rx=setLabel(colon$rx,\"Treatment\") colon$age=setLabel(colon$age,\"Age(Years)\") colon$sex.factor=setLabel(colon$sex.factor,\"Sex\") colon$obstruct.factor=setLabel(colon$obstruct.factor,\"Obstruction\") colon$perfor.factor=setLabel(colon$perfor.factor,\"Perforation\") colon$nodes=setLabel(colon$nodes,\"Positive nodes\")  fit=glm(status.factor~rx+sex.factor+age+obstruct.factor+perfor.factor+nodes,data=colon,family=\"binomial\") result=autoReg(fit)  result %>% myft() shorten(result) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"add-univariate-models-to-table-and-automatic-selection-of-explanatory-variables","dir":"","previous_headings":"Main features","what":"Add univariate models to table and automatic selection of explanatory variables","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can add results univariate analyses table. time, autoReg() function automatically select explanatory variables threshold(default value 0.2) perform multivariate analysis. table, p values explanatory variables sex.factor age default threshold(0.2), excluded multivariate model.  want include explanatory variables multivariate model, just set threshold 1.  can perform stepwise backward elimination select variables make final model. Just set final=TRUE.","code":"autoReg(fit, uni=TRUE) %>% myft() autoReg(fit, uni=TRUE,threshold=1) %>% myft() autoReg(fit, uni=TRUE,threshold=1, final=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"multiple-imputation-with-mice","dir":"","previous_headings":"Main features > Add univariate models to table and automatic selection of explanatory variables","what":"Multiple imputation with mice()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"argument imputed=TRUE, autoReg() function make multiple imputed model using mice::mice() function. default, 20 imputations performed. want, can change number imputations m argument.","code":"autoReg(fit, imputed=TRUE) %>% myft()"},{"path":"https://cardiomoon.github.io/autoReg/index.html","id":"summarize-regression-model-results-in-a-plot--modelplot","dir":"","previous_headings":"Main features","what":"Summarize regression model results in a plot : modelPlot()","title":"Automatic Linear and Logistic Regression and Survival Analysis","text":"can draw plot summarizing model modelPlot()  can make powerpoint file plot using rrtable::plot2pptx(). can summarize models plot. want summarize univariate multivariate model plot, just set uni=TRUE adjust threshold. can decide whether show reference show.ref argument.","code":"x=modelPlot(fit) x plot2pptx(print(x)) Exported plot as Report.pptx modelPlot(fit,uni=TRUE,threshold=1,show.ref=FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Add model summary to an object of class gaze — addFitSummary","title":"Add model summary to an object of class gaze — addFitSummary","text":"Add model summary object class gaze","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add model summary to an object of class gaze — addFitSummary","text":"","code":"addFitSummary(df, fit, statsname = \"\")"},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add model summary to an object of class gaze — addFitSummary","text":"df object class gaze fit object class glm lm crr statsname character Name statistics","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/addFitSummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add model summary to an object of class gaze — addFitSummary","text":"","code":"require(survival) #> Loading required package: survival require(dplyr) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(cancer,package=\"survival\") fit=coxph(Surv(time,status)~rx+age+sex+nodes+obstruct+perfor,data=colon) df=autoReg(fit,uni=FALSE) final=fit2final(fit) df %>% addFitSummary(final,statsname=\"HR (final)\") %>% myft() #> a flextable object. #> col_keys: `Dependent:  #> Surv(time, status)`, ` `, `all`, `HR (multivariable)`, `HR (final)`  #> header has 1 row(s)  #> body has 8 row(s)  #> original dataset sample:  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: Surv(time, status)                 all         HR (multivariable)            HR (final)          #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                             Obs          624 (34.2%)                                                      #>                                Lev          608 (33.4%)  0.94 (0.81-1.09, p=.409)  0.94 (0.80-1.09, p=.408)  #>                                Lev+5FU      590 (32.4%)  0.63 (0.54-0.75, p<.001)  0.64 (0.54-0.75, p<.001)  #> age                            Mean ± SD    59.8 ± 11.9  1.00 (1.00-1.01, p=.571)                            #> sex                            Mean ± SD      0.5 ± 0.5  0.92 (0.81-1.05, p=.242)                            #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"Perform univariable multivariable regression stepwise backward regression automatically","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"","code":"autoReg(x, ...)  # S3 method for lm autoReg(x, ...)  # S3 method for glm autoReg(x, ...)  # S3 method for coxph autoReg(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"x object class lm, glm coxph ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"lm: S3 method class lm glm: S3 method class glm coxph: S3 method class coxph","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg","text":"","code":"data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") autoReg(fit) #> —————————————————————————————————————————————————————————————————————————————————— #>  Dependent: status              0 (N=925)    1 (N=897)      OR (multivariable)      #> —————————————————————————————————————————————————————————————————————————————————— #> rx                 Obs          282 (30.5%)  342 (38.1%)                            #>                    Lev          285 (30.8%)    323 (36%)  0.94 (0.74-1.18, p=.576)  #>                    Lev+5FU      358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  #> sex                Mean ± SD      0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  #> age                Mean ± SD    60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.583)  #> obstruct           Mean ± SD      0.2 ± 0.4    0.2 ± 0.4  1.34 (1.05-1.72, p=.018)  #> nodes              Mean ± SD      2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.26, p<.001)  #> —————————————————————————————————————————————————————————————————————————————————— autoReg(fit,uni=FALSE,final=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: status              0 (N=925)    1 (N=897)      OR (multivariable)            OR (final)          #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                 Obs          282 (30.5%)  342 (38.1%)                                                      #>                    Lev          285 (30.8%)    323 (36%)  0.94 (0.74-1.18, p=.576)  0.94 (0.74-1.18, p=.575)  #>                    Lev+5FU      358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  0.54 (0.42-0.68, p<.001)  #> sex                Mean ± SD      0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)                            #> age                Mean ± SD    60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.583)                            #> obstruct           Mean ± SD      0.2 ± 0.4    0.2 ± 0.4  1.34 (1.05-1.72, p=.018)  1.34 (1.05-1.71, p=.019)  #> nodes              Mean ± SD      2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.26, p<.001)  1.21 (1.17-1.25, p<.001)  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— autoReg(fit,uni=FALSE,imputed=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: status              0 (N=925)    1 (N=897)      OR (multivariable)           OR (imputed)         #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                 Obs          282 (30.5%)  342 (38.1%)                                                      #>                    Lev          285 (30.8%)    323 (36%)  0.94 (0.74-1.18, p=.576)  0.94 (0.74-1.18, p=.576)  #>                    Lev+5FU      358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  0.53 (0.42-0.68, p<.001)  #> sex                Mean ± SD      0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  0.95 (0.78-1.15, p=.589)  #> age                Mean ± SD    60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.583)  1.00 (0.99-1.01, p=.583)  #> obstruct           Mean ± SD      0.2 ± 0.4    0.2 ± 0.4  1.34 (1.05-1.72, p=.018)  1.34 (1.05-1.72, p=.018)  #> nodes              Mean ± SD      2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.26, p<.001)  1.21 (1.17-1.25, p<.001)  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————— fit=lm(mpg~wt*hp+am+I(wt^2),data=mtcars) autoReg(fit,final=TRUE) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: mpg                    unit        value        Coefficient (multivariable)          Coefficient (final)         #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> wt              [1.5,5.4]         Mean ± SD     3.2 ± 1.0  -7.67 (-14.54 to -0.81, p=.030)  -8.22 (-10.82 to -5.62, p<.001)  #> hp              [52,335]          Mean ± SD  146.7 ± 68.6   -0.13 (-0.25 to -0.01, p=.040)   -0.12 (-0.17 to -0.07, p<.001)  #> am              [0,1]             Mean ± SD     0.4 ± 0.5     0.17 (-2.68 to 3.01, p=.905)                                   #> I(wt^2)         interpretation                               -0.11 (-1.57 to 1.36, p=.880)                                   #> wt:hp                                                         0.03 (-0.01 to 0.07, p=.100)      0.03 (0.01 to 0.04, p<.001)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— autoReg(fit,imputed=TRUE) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: mpg                    unit        value        Coefficient (multivariable)        Coefficients (imputed)        #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> wt              [1.5,5.4]         Mean ± SD     3.2 ± 1.0  -7.67 (-14.54 to -0.81, p=.030)  -7.67 (-14.57 to -0.78, p=.031)  #> hp              [52,335]          Mean ± SD  146.7 ± 68.6   -0.13 (-0.25 to -0.01, p=.040)   -0.13 (-0.25 to -0.01, p=.041)  #> am              [0,1]             Mean ± SD     0.4 ± 0.5     0.17 (-2.68 to 3.01, p=.905)     0.17 (-2.69 to 3.02, p=.905)  #> I(wt^2)         interpretation                               -0.11 (-1.57 to 1.36, p=.880)    -0.11 (-1.58 to 1.36, p=.880)  #> wt:hp                                                         0.03 (-0.01 to 0.07, p=.100)     0.03 (-0.01 to 0.07, p=.101)  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":null,"dir":"Reference","previous_headings":"","what":"perform automatic regression for a class of coxph — autoRegCox","title":"perform automatic regression for a class of coxph — autoRegCox","text":"perform automatic regression class coxph","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"perform automatic regression for a class of coxph — autoRegCox","text":"","code":"autoRegCox(   x,   threshold = 0.2,   uni = FALSE,   multi = TRUE,   final = FALSE,   imputed = FALSE,   keepstats = FALSE,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"perform automatic regression for a class of coxph — autoRegCox","text":"x object class coxph threshold numeric uni logical whether perform univariable regression multi logical whether perform multivariable regression final logical whether perform stepwise backward elimination imputed logical whether perform multiple imputation keepstats logical whether keep statistic ... arguments passed gaze()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoRegCox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"perform automatic regression for a class of coxph — autoRegCox","text":"","code":"require(survival) require(dplyr) data(cancer) fit=coxph(Surv(time,status==2)~log(bili)+age+cluster(edema),data=pbc) autoReg(fit) #> —————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: Surv(time, status == 2)                 all         HR (multivariable)      #> —————————————————————————————————————————————————————————————————————————————————————— #> log(bili)                           Mean ± SD      0.6 ± 1.0  2.76 (2.59-2.94, p<.001)  #> age                                 Mean ± SD    50.7 ± 10.4  1.04 (1.03-1.06, p<.001)  #> —————————————————————————————————————————————————————————————————————————————————————— #> cluster=edema  fit=coxph(Surv(time,status)~rx+age+sex+obstruct+perfor,data=colon) autoReg(fit) #> ————————————————————————————————————————————————————————————————————————————————— #>  Dependent: Surv(time, status)                 all         HR (multivariable)      #> ————————————————————————————————————————————————————————————————————————————————— #> rx                             Obs          630 (33.9%)                            #>                                Lev          620 (33.4%)  0.98 (0.84-1.14, p=.802)  #>                                Lev+5FU      608 (32.7%)  0.65 (0.55-0.76, p<.001)  #> age                            Mean ± SD    59.8 ± 11.9  1.00 (0.99-1.00, p=.660)  #> sex                            Mean ± SD      0.5 ± 0.5  0.96 (0.84-1.09, p=.507)  #> obstruct                       Mean ± SD      0.2 ± 0.4  1.24 (1.05-1.45, p=.009)  #> perfor                         Mean ± SD      0.0 ± 0.2  1.22 (0.85-1.74, p=.275)  #> ————————————————————————————————————————————————————————————————————————————————— autoReg(fit,uni=TRUE,threshold=1) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: Surv(time, status)                 all          HR (univariable)         HR (multivariable)      #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                             Obs          630 (33.9%)                                                      #>                                Lev          620 (33.4%)  0.98 (0.84-1.14, p=.786)  0.98 (0.84-1.14, p=.802)  #>                                Lev+5FU      608 (32.7%)  0.64 (0.55-0.76, p<.001)  0.65 (0.55-0.76, p<.001)  #> age                            Mean ± SD    59.8 ± 11.9  1.00 (0.99-1.00, p=.382)  1.00 (0.99-1.00, p=.660)  #> sex                            Mean ± SD      0.5 ± 0.5  0.97 (0.85-1.10, p=.610)  0.96 (0.84-1.09, p=.507)  #> obstruct                       Mean ± SD      0.2 ± 0.4  1.27 (1.09-1.49, p=.003)  1.24 (1.05-1.45, p=.009)  #> perfor                         Mean ± SD      0.0 ± 0.2  1.30 (0.92-1.85, p=.142)  1.22 (0.85-1.74, p=.275)  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————— autoReg(fit,uni=TRUE,final=TRUE) %>% myft() #> a flextable object. #> col_keys: `Dependent:  #> Surv(time, status)`, ` `, `all`, `HR (univariable)`, `HR (multivariable)`, `HR (final)`  #> header has 1 row(s)  #> body has 7 row(s)  #> original dataset sample:  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: Surv(time, status)                 all          HR (univariable)         HR (multivariable)            HR (final)          #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> rx                             Obs          630 (33.9%)                                                                                #>                                Lev          620 (33.4%)  0.98 (0.84-1.14, p=.786)  0.98 (0.84-1.14, p=.781)  0.98 (0.84-1.14, p=.795)  #>                                Lev+5FU      608 (32.7%)  0.64 (0.55-0.76, p<.001)  0.65 (0.55-0.76, p<.001)  0.65 (0.55-0.76, p<.001)  #> age                            Mean ± SD    59.8 ± 11.9  1.00 (0.99-1.00, p=.382)                                                      #> sex                            Mean ± SD      0.5 ± 0.5  0.97 (0.85-1.10, p=.610)                                                      #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— data(colon_s,package=\"finalfit\") fit=coxph(Surv(time,status)~age.factor+sex.factor+obstruct.factor+perfor.factor,data=colon_s) autoReg(fit,uni=TRUE,threshold=1) #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: Surv(time, status)                   all          HR (univariable)         HR (multivariable)      #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Age                            <40 years        69 (7.6%)                                                      #>                                40-59 years    337 (37.1%)  0.76 (0.53-1.09, p=.132)  0.79 (0.55-1.13, p=.196)  #>                                60+ years      502 (55.3%)  0.93 (0.66-1.31, p=.668)  0.98 (0.69-1.40, p=.926)  #> Sex                            Female         437 (48.1%)                                                      #>                                Male           471 (51.9%)  1.01 (0.84-1.22, p=.888)  1.02 (0.85-1.23, p=.812)  #> Obstruction                    No             732 (80.6%)                                                      #>                                Yes            176 (19.4%)  1.29 (1.03-1.62, p=.028)  1.30 (1.03-1.64, p=.026)  #> Perforation                    No             881 (97.0%)                                                      #>                                Yes              27 (3.0%)  1.17 (0.70-1.95, p=.556)  1.08 (0.64-1.81, p=.785)  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————— autoReg(fit,uni=TRUE,imputed=TRUE) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent: Surv(time, status)                   all          HR (univariable)         HR (multivariable)           HR (imputed)         #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> Age                            <40 years        69 (7.6%)                                                                                #>                                40-59 years    337 (37.1%)  0.76 (0.53-1.09, p=.132)  0.79 (0.55-1.14, p=.203)  0.77 (0.54-1.11, p=.163)  #>                                60+ years      502 (55.3%)  0.93 (0.66-1.31, p=.668)  0.99 (0.70-1.40, p=.943)  0.96 (0.68-1.36, p=.818)  #> Sex                            Female         437 (48.1%)                                                                                #>                                Male           471 (51.9%)  1.01 (0.84-1.22, p=.888)                                                      #> Obstruction                    No             732 (80.6%)                                                                                #>                                Yes            176 (19.4%)  1.29 (1.03-1.62, p=.028)  1.31 (1.04-1.64, p=.022)  1.31 (1.04-1.64, p=.021)  #> Perforation                    No             881 (97.0%)                                                                                #>                                Yes              27 (3.0%)  1.17 (0.70-1.95, p=.556)                                                      #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","text":"Perform univariable multivariable regression stepwise backward regression automatically","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","text":"","code":"autoReg_sub(   fit,   threshold = 0.2,   uni = FALSE,   multi = TRUE,   final = FALSE,   imputed = FALSE,   keepstats = FALSE,   showstats = TRUE,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/autoReg_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform univariable and multivariable regression and stepwise backward regression automatically — autoReg_sub","text":"fit object class lm glm threshold numeric uni logical whether perform univariate regression multi logical whether perform multivariate regression final logical whether perform stepwise backward elimination imputed logical whether include imputed model keepstats logical whether keep statistics showstats logical whether show descriptive statistics ... arguments passed imputedReg()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/beNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Whether a string vector can be converted to numeric — beNumeric","title":"Whether a string vector can be converted to numeric — beNumeric","text":"Whether string vector can converted numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/beNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Whether a string vector can be converted to numeric — beNumeric","text":"","code":"beNumeric(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/beNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Whether a string vector can be converted to numeric — beNumeric","text":"x string vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap simulation for model prediction — bootPredict","title":"Bootstrap simulation for model prediction — bootPredict","text":"Generate model predictions specified set explanatory levels bootstrapped confidence intervals.","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap simulation for model prediction — bootPredict","text":"","code":"bootPredict(fit, newdata, R = 100, type = \"response\", ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap simulation for model prediction — bootPredict","text":"fit object class lm glm newdata data.frame R Number simulations. Note default R=100 low. type type prediction required, see predict.glm. default glm models scale response variable. Thus binomial model default predictions predicted probabilities. ... arguments passed boot::boot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/bootPredict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap simulation for model prediction — bootPredict","text":"","code":"data(GBSG2,package=\"TH.data\") fit=glm(cens~horTh+pnodes,data=GBSG2,family=\"binomial\") newdata=expand.grid(horTh=factor(c(1,2),labels=c(\"no\",\"yes\")),pnodes=1:51) bootPredict(fit,newdata) #>     horTh pnodes  estimate     lower     upper #> 1      no      1 0.3671628 0.3149055 0.4312047 #> 2     yes      1 0.2814584 0.2194606 0.3660471 #> 3      no      2 0.3927672 0.3457416 0.4559042 #> 4     yes      2 0.3039568 0.2426096 0.3890467 #> 5      no      3 0.4189750 0.3733506 0.4794009 #> 6     yes      3 0.3274340 0.2659626 0.4125736 #> 7      no      4 0.4456481 0.3978071 0.5001450 #> 8     yes      4 0.3518080 0.2879523 0.4360379 #> 9      no      5 0.4726379 0.4173108 0.5281968 #> 10    yes      5 0.3769795 0.3108641 0.4554245 #> 11     no      6 0.4997887 0.4353082 0.5613438 #> 12    yes      6 0.4028326 0.3320153 0.4775872 #> 13     no      7 0.5269407 0.4535595 0.5939398 #> 14    yes      7 0.4292372 0.3538674 0.5016205 #> 15     no      8 0.5539343 0.4720845 0.6255691 #> 16    yes      8 0.4560509 0.3763480 0.5278319 #> 17     no      9 0.5806134 0.4906866 0.6551426 #> 18    yes      9 0.4831217 0.3995029 0.5613311 #> 19     no     10 0.6068295 0.5093140 0.6876799 #> 20    yes     10 0.5102919 0.4190892 0.5942889 #> 21     no     11 0.6324443 0.5279149 0.7184404 #> 22    yes     11 0.5374015 0.4377924 0.6284320 #> 23     no     12 0.6573325 0.5464375 0.7476205 #> 24    yes     12 0.5642918 0.4571852 0.6580763 #> 25     no     13 0.6813846 0.5648310 0.7773095 #> 26    yes     13 0.5908091 0.4767339 0.6875965 #> 27     no     14 0.7045073 0.5844477 0.8044179 #> 28    yes     14 0.6168084 0.4962474 0.7200492 #> 29     no     15 0.7266252 0.6041410 0.8275630 #> 30    yes     15 0.6421564 0.5157741 0.7503534 #> 31     no     16 0.7476805 0.6235023 0.8484129 #> 32    yes     16 0.6667336 0.5357894 0.7783842 #> 33     no     17 0.7676327 0.6404972 0.8669868 #> 34    yes     17 0.6904365 0.5557272 0.8038532 #> 35     no     18 0.7864578 0.6559424 0.8834825 #> 36    yes     18 0.7131789 0.5746319 0.8270021 #> 37     no     19 0.8041469 0.6697383 0.8981667 #> 38    yes     19 0.7348919 0.5928261 0.8479314 #> 39     no     20 0.8207047 0.6839267 0.9111805 #> 40    yes     20 0.7555247 0.6107670 0.8667324 #> 41     no     21 0.8361480 0.6978845 0.9226690 #> 42    yes     21 0.7750433 0.6257687 0.8835239 #> 43     no     22 0.8505034 0.7114860 0.9327762 #> 44    yes     22 0.7934296 0.6387136 0.8984438 #> 45     no     23 0.8638059 0.7247163 0.9416415 #> 46    yes     23 0.8106802 0.6516201 0.9116400 #> 47     no     24 0.8760972 0.7375629 0.9493972 #> 48    yes     24 0.8268046 0.6649186 0.9232648 #> 49     no     25 0.8874238 0.7500157 0.9561668 #> 50    yes     25 0.8418238 0.6779456 0.9334689 #> 51     no     26 0.8978357 0.7620669 0.9620640 #> 52    yes     26 0.8557676 0.6906846 0.9423983 #> 53     no     27 0.9073851 0.7737108 0.9671924 #> 54    yes     27 0.8686741 0.7031212 0.9501911 #> 55     no     28 0.9161253 0.7849668 0.9716458 #> 56    yes     28 0.8805867 0.7152426 0.9569758 #> 57     no     29 0.9241097 0.7959895 0.9755080 #> 58    yes     29 0.8915537 0.7270384 0.9628709 #> 59     no     30 0.9313909 0.8065843 0.9788540 #> 60    yes     30 0.9016260 0.7385000 0.9679839 #> 61     no     31 0.9380204 0.8167533 0.9817501 #> 62    yes     31 0.9108563 0.7496207 0.9724118 #> 63     no     32 0.9440478 0.8265004 0.9842546 #> 64    yes     32 0.9192981 0.7603957 0.9762414 #> 65     no     33 0.9495206 0.8358308 0.9864192 #> 66    yes     33 0.9270045 0.7710850 0.9795497 #> 67     no     34 0.9544839 0.8447514 0.9882889 #> 68    yes     34 0.9340278 0.7825291 0.9824049 #> 69     no     35 0.9589802 0.8532699 0.9899031 #> 70    yes     35 0.9404188 0.7935489 0.9848670 #> 71     no     36 0.9630496 0.8613953 0.9912961 #> 72    yes     36 0.9462263 0.8041447 0.9869886 #> 73     no     37 0.9667293 0.8691374 0.9924978 #> 74    yes     37 0.9514970 0.8143191 0.9888157 #> 75     no     38 0.9700539 0.8765068 0.9935343 #> 76    yes     38 0.9562749 0.8240758 0.9903884 #> 77     no     39 0.9730556 0.8835146 0.9944279 #> 78    yes     39 0.9606016 0.8334202 0.9917414 #> 79     no     40 0.9757639 0.8901724 0.9951983 #> 80    yes     40 0.9645161 0.8423591 0.9929051 #> 81     no     41 0.9782061 0.8964921 0.9958624 #> 82    yes     41 0.9680546 0.8509001 0.9939055 #> 83     no     42 0.9804072 0.9024860 0.9964346 #> 84    yes     42 0.9712507 0.8590521 0.9947655 #> 85     no     43 0.9823899 0.9081664 0.9969278 #> 86    yes     43 0.9741357 0.8668246 0.9955044 #> 87     no     44 0.9841753 0.9135458 0.9973527 #> 88    yes     44 0.9767380 0.8742280 0.9961393 #> 89     no     45 0.9857822 0.9186365 0.9977189 #> 90    yes     45 0.9790842 0.8812731 0.9966847 #> 91     no     46 0.9872281 0.9234509 0.9980344 #> 92    yes     46 0.9811982 0.8879713 0.9971532 #> 93     no     47 0.9885287 0.9280012 0.9983062 #> 94    yes     47 0.9831023 0.8943343 0.9975556 #> 95     no     48 0.9896982 0.9322993 0.9985403 #> 96    yes     48 0.9848165 0.9003740 0.9979011 #> 97     no     49 0.9907496 0.9363569 0.9987421 #> 98    yes     49 0.9863593 0.9061023 0.9981978 #> 99     no     50 0.9916946 0.9401857 0.9989159 #> 100   yes     50 0.9877472 0.9115316 0.9984525 #> 101    no     51 0.9925437 0.9437966 0.9990657 #> 102   yes     51 0.9889955 0.9166737 0.9986713 library(survival) fit=coxph(Surv(time,cens)~age+horTh+progrec+pnodes,data=GBSG2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract statistics from an object of class crr — crr2stats","title":"Extract statistics from an object of class crr — crr2stats","text":"Extract statistics object class crr","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract statistics from an object of class crr — crr2stats","text":"","code":"crr2stats(x, digits = 2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract statistics from an object of class crr — crr2stats","text":"x object class crr digits integer indication position decimal place","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crr2stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract statistics from an object of class crr — crr2stats","text":"","code":"data(melanoma,package=\"boot\") melanoma$status_crr=ifelse(melanoma$status==1,1,ifelse(melanoma$status==2,0,2)) x=crrFormula(time+status_crr~age+sex+thickness+ulcer,data=melanoma) crr2stats(x) #>                 HR     lower    upper      p        id                    stats #> age       1.005945 0.9877942 1.024430 0.5200       age 1.01 (0.99-1.02, p=.520) #> sex       1.499349 0.8736380 2.573204 0.1400       sex 1.50 (0.87-2.57, p=.140) #> thickness 1.094169 1.0149120 1.179615 0.0190 thickness 1.09 (1.01-1.18, p=.019) #> ulcer     3.091416 1.7055657 5.603335 0.0002     ulcer 3.09 (1.71-5.60, p<.001)"},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":null,"dir":"Reference","previous_headings":"","what":"Competing Risk Regression with Formula — crrFormula","title":"Competing Risk Regression with Formula — crrFormula","text":"Competing Risk Regression Formula","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Competing Risk Regression with Formula — crrFormula","text":"","code":"crrFormula(x, data)"},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Competing Risk Regression with Formula — crrFormula","text":"x formula time+status~explanatory variables data data data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/crrFormula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Competing Risk Regression with Formula — crrFormula","text":"","code":"data(melanoma,package=\"boot\") melanoma$status_crr=ifelse(melanoma$status==1,1,ifelse(melanoma$status==2,0,2)) crrFormula(time+status_crr~age+sex+thickness+ulcer,data=melanoma) #> convergence:  TRUE  #> coefficients: #>       age       sex thickness     ulcer  #>  0.005928  0.405000  0.089990  1.129000  #> standard errors: #> [1] 0.00929 0.27560 0.03836 0.30340 #> two-sided p-values: #>       age       sex thickness     ulcer  #>    0.5200    0.1400    0.0190    0.0002"},{"path":"https://cardiomoon.github.io/autoReg/reference/descNum.html","id":null,"dir":"Reference","previous_headings":"","what":"Make description for numeric summary — descNum","title":"Make description for numeric summary — descNum","text":"Make description numeric summary","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/descNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make description for numeric summary — descNum","text":"","code":"descNum(method = 1, p = NULL)"},{"path":"https://cardiomoon.github.io/autoReg/reference/descNum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make description for numeric summary — descNum","text":"method numeric p numeric NULL","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/df2flextable.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame to flextable — df2flextable","title":"Convert data.frame to flextable — df2flextable","text":"Convert data.frame flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/df2flextable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame to flextable — df2flextable","text":"","code":"df2flextable(   df,   vanilla = FALSE,   fontname = NULL,   fontsize = 12,   add.rownames = FALSE,   even_header = \"transparent\",   odd_header = \"#5B7778\",   even_body = \"#EFEFEF\",   odd_body = \"transparent\",   vlines = TRUE,   colorheader = FALSE,   digits = 2,   digitp = 3,   align_header = \"center\",   align_body = \"right\",   align_rownames = \"left\",   NA2space = TRUE,   pcol = NULL,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/df2flextable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame to flextable — df2flextable","text":"df data.frame vanilla Logical fontname Font name fontsize font size add.rownames logical. Whether include rownames even_header background color even_header odd_header background color even_header even_body background color even_body odd_body background color even_body vlines Logical. Whether draw vertical lines colorheader Logical. Whether use color header digits integer indicating number decimal places digitp integer indicating number decimal places p values align_header alignment header. Expected value one 'left', 'right', 'center', 'justify'. align_body alignment body. Expected value one 'left', 'right', 'center', 'justify'. align_rownames alignment rownames. Expected value one 'left', 'right', 'center', 'justify'. NA2space logical. true, convert NA value space pcol integer indicating p value. specified, convert value less 0.01 \"< 0.001\" given column. ... arguments passed flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":null,"dir":"Reference","previous_headings":"","what":"draw line character — drawline","title":"draw line character — drawline","text":"draw line character","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw line character — drawline","text":"","code":"drawline(n)"},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw line character — drawline","text":"n Numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/drawline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"draw line character — drawline","text":"","code":"drawline(10) #> ——————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":null,"dir":"Reference","previous_headings":"","what":"filldown vector with lead value — filldown","title":"filldown vector with lead value — filldown","text":"filldown vector lead value","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filldown vector with lead value — filldown","text":"","code":"filldown(x, what = c(\"\", NA))"},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filldown vector with lead value — filldown","text":"x vector Values filled","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/filldown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"filldown vector with lead value — filldown","text":"","code":"x=rep(1:5,each=3) x=removeDup(x,NA) filldown(x) #>  [1] 1 1 1 2 2 2 3 3 3 4 4 4 5 5 5"},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":null,"dir":"Reference","previous_headings":"","what":"Find first duplicated position — find1stDup","title":"Find first duplicated position — find1stDup","text":"Find first duplicated position","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find first duplicated position — find1stDup","text":"","code":"find1stDup(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find first duplicated position — find1stDup","text":"x vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/find1stDup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find first duplicated position — find1stDup","text":"","code":"x=rep(1:5,each=3) which(find1stDup(x)) #> [1]  1  4  7 10 13"},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":null,"dir":"Reference","previous_headings":"","what":"Find duplicated term — findDup","title":"Find duplicated term — findDup","text":"Find duplicated term","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find duplicated term — findDup","text":"","code":"findDup(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find duplicated term — findDup","text":"x vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/findDup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find duplicated term — findDup","text":"","code":"x=rep(1:5,each=3) findDup(x) #>  [1] FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE #> [13] FALSE  TRUE  TRUE which(!findDup(x)) #> [1]  1  4  7 10 13"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":null,"dir":"Reference","previous_headings":"","what":"Make final model using stepwise backward elimination — fit2final","title":"Make final model using stepwise backward elimination — fit2final","text":"Make final model using stepwise backward elimination","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make final model using stepwise backward elimination — fit2final","text":"","code":"fit2final(fit, threshold = 0.2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make final model using stepwise backward elimination — fit2final","text":"fit object class coxph threshold Numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2final.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make final model using stepwise backward elimination — fit2final","text":"","code":"require(survival) data(cancer) fit=coxph(Surv(time,status)~age+sex+obstruct+perfor,data=colon) final=fit2final(fit) fit2summary(final) #>                id                    stats #> obstruct obstruct 1.27 (1.09-1.49, p=.003)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a list of univariable model with multivariable regression model — fit2list","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"Make list univariable model multivariable regression model","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"","code":"fit2list(fit)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"fit object class lm glm","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a list of univariable model with multivariable regression model — fit2list","text":"","code":"library(survival) data(cancer) fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") fit2list(fit) #> [[1]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)        rxLev    rxLev+5FU   #>     0.19290     -0.06774     -0.62670   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1819 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2491 \tAIC: 2497 #>  #> [[2]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)          sex   #>   -0.004598    -0.050038   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1820 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2525 \tAIC: 2529 #>  #> [[3]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)          age   #>    0.211300    -0.004049   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1820 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2524 \tAIC: 2528 #>  #> [[4]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)     obstruct   #>    -0.07895      0.24982   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1820 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2521 \tAIC: 2525 #>  #> [[5]] #>  #> Call:  glm(formula = as.formula(myformula), family = family, data = data) #>  #> Coefficients: #> (Intercept)        nodes   #>     -0.6886       0.1891   #>  #> Degrees of Freedom: 1821 Total (i.e. Null);  1820 Residual #> Null Deviance:\t    2525  #> Residual Deviance: 2382 \tAIC: 2386 #>  #> attr(,\"class\") #> [1] \"fitlist\" fit=lm(mpg~wt*hp+am,data=mtcars) fit2list(fit) #> [[1]] #>  #> Call: #> lm(formula = as.formula(myformula), data = data) #>  #> Coefficients: #> (Intercept)           wt   #>      37.285       -5.344   #>  #>  #> [[2]] #>  #> Call: #> lm(formula = as.formula(myformula), data = data) #>  #> Coefficients: #> (Intercept)           hp   #>    30.09886     -0.06823   #>  #>  #> [[3]] #>  #> Call: #> lm(formula = as.formula(myformula), data = data) #>  #> Coefficients: #> (Intercept)           am   #>      17.147        7.245   #>  #>  #> [[4]] #>  #> Call: #> lm(formula = as.formula(myformula), data = data) #>  #> Coefficients: #> (Intercept)        wt:hp   #>    27.74564     -0.01487   #>  #>  #> attr(,\"class\") #> [1] \"fitlist\""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore fit model data containing AsIs expressions — fit2model","title":"Restore fit model data containing AsIs expressions — fit2model","text":"Restore fit model data containing AsIs expressions","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore fit model data containing AsIs expressions — fit2model","text":"","code":"fit2model(fit)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore fit model data containing AsIs expressions — fit2model","text":"fit object class lm, glm coxph","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore fit model data containing AsIs expressions — fit2model","text":"data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restore fit model data containing AsIs expressions — fit2model","text":"","code":"require(survival) pbc$status2=ifelse(pbc$status==2,1,0) fit=coxph(Surv(time,status2)~age+log(bili),data=pbc) fit2model(fit) #> Error in eval(predvars, data, env): object 'status2' not found"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"Make multivariable regression model selecting univariable models p.value threshold","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"","code":"fit2multi(fit, threshold = 0.2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"fit object class coxph threshold Numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make multivariable regression model by selecting univariable models with p.value below threshold — fit2multi","text":"","code":"require(survival) data(cancer) fit=coxph(Surv(time,status)~age+sex+obstruct+perfor,data=colon) fit2multi(fit) #> Call: #> coxph(formula = Surv(time, status) ~ obstruct + perfor, data = colon) #>  #>             coef exp(coef) se(coef)     z       p #> obstruct 0.23061   1.25937  0.08125 2.838 0.00453 #> perfor   0.19189   1.21154  0.18189 1.055 0.29144 #>  #> Likelihood ratio test=9.7  on 2 df, p=0.007821 #> n= 1858, number of events= 920"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize statistics with a model — fit2stats","title":"Summarize statistics with a model — fit2stats","text":"Summarize statistics model","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize statistics with a model — fit2stats","text":"","code":"fit2stats(fit, method = \"likelihood\", digits = 2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize statistics with a model — fit2stats","text":"fit object class lm glm method character choices one c(\"likelihood\",\"wald\") digits integer indicating number decimal places","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize statistics with a model — fit2stats","text":"","code":"library(survival) data(cancer) fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") fit2stats(fit) #>               OR lower upper      p          id                    stats #> (Intercept) 0.53  0.30  0.92 0.0246 (Intercept) 0.53 (0.30-0.92, p=.025) #> rxLev       0.94  0.74  1.18 0.5757       rxLev 0.94 (0.74-1.18, p=.576) #> rxLev+5FU   0.53  0.42  0.68 0.0000   rxLev+5FU 0.53 (0.42-0.68, p<.001) #> sex         0.95  0.78  1.15 0.5885         sex 0.95 (0.78-1.15, p=.589) #> age         1.00  0.99  1.01 0.5826         age 1.00 (0.99-1.01, p=.583) #> obstruct    1.34  1.05  1.72 0.0178    obstruct 1.34 (1.05-1.72, p=.018) #> nodes       1.21  1.17  1.26 0.0000       nodes 1.21 (1.17-1.26, p<.001) fit=lm(mpg~wt*hp+am,data=mtcars) fit2stats(fit) #>                      id    Estimate        lower       upper #> (Intercept) (Intercept) 49.45224079  38.61707633 60.28740526 #> wt                   wt -8.10055755 -11.77194963 -4.42916547 #> hp                   hp -0.11930318  -0.17377926 -0.06482709 #> am                   am  0.12510693  -2.61086742  2.86108128 #> wt:hp             wt:hp  0.02748826   0.01010407  0.04487245 #>                                       stats #> (Intercept)  49.45 (38.62 to 60.29, p<.001) #> wt          -8.10 (-11.77 to -4.43, p<.001) #> hp           -0.12 (-0.17 to -0.06, p<.001) #> am             0.13 (-2.61 to 2.86, p=.926) #> wt:hp           0.03 (0.01 to 0.04, p=.003)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize statistics with a model or model list — fit2summary","title":"Summarize statistics with a model or model list — fit2summary","text":"Summarize statistics model model list","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize statistics with a model or model list — fit2summary","text":"","code":"fit2summary(fit, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize statistics with a model or model list — fit2summary","text":"fit object class lm glm fitlist ... argument passed fit2stats","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/fit2summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize statistics with a model or model list — fit2summary","text":"","code":"library(survival) data(cancer) fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") fit2summary(fit) #>                      id                    stats #> (Intercept) (Intercept) 0.53 (0.30-0.92, p=.025) #> rxLev             rxLev 0.94 (0.74-1.18, p=.576) #> rxLev+5FU     rxLev+5FU 0.53 (0.42-0.68, p<.001) #> sex                 sex 0.95 (0.78-1.15, p=.589) #> age                 age 1.00 (0.99-1.01, p=.583) #> obstruct       obstruct 1.34 (1.05-1.72, p=.018) #> nodes             nodes 1.21 (1.17-1.26, p<.001) fitlist=fit2list(fit) fit2summary(fitlist) #>                  id                    stats #> rxLev         rxLev 0.93 (0.75-1.17, p=.554) #> rxLev+5FU rxLev+5FU 0.53 (0.42-0.67, p<.001) #> sex             sex 0.95 (0.79-1.14, p=.594) #> age             age 1.00 (0.99-1.00, p=.305) #> obstruct   obstruct 1.28 (1.02-1.62, p=.036) #> nodes         nodes 1.21 (1.17-1.25, p<.001)"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.formula_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce table for descriptive statistics — gaze.formula_sub","title":"Produce table for descriptive statistics — gaze.formula_sub","text":"Produce table descriptive statistics groups several variables easily. Depending  nature variables, different descriptive statistical methods used(t-test, ANOVA, Kruskal-Wallis, chi-squared, Fisher's,...)","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.formula_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce table for descriptive statistics — gaze.formula_sub","text":"","code":"# S3 method for formula_sub gaze(x, data, missing = FALSE, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.formula_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce table for descriptive statistics — gaze.formula_sub","text":"x object class \"formula\". Left side ~ must contain name one grouping variable two grouping variables additive way(e.g. sex+group~), right side ~ must variables additive way. data data.frame missing logical true, missing value analysis performed ... arguments passed gaze()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce table for descriptive statistics — gaze","title":"Produce table for descriptive statistics — gaze","text":"Produce table descriptive statistics groups several variables easily. Depending  nature variables, different descriptive statistical methods used(t-test, ANOVA, Kruskal-Wallis, chi-squared, Fisher's,...)","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce table for descriptive statistics — gaze","text":"","code":"gaze(x, ...)  # S3 method for formula gaze(x, ...)  # S3 method for data.frame gaze(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce table for descriptive statistics — gaze","text":"x R object, formula data.frame ... arguments passed gaze.data.frame gaze.formula","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Produce table for descriptive statistics — gaze","text":"formula: S3 method formula data.frame: default S3 method","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce table for descriptive statistics — gaze","text":"","code":"library(moonBook) library(dplyr) gaze(acs) #> ————————————————————————————————————————————————— #>        name            levels          stats      #> ————————————————————————————————————————————————— #> age               Mean ± SD           63.3 ± 11.7  #> sex               Female              287 (33.5%)  #>                   Male                570 (66.5%)  #> cardiogenicShock  No                  805 (93.9%)  #>                   Yes                   52 (6.1%)  #> entry             Femoral             312 (36.4%)  #>                   Radial              545 (63.6%)  #> Dx                NSTEMI              153 (17.9%)  #>                   STEMI               304 (35.5%)  #>                   Unstable Angina     400 (46.7%)  #> EF                Mean ± SD            55.8 ± 9.6  #> height            Mean ± SD           163.2 ± 9.1  #> weight            Mean ± SD           64.8 ± 11.4  #> BMI               Mean ± SD            24.3 ± 3.3  #> obesity           No                  567 (66.2%)  #>                   Yes                 290 (33.8%)  #> TC                Mean ± SD          185.2 ± 47.8  #> LDLC              Mean ± SD          116.6 ± 41.1  #> HDLC              Mean ± SD           38.2 ± 11.1  #> TG                Mean ± SD          125.2 ± 90.9  #> DM                No                  553 (64.5%)  #>                   Yes                 304 (35.5%)  #> HBP               No                  356 (41.5%)  #>                   Yes                 501 (58.5%)  #> smoking           Ex-smoker           204 (23.8%)  #>                   Never               332 (38.7%)  #>                   Smoker              321 (37.5%)  #> ————————————————————————————————————————————————— gaze(~age+sex,data=acs) #> —————————————————————————————— #>  name   levels       stats     #> —————————————————————————————— #> age   Mean ± SD    63.3 ± 11.7  #> sex   Female       287 (33.5%)  #>       Male         570 (66.5%)  #> —————————————————————————————— gaze(sex~.,data=acs,digits=1,method=1,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `Female (N=287)`, `Male (N=570)`, `p`  #> header has 1 row(s)  #> body has 25 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————————————— #>   Dependent:sex     levels        Female          Male        p    #>        (N)                       (N=287)        (N=570)            #> —————————————————————————————————————————————————————————————————— #> age               Mean ± SD       68.7 ± 10.7   60.6 ± 11.2  <.001  #> cardiogenicShock  No              275 (95.8%)     530 (93%)   .136  #>                   Yes               12 (4.2%)       40 (7%)         #> entry             Femoral         119 (41.5%)   193 (33.9%)   .035  #>                   Radial          168 (58.5%)   377 (66.1%)         #> —————————————————————————————————————————————————————————————————— # \\donttest{ gaze(sex~age+Dx,data=acs) #> ————————————————————————————————————————————————————————————————————— #>  Dependent:sex      levels           Female          Male        p    #>       (N)                           (N=287)        (N=570)            #> ————————————————————————————————————————————————————————————————————— #> age            Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  #> Dx             NSTEMI                 50 (17.4%)   103 (18.1%)   .012  #>                STEMI                  84 (29.3%)   220 (38.6%)         #>                Unstable Angina       153 (53.3%)   247 (43.3%)         #> ————————————————————————————————————————————————————————————————————— gaze(EF~.,data=acs) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `unit`, `value`  #> header has 1 row(s)  #> body has 26 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————— #>    Dependent:EF        levels        unit        value     #> —————————————————————————————————————————————————————————— #> age               [28,91]           Mean ± SD  63.3 ± 11.7  #> sex               Female (N=287)    Mean ± SD  56.3 ± 10.1  #>                   Male   (N=570)    Mean ± SD   55.6 ± 9.4  #> cardiogenicShock  No  (N=805)       Mean ± SD   56.1 ± 9.4  #>                   Yes (N=52)        Mean ± SD  50.2 ± 11.6  #> —————————————————————————————————————————————————————————— gaze(sex+Dx~.,data=acs,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `NSTEMI (N=50)`, `STEMI (N=84)`, `Unstable Angina (N=153)`, `p`, `NSTEMI (N=103)`, `STEMI (N=220)`, `Unstable Angina (N=247)`, `p  `  #> header has 2 row(s)  #> body has 22 row(s)  #> original dataset sample:  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>            sex (N)                                  Female (N=287)                                                 Male (N=570)                            #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>    Dependent:Dx     levels       NSTEMI         STEMI          Unstable Angina        p        NSTEMI          STEMI          Unstable Angina        p    #>        (N)                       (N=50)         (N=84)             (N=153)                    (N=103)         (N=220)             (N=247)                 #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD      70.9 ± 11.4   69.1 ± 10.4              67.7 ± 10.7   .177     61.1 ± 11.6    59.4 ± 11.7              61.4 ± 10.6   .133  #> cardiogenicShock  No                49 (98%)    73 (86.9%)               153 (100%)  <.001     100 (97.1%)    183 (83.2%)               247 (100%)  <.001  #>                   Yes                 1 (2%)    11 (13.1%)                   0 (0%)               3 (2.9%)     37 (16.8%)                   0 (0%)         #> entry             Femoral           22 (44%)    45 (53.6%)                 52 (34%)   .013        36 (35%)       88 (40%)               69 (27.9%)   .022  #>                   Radial            28 (56%)    39 (46.4%)                101 (66%)               67 (65%)      132 (60%)              178 (72.1%)         #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(sex+Dx~.,data=acs) #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>            sex (N)                                  Female (N=287)                                                 Male (N=570)                            #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>    Dependent:Dx     levels       NSTEMI         STEMI          Unstable Angina        p        NSTEMI          STEMI          Unstable Angina        p    #>        (N)                       (N=50)         (N=84)             (N=153)                    (N=103)         (N=220)             (N=247)                 #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD      70.9 ± 11.4   69.1 ± 10.4              67.7 ± 10.7   .177     61.1 ± 11.6    59.4 ± 11.7              61.4 ± 10.6   .133  #> cardiogenicShock  No                49 (98%)    73 (86.9%)               153 (100%)  <.001     100 (97.1%)    183 (83.2%)               247 (100%)  <.001  #>                   Yes                 1 (2%)    11 (13.1%)                   0 (0%)               3 (2.9%)     37 (16.8%)                   0 (0%)         #> entry             Femoral           22 (44%)    45 (53.6%)                 52 (34%)   .013        36 (35%)       88 (40%)               69 (27.9%)   .022  #>                   Radial            28 (56%)    39 (46.4%)                101 (66%)               67 (65%)      132 (60%)              178 (72.1%)         #> EF                Mean ± SD       54.8 ± 9.1   52.3 ± 10.9               59.4 ± 8.8  <.001      55.1 ± 9.4     52.4 ± 8.9               59.1 ± 8.7  <.001  #> height            Mean ± SD      154.2 ± 5.1   155.7 ± 5.4              152.6 ± 6.7   .002     167.5 ± 5.7    168.7 ± 6.0              167.3 ± 6.4   .055  #> weight            Mean ± SD      57.2 ± 10.3    57.4 ± 9.0               57.1 ± 9.1   .978      67.5 ± 8.4    68.8 ± 10.9              69.0 ± 10.6   .479  #> BMI               Mean ± SD       24.1 ± 4.3    23.6 ± 3.2               24.5 ± 3.5   .215      24.1 ± 2.6     24.1 ± 3.4               24.6 ± 3.4   .205  #> obesity           No                35 (70%)    60 (71.4%)               99 (64.7%)   .528      71 (68.9%)    149 (67.7%)              153 (61.9%)   .301  #>                   Yes               15 (30%)    24 (28.6%)               54 (35.3%)             32 (31.1%)     71 (32.3%)               94 (38.1%)         #> TC                Mean ± SD     196.3 ± 52.7  180.7 ± 45.7             191.1 ± 53.1   .192    192.6 ± 54.3   184.1 ± 42.6             178.7 ± 44.6   .036  #> LDLC              Mean ± SD     127.7 ± 39.5  111.0 ± 40.0             118.3 ± 41.8   .088    125.4 ± 47.1   118.9 ± 39.1             109.5 ± 39.2   .002  #> HDLC              Mean ± SD      40.1 ± 13.8   39.5 ± 11.2              38.5 ± 10.8   .627     38.4 ± 10.9    38.1 ± 10.9              37.4 ± 10.9   .655  #> TG                Mean ± SD     112.5 ± 51.1  112.3 ± 87.2             126.3 ± 76.0   .316   138.0 ± 100.2   104.3 ± 65.5            144.3 ± 114.2  <.001  #> DM                No                25 (50%)    54 (64.3%)               94 (61.4%)   .240      71 (68.9%)      154 (70%)              155 (62.8%)   .219  #>                   Yes               25 (50%)    30 (35.7%)               59 (38.6%)             32 (31.1%)       66 (30%)               92 (37.2%)         #> HBP               No                19 (38%)    28 (33.3%)               36 (23.5%)   .084      43 (41.7%)    122 (55.5%)              108 (43.7%)   .016  #>                   Yes               31 (62%)    56 (66.7%)              117 (76.5%)             60 (58.3%)     98 (44.5%)              139 (56.3%)         #> smoking           Ex-smoker          8 (16%)    13 (15.5%)               28 (18.3%)   .184        34 (33%)     53 (24.1%)               68 (27.5%)   .002  #>                   Never             37 (74%)    57 (67.9%)              115 (75.2%)             13 (12.6%)     40 (18.2%)               70 (28.3%)         #>                   Smoker             5 (10%)    14 (16.7%)                10 (6.5%)             56 (54.4%)    127 (57.7%)              109 (44.1%)         #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(Dx+sex~cardiogenicShock,data=acs,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `Female (N=50)`, `Male (N=103)`, `p`, `Female (N=84)`, `Male (N=220)`, `p  `, `Female (N=153)`, `Male (N=247)`, `p   `  #> header has 2 row(s)  #> body has 2 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>           Dx (N)                     NSTEMI (N=153)                      STEMI (N=304)                  Unstable Angina (N=400)         #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:sex    levels     Female          Male        p       Female          Male       p        Female          Male        p    #>        (N)                    (N=50)        (N=103)               (N=84)        (N=220)              (N=153)        (N=247)            #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> cardiogenicShock  No             49 (98%)   100 (97.1%)  1.000     73 (86.9%)   183 (83.2%)  .535      153 (100%)    247 (100%)  1.000  #>                   Yes              1 (2%)      3 (2.9%)            11 (13.1%)    37 (16.8%)                0 (0%)        0 (0%)         #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(Dx+sex+HBP~cardiogenicShock,data=acs,show.p=TRUE) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>             Dx                        NSTEMI                        NSTEMI                         STEMI                          STEMI                      Unstable Angina                  Unstable Angina            #>            sex                        Female                         Male                          Female                          Male                           Female                            Male                 #>            (N)                        (N=50)                        (N=103)                        (N=84)                        (N=220)                         (N=153)                          (N=247)                #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:HBP    levels     No         Yes        p        No         Yes        p        No         Yes       p        No          Yes        p       No          Yes        p         No          Yes         p     #>        (N)                  (N=19)      (N=31)             (N=43)      (N=60)             (N=28)      (N=56)            (N=122)      (N=98)            (N=36)      (N=117)             (N=108)      (N=139)             #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> cardiogenicShock  No        19 (100%)  30 (96.8%)  1.000  42 (97.7%)  58 (96.7%)  1.000  23 (82.1%)  50 (89.3%)  .567  106 (86.9%)  77 (78.6%)   .145  36 (100%)   117 (100%)   1.000  108 (100%)   139 (100%)    1.000  #>                   Yes          0 (0%)    1 (3.2%)           1 (2.3%)    2 (3.3%)          5 (17.9%)   6 (10.7%)         16 (13.1%)  21 (21.4%)            0 (0%)       0 (0%)              0 (0%)       0 (0%)           #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(~mpg+cyl,data=mtcars) #> ————————————————————————————— #>  name   levels      stats     #> ————————————————————————————— #> mpg   Mean ± SD    20.1 ± 6.0  #> cyl   Mean ± SD     6.2 ± 1.8  #> ————————————————————————————— gaze(~.,data=mtcars) #> ———————————————————————————————— #>  name   levels        stats      #> ———————————————————————————————— #> mpg   Mean ± SD       20.1 ± 6.0  #> cyl   Mean ± SD        6.2 ± 1.8  #> disp  Mean ± SD    230.7 ± 123.9  #> hp    Mean ± SD     146.7 ± 68.6  #> drat  Mean ± SD        3.6 ± 0.5  #> wt    Mean ± SD        3.2 ± 1.0  #> qsec  Mean ± SD       17.8 ± 1.8  #> vs    Mean ± SD        0.4 ± 0.5  #> am    Mean ± SD        0.4 ± 0.5  #> gear  Mean ± SD        3.7 ± 0.7  #> carb  Mean ± SD        2.8 ± 1.6  #> ———————————————————————————————— gaze(cyl~.,data=mtcars,show.p=TRUE) #> ——————————————————————————————————————————————————————————————————————————— #>  Dependent:cyl   levels         4             6             8          p    #>       (N)                     (N=11)        (N=7)         (N=14)            #> ——————————————————————————————————————————————————————————————————————————— #> mpg            Mean ± SD      26.7 ± 4.5    19.7 ± 1.5    15.1 ± 2.6  <.001  #> disp           Mean ± SD    105.1 ± 26.9  183.3 ± 41.6  353.1 ± 67.8  <.001  #> hp             Mean ± SD     82.6 ± 20.9  122.3 ± 24.3  209.2 ± 51.0  <.001  #> drat           Mean ± SD       4.1 ± 0.4     3.6 ± 0.5     3.2 ± 0.4  <.001  #> wt             Mean ± SD       2.3 ± 0.6     3.1 ± 0.4     4.0 ± 0.8  <.001  #> qsec           Mean ± SD      19.1 ± 1.7    18.0 ± 1.7    16.8 ± 1.2   .002  #> vs             Mean ± SD       0.9 ± 0.3     0.6 ± 0.5     0.0 ± 0.0  <.001  #> am             Mean ± SD       0.7 ± 0.5     0.4 ± 0.5     0.1 ± 0.4   .010  #> gear           Mean ± SD       4.1 ± 0.5     3.9 ± 0.7     3.3 ± 0.7   .015  #> carb           Mean ± SD       1.5 ± 0.5     3.4 ± 1.8     3.5 ± 1.6   .003  #> ——————————————————————————————————————————————————————————————————————————— gaze(hp~.,data=mtcars) #> ————————————————————————————————————————————————————— #>  Dependent:hp    levels       unit         value      #> ————————————————————————————————————————————————————— #> mpg           [10.4,33.9]    Mean ± SD     20.1 ± 6.0  #> cyl           [4,8]          Mean ± SD      6.2 ± 1.8  #> disp          [71.1,472]     Mean ± SD  230.7 ± 123.9  #> drat          [2.8,4.9]      Mean ± SD      3.6 ± 0.5  #> wt            [1.5,5.4]      Mean ± SD      3.2 ± 1.0  #> qsec          [14.5,22.9]    Mean ± SD     17.8 ± 1.8  #> vs            [0,1]          Mean ± SD      0.4 ± 0.5  #> am            [0,1]          Mean ± SD      0.4 ± 0.5  #> gear          [3,5]          Mean ± SD      3.7 ± 0.7  #> carb          [1,8]          Mean ± SD      2.8 ± 1.6  #> ————————————————————————————————————————————————————— gaze(cyl+am~.,data=mtcars) #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>          cyl (N)                     4 (N=11)                          6 (N=7)                           8 (N=14)                #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>  Dependent:am   levels         0             1        p         0             1         p         0             1          p    #>      (N)                     (N=3)         (N=8)              (N=4)         (N=3)               (N=12)        (N=2)             #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> mpg           Mean ± SD      22.9 ± 1.5   28.1 ± 4.5  .089    19.1 ± 1.6    20.6 ± 0.8  .221    15.1 ± 2.8    15.4 ± 0.6   .866  #> disp          Mean ± SD    135.9 ± 14.0  93.6 ± 20.5  .010  204.6 ± 44.7   155.0 ± 8.7  .124  357.6 ± 71.8  326.0 ± 35.4   .563  #> hp            Mean ± SD     84.7 ± 19.7  81.9 ± 22.7  .856   115.2 ± 9.2  131.7 ± 37.5  .530  194.2 ± 33.4  299.5 ± 50.2   .002  #> drat          Mean ± SD       3.8 ± 0.1    4.2 ± 0.4  .094     3.4 ± 0.6     3.8 ± 0.2  .330     3.1 ± 0.2     3.9 ± 0.5   .002  #> wt            Mean ± SD       2.9 ± 0.4    2.0 ± 0.4  .010     3.4 ± 0.1     2.8 ± 0.1  .001     4.1 ± 0.8     3.4 ± 0.3   .218  #> qsec          Mean ± SD      21.0 ± 1.7   18.4 ± 1.1  .017    19.2 ± 0.8    16.3 ± 0.8  .005    17.1 ± 0.8    14.6 ± 0.1  <.001  #> vs            Mean ± SD       1.0 ± 0.0    0.9 ± 0.4  .351     1.0 ± 0.0     0.0 ± 0.0           0.0 ± 0.0     0.0 ± 0.0         #> gear          Mean ± SD       3.7 ± 0.6    4.2 ± 0.5  .113     3.5 ± 0.6     4.3 ± 0.6  .117     3.0 ± 0.0     5.0 ± 0.0         #> carb          Mean ± SD       1.7 ± 0.6    1.5 ± 0.5  .662     2.5 ± 1.7     4.7 ± 1.2  .122     3.1 ± 0.9     6.0 ± 2.8   .379  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for categorical variable — gazeCat","title":"Summary function for categorical variable — gazeCat","text":"Summary function categorical variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for categorical variable — gazeCat","text":"","code":"gazeCat(   data,   x,   y = NULL,   max.ylev = 5,   digits = 1,   show.total = FALSE,   show.n = FALSE,   show.missing = FALSE,   show.stats = TRUE,   origData = NULL,   show.p = TRUE,   method = 1,   catMethod = 2,   maxCatLevel = 20,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for categorical variable — gazeCat","text":"data data frame x Name categorical variable y Name variable, either continuous categorical max.ylev max.ylev integer indicating maximum number levels grouping variable ('y'). column unique values less max.ylev treated categorical variable. Default value 5. digits Numeric show.total logical. Whether show total column show.n logical. Whether show N column show.missing logical. Whether show missing column show.stats logical. Whether show stats column origData data.frame containing original data show.p logical. Whether show p column method method    integer indicating methods continuous variables. Possible values methods 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1. catMethod integer indicating methods categorical variables. Possible values methods 0 Perform chisq.test first. warning present, perform fisher test 1 Perform chisq.test without continuity correction 2 Perform chisq.test continuity correction 3 perform fisher.test 4 perform prop.trend test Default value 2. maxCatLevel integer indicating maximum number unique levels categorical variable. column unique values maxCatLevel, categorical summarization performed. ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function for categorical variable — gazeCat","text":"","code":"require(moonBook) gazeCat(acs,\"Dx\") #>   name            desc       stats                id        type #> 1   Dx          NSTEMI 153 (17.9%)          DxNSTEMI categorical #> 2                STEMI 304 (35.5%)           DxSTEMI categorical #> 3      Unstable Angina 400 (46.7%) DxUnstable Angina categorical gazeCat(acs,\"Dx\",\"smoking\") #> # A tibble: 3 × 8 #>   name  desc    `Ex-smoker (N=20… `Never (N=332)` `Smoker (N=321)` id      p     #>   <chr> <chr>   <chr>             <chr>           <chr>            <chr>   <chr> #> 1 \"Dx\"  NSTEMI  42 (20.6%)        50 (15.1%)      61 (19%)         DxNSTE… \"<.0… #> 2 \"\"    STEMI   66 (32.4%)        97 (29.2%)      141 (43.9%)      DxSTEMI \"\"    #> 3 \"\"    Unstab… 96 (47.1%)        185 (55.7%)     119 (37.1%)      DxUnst… \"\"    #> # … with 1 more variable: type <chr> gazeCat(acs,\"sex\",\"Dx\",show.p=TRUE) #> # A tibble: 2 × 8 #>   name  desc   `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angina (… id     p     #>   <chr> <chr>  <chr>            <chr>           <chr>               <chr>  <chr> #> 1 \"sex\" Female 50 (32.7%)       84 (27.6%)      153 (38.2%)         sexFe… \".01… #> 2 \"\"    Male   103 (67.3%)      220 (72.4%)     247 (61.8%)         sexMa… \"\"    #> # … with 1 more variable: type <chr> gazeCat(acs,\"Dx\",\"sex\",show.p=TRUE) #> # A tibble: 3 × 7 #>   name  desc            `Female (N=287)` `Male (N=570)` id         p     type    #>   <chr> <chr>           <chr>            <chr>          <chr>      <chr> <chr>   #> 1 \"Dx\"  NSTEMI          50 (17.4%)       103 (18.1%)    DxNSTEMI   \".01… catego… #> 2 \"\"    STEMI           84 (29.3%)       220 (38.6%)    DxSTEMI    \"\"    catego… #> 3 \"\"    Unstable Angina 153 (53.3%)      247 (43.3%)    DxUnstabl… \"\"    catego… gazeCat(acs,\"Dx\",\"EF\") #> # A tibble: 3 × 6 #>   name  desc                    unit      value      id                type      #>   <chr> <chr>                   <chr>     <chr>      <chr>             <chr>     #> 1 \"Dx\"  NSTEMI          (N=153) Mean ± SD 55.0 ± 9.3 DxNSTEMI          categori… #> 2 \"\"    STEMI           (N=304) Mean ± SD 52.4 ± 9.5 DxSTEMI           categori… #> 3 \"\"    Unstable Angina (N=400) Mean ± SD 59.2 ± 8.7 DxUnstable Angina categori… gazeCat(acs,\"sex\",\"EF\",method=2) #> # A tibble: 2 × 6 #>   name  desc           unit         value               id        type        #>   <chr> <chr>          <chr>        <chr>               <chr>     <chr>       #> 1 \"sex\" Female (N=287) Median (IQR) 59.2 (51.4 to 63.1) sexFemale categorical #> 2 \"\"    Male   (N=570) Median (IQR) 57.3 (50.0 to 61.8) sexMale   categorical gazeCat(mtcars,\"cyl\",\"hp\") #> # A tibble: 3 × 6 #>   name  desc     unit      value        id    type        #>   <chr> <chr>    <chr>     <chr>        <chr> <chr>       #> 1 \"cyl\" 4 (N=11) Mean ± SD 82.6 ± 20.9  cyl4  categorical #> 2 \"\"    6 (N=7)  Mean ± SD 122.3 ± 24.3 cyl6  categorical #> 3 \"\"    8 (N=14) Mean ± SD 209.2 ± 51.0 cyl8  categorical"},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for continuous variable — gazeCont","title":"Summary function for continuous variable — gazeCont","text":"Summary function continuous variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for continuous variable — gazeCont","text":"","code":"gazeCont(   data,   x,   y = NULL,   max.ylev = 5,   digits = 1,   show.total = FALSE,   show.n = FALSE,   show.missing = FALSE,   show.stats = TRUE,   show.p = TRUE,   method = 1,   origData,   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for continuous variable — gazeCont","text":"data data.frame x name variable y name variable, either continuous categorical max.ylev max.ylev integer indicating maximum number levels grouping variable ('y'). column unique values less max.ylev treated categorical variable. Default value 5. digits integer indicating number decimal places show.total logical. Whether show total column show.n logical. Whether show N column show.missing logical. Whether show missing column show.stats logical. Whether show stats column show.p logical. Whether show p column method method    integer indicating methods continuous variables. Possible values methods 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1. origData data.frame containing original data ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gazeCont.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function for continuous variable — gazeCont","text":"","code":"gazeCont(mtcars,\"hp\") #>   name      desc        stats       type id #> 1   hp Mean ± SD 146.7 ± 68.6 continuous hp gazeCont(mtcars,\"hp\",\"mpg\") #>   name     desc      unit        value       type id #> 1   hp [52,335] Mean ± SD 146.7 ± 68.6 continuous hp require(moonBook) gazeCont(acs,\"log(age)\") #>       name      desc     stats       type       id #> 1 log(age) Mean ± SD 4.1 ± 0.2 continuous log(age) gazeCont(acs,\"age\",method=2) #>   name         desc               stats       type  id #> 1  age Median (IQR) 64.0 (55.0 to 72.0) continuous age gazeCont(acs,\"age\",\"EF\",method=2) #>   name    desc         unit               value       type  id #> 1  age [28,91] Median (IQR) 64.0 (55.0 to 72.0) continuous age gazeCont(acs,\"age\",\"Dx\",method=1) #> # A tibble: 1 × 8 #>   name  desc      `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angina… p     type  #>   <chr> <chr>     <chr>            <chr>           <chr>             <chr> <chr> #> 1 age   Mean ± SD 64.3 ± 12.3      62.1 ± 12.1     63.8 ± 11.0       .073  cont… #> # … with 1 more variable: id <chr> gazeCont(acs,\"age\",\"Dx\",show.p=TRUE,method=3) #> # A tibble: 1 × 8 #>   name  desc    `NSTEMI (N=153)`  `STEMI (N=304)`  `Unstable Angina… p     type  #>   <chr> <chr>   <chr>             <chr>            <chr>             <chr> <chr> #> 1 age   Median… 65.0 (55.0 to 75… 62.0 (53.0 to 7… 65.0 (56.0 to 72… .109  cont… #> # … with 1 more variable: id <chr>"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function for categorical/continuous variable — gaze_sub","title":"Summary function for categorical/continuous variable — gaze_sub","text":"Summary function categorical/continuous variable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function for categorical/continuous variable — gaze_sub","text":"","code":"gaze_sub(data, xname, y = NULL, max.ylev = 5, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function for categorical/continuous variable — gaze_sub","text":"data data.frame xname name categorical/continuous vector y name vector, either continuous categorical max.ylev max.ylev integer indicating maximum number levels grouping variable ('y'). column unique values less max.ylev treated categorical variable. Default value 5. ... arguments passed gazeCont() gazeCat()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/gaze_sub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function for categorical/continuous variable — gaze_sub","text":"","code":"require(moonBook) gaze_sub(acs,\"age\") #>   name      desc       stats       type  id #> 1  age Mean ± SD 63.3 ± 11.7 continuous age gaze_sub(acs,\"log(age)\") #>       name      desc     stats       type       id #> 1 log(age) Mean ± SD 4.1 ± 0.2 continuous log(age) gaze_sub(acs,\"I(age^2)\") #>       name      desc       stats       type       id #> 1 I(age^2) Mean ± SD 63.3 ± 11.7 continuous I(age^2) gaze_sub(acs,\"sex\") #>   name   desc       stats        id        type #> 1  sex Female 287 (33.5%) sexFemale categorical #> 2        Male 570 (66.5%)   sexMale categorical gaze_sub(acs,\"age\",\"EF\") #>   name    desc      unit       value       type  id #> 1  age [28,91] Mean ± SD 63.3 ± 11.7 continuous age gaze_sub(acs,\"sex\",\"EF\") #> # A tibble: 2 × 6 #>   name  desc           unit      value       id        type        #>   <chr> <chr>          <chr>     <chr>       <chr>     <chr>       #> 1 \"sex\" Female (N=287) Mean ± SD 56.3 ± 10.1 sexFemale categorical #> 2 \"\"    Male   (N=570) Mean ± SD 55.6 ± 9.4  sexMale   categorical gaze_sub(acs,\"age\",\"Dx\") #> # A tibble: 1 × 8 #>   name  desc      `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angina… p     type  #>   <chr> <chr>     <chr>            <chr>           <chr>             <chr> <chr> #> 1 age   Mean ± SD 64.3 ± 12.3      62.1 ± 12.1     63.8 ± 11.0       .073  cont… #> # … with 1 more variable: id <chr> gaze_sub(acs,\"sex\",\"Dx\") #> # A tibble: 2 × 8 #>   name  desc   `NSTEMI (N=153)` `STEMI (N=304)` `Unstable Angina (… id     p     #>   <chr> <chr>  <chr>            <chr>           <chr>               <chr>  <chr> #> 1 \"sex\" Female 50 (32.7%)       84 (27.6%)      153 (38.2%)         sexFe… \".01… #> 2 \"\"    Male   103 (67.3%)      220 (72.4%)     247 (61.8%)         sexMa… \"\"    #> # … with 1 more variable: type <chr> gaze_sub(iris,\"Species\",\"Sepal.Length\") #> # A tibble: 3 × 6 #>   name      desc              unit      value     id                type        #>   <chr>     <chr>             <chr>     <chr>     <chr>             <chr>       #> 1 \"Species\" setosa     (N=50) Mean ± SD 5.0 ± 0.4 Speciessetosa     categorical #> 2 \"\"        versicolor (N=50) Mean ± SD 5.9 ± 0.5 Speciesversicolor categorical #> 3 \"\"        virginica  (N=50) Mean ± SD 6.6 ± 0.6 Speciesvirginica  categorical"},{"path":"https://cardiomoon.github.io/autoReg/reference/getGroupNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get specific group name — getGroupNames","title":"Get specific group name — getGroupNames","text":"Get specific group name","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getGroupNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get specific group name — getGroupNames","text":"","code":"getGroupNames(data, yvars)"},{"path":"https://cardiomoon.github.io/autoReg/reference/getGroupNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get specific group name — getGroupNames","text":"data data.frame yvars variable names","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getGroupNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get specific group name — getGroupNames","text":"","code":"library(moonBook) getGroupNames(acs,\"sex\") #> # A tibble: 2 × 2 #>   sex    n       #>   <chr>  <chr>   #> 1 Female (N=287) #> 2 Male   (N=570) getGroupNames(acs,c(\"sex\",\"Dx\")) #> # A tibble: 6 × 3 #>   sex    Dx              n       #>   <chr>  <chr>           <chr>   #> 1 Female NSTEMI          (N=50)  #> 2 Female STEMI           (N=84)  #> 3 Female Unstable Angina (N=153) #> 4 Male   NSTEMI          (N=103) #> 5 Male   STEMI           (N=220) #> 6 Male   Unstable Angina (N=247)"},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Get interaction data from data — getInteraction","title":"Get interaction data from data — getInteraction","text":"Get interaction data data","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get interaction data from data — getInteraction","text":"","code":"getInteraction(name, data)"},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get interaction data from data — getInteraction","text":"name string interaction term data data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getInteraction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get interaction data from data — getInteraction","text":"","code":"data(acs,package=\"moonBook\") getInteraction(\"TC:Dx:sex\",data=acs) #>         name                   desc                             id   n #> 1      TC:Dx                 NSTEMI                    TC:DxNSTEMI 153 #> 2      TC:Dx                  STEMI                     TC:DxSTEMI 304 #> 3      TC:Dx        Unstable Angina           TC:DxUnstable Angina 400 #> 4     TC:sex                 Female                   TC:sexFemale 287 #> 5     TC:sex                   Male                     TC:sexMale 570 #> 6     Dx:sex          NSTEMI:Female             DxNSTEMI:sexFemale  50 #> 7     Dx:sex           STEMI:Female              DxSTEMI:sexFemale  84 #> 8     Dx:sex Unstable Angina:Female    DxUnstable Angina:sexFemale 153 #> 9     Dx:sex            NSTEMI:Male               DxNSTEMI:sexMale 103 #> 10    Dx:sex             STEMI:Male                DxSTEMI:sexMale 220 #> 11    Dx:sex   Unstable Angina:Male      DxUnstable Angina:sexMale 247 #> 12 TC:Dx:sex          NSTEMI:Female          TC:DxNSTEMI:sexFemale  50 #> 13 TC:Dx:sex           STEMI:Female           TC:DxSTEMI:sexFemale  84 #> 14 TC:Dx:sex Unstable Angina:Female TC:DxUnstable Angina:sexFemale 153 #> 15 TC:Dx:sex            NSTEMI:Male            TC:DxNSTEMI:sexMale 103 #> 16 TC:Dx:sex             STEMI:Male             TC:DxSTEMI:sexMale 220 #> 17 TC:Dx:sex   Unstable Angina:Male   TC:DxUnstable Angina:sexMale 247"},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of data specified by 'name' and 'desc' — getN","title":"Get number of data specified by 'name' and 'desc' — getN","text":"Get number data specified 'name' 'desc'","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of data specified by 'name' and 'desc' — getN","text":"","code":"getN(name, desc, data)"},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of data specified by 'name' and 'desc' — getN","text":"name string interaction term desc character data data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get number of data specified by 'name' and 'desc' — getN","text":"","code":"data(acs,package=\"moonBook\") df=getInteraction(\"TC:Dx:sex\",data=acs) getN(name=df$name,desc=df$desc,data=acs) #>  [1] 153 304 400 287 570  50  84 153 103 220 247  50  84 153 103 220 247"},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get explanatory variables of a model with significance level below the threshold — getSigVars","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"Get explanatory variables model significance level threshold","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"","code":"getSigVars(fit, threshold = 0.2, final = TRUE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"fit object class lm glm threshold Numeric final logical true, perform stepwise regression using step()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/getSigVars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get explanatory variables of a model with significance level below the threshold — getSigVars","text":"","code":"library(survival) data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") getSigVars(fit) #> $sigVars #> [1] \"rx\"       \"obstruct\" \"nodes\"    #>  #> $finalVars #> [1] \"rx\"       \"obstruct\" \"nodes\"    #>  fit=lm(mpg~hp*wt+am,data=mtcars) getSigVars(fit) #> $sigVars #> [1] \"hp\"    \"wt\"    \"am\"    \"hp:wt\" #>  #> $finalVars #> [1] \"hp\"    \"wt\"    \"hp:wt\" #>"},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"Draw Cumulative Incidence Curves Competing Risks","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"","code":"ggcmprsk(fit, cnames = NULL, se = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"fit  object class cuminc cnames character vector se logical whether show confidence interval","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/ggcmprsk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Cumulative Incidence Curves for Competing Risks — ggcmprsk","text":"","code":"library(cmprsk) data(melanoma,package=\"boot\") melanoma$status1 = ifelse(melanoma$status==1,1,ifelse(melanoma$status==2,0,2)) fit=cuminc(melanoma$time/365,melanoma$status1) ggcmprsk(fit,c(\"melanoma\",\"others\"))"},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a multiple imputed model — imputedReg","title":"Make a multiple imputed model — imputedReg","text":"Make multiple imputed model","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a multiple imputed model — imputedReg","text":"","code":"imputedReg(fit, data = NULL, m = 20, seed = 1234, digits = 2, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a multiple imputed model — imputedReg","text":"fit object class lm glm data data.frame m Number multiple imputations. default m=20. seed integer used argument set.seed() offsetting random number generator. digits Integer indicating number decimal place ... argument passed mice","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/imputedReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a multiple imputed model — imputedReg","text":"","code":"data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") imputedReg(fit) #> Warning: Number of logged events: 1 #>            id     estimate   std.error  statistic       df      p.value #> 1 (Intercept) -0.638897928 0.281963378 -2.2658898 1833.346 2.357429e-02 #> 2       rxLev -0.046738499 0.118157562 -0.3955608 1848.303 6.924747e-01 #> 3   rxLev+5FU -0.618091905 0.120613104 -5.1245833 1845.110 3.294030e-07 #> 4         sex -0.033089561 0.098174322 -0.3370490 1846.866 7.361182e-01 #> 5         age  0.001938722 0.004171101  0.4647986 1841.764 6.421306e-01 #> 6    obstruct  0.304585914 0.123567787  2.4649297 1845.777 1.379447e-02 #> 7       nodes  0.190713187 0.018143728 10.5112457 1575.211 0.000000e+00 #>          2.5 %      97.5 %        OR     lower     upper #> 1 -1.191901079 -0.08589478 0.5278739 0.3036435 0.9176908 #> 2 -0.278474816  0.18499782 0.9543369 0.7569373 1.2032158 #> 3 -0.854644419 -0.38153939 0.5389719 0.4254344 0.6828095 #> 4 -0.225633881  0.15945476 0.9674519 0.7980102 1.1728712 #> 5 -0.006241862  0.01011931 1.0019406 0.9937776 1.0101707 #> 6  0.062238584  0.54693324 1.3560634 1.0642162 1.7279457 #> 7  0.155124788  0.22630159 1.2101123 1.1678037 1.2539538 #>                      stats #> 1 0.53 (0.30-0.92, p=.024) #> 2 0.95 (0.76-1.20, p=.692) #> 3 0.54 (0.43-0.68, p<.001) #> 4 0.97 (0.80-1.17, p=.736) #> 5 1.00 (0.99-1.01, p=.642) #> 6 1.36 (1.06-1.73, p=.014) #> 7 1.21 (1.17-1.25, p<.001) # \\donttest{ library(survival) fit=coxph(Surv(time,status)~rx+age+sex+nodes+obstruct+perfor,data=colon) imputedReg(fit) #>          id     estimate   std.error  statistic       df      p.value #> 1     rxLev -0.046507478 0.077155431 -0.6027765 909.7921 5.468076e-01 #> 2 rxLev+5FU -0.438763591 0.084184633 -5.2119202 909.3767 2.313569e-07 #> 3       age  0.001417281 0.002781573  0.5095252 909.2875 6.105078e-01 #> 4       sex -0.068785665 0.066475870 -1.0347464 909.8595 3.010623e-01 #> 5     nodes  0.087202231 0.006279040 13.8878295 883.8862 0.000000e+00 #> 6  obstruct  0.241574969 0.081489439  2.9644942 910.5266 3.110847e-03 #> 7    perfor  0.210557594 0.181821453  1.1580459 910.9150 2.471488e-01 #>          2.5 %      97.5 %        HR     lower     upper #> 1 -0.197930789  0.10491583 0.9545574 0.8204266 1.1106171 #> 2 -0.603982339 -0.27354484 0.6448332 0.5466304 0.7606782 #> 3 -0.004041767  0.00687633 1.0014183 0.9959664 1.0069000 #> 4 -0.199249525  0.06167820 0.9335267 0.8193454 1.0636200 #> 5  0.074878665  0.09952580 1.0911173 1.0777534 1.1046470 #> 6  0.081646014  0.40150392 1.2732529 1.0850716 1.4940700 #> 7 -0.146280037  0.56739523 1.2343661 0.8639157 1.7636671 #>                      stats #> 1 0.95 (0.82-1.11, p=.547) #> 2 0.64 (0.55-0.76, p<.001) #> 3 1.00 (1.00-1.01, p=.611) #> 4 0.93 (0.82-1.06, p=.301) #> 5 1.09 (1.08-1.10, p<.001) #> 6 1.27 (1.09-1.49, p=.003) #> 7 1.23 (0.86-1.76, p=.247) # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":null,"dir":"Reference","previous_headings":"","what":"Return maximum character number except NA — maxnchar","title":"Return maximum character number except NA — maxnchar","text":"Return maximum character number except NA","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return maximum character number except NA — maxnchar","text":"","code":"maxnchar(x)"},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return maximum character number except NA — maxnchar","text":"x vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/maxnchar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return maximum character number except NA — maxnchar","text":"","code":"x=c(1,2,\"sadf\",NA) maxnchar(x) #> [1] 4 data(acs,package=\"moonBook\") lapply(acs,maxnchar) #> $age #> [1] 2 #>  #> $sex #> [1] 6 #>  #> $cardiogenicShock #> [1] 3 #>  #> $entry #> [1] 7 #>  #> $Dx #> [1] 15 #>  #> $EF #> [1] 4 #>  #> $height #> [1] 5 #>  #> $weight #> [1] 5 #>  #> $BMI #> [1] 11 #>  #> $obesity #> [1] 3 #>  #> $TC #> [1] 5 #>  #> $LDLC #> [1] 3 #>  #> $HDLC #> [1] 2 #>  #> $TG #> [1] 3 #>  #> $DM #> [1] 3 #>  #> $HBP #> [1] 3 #>  #> $smoking #> [1] 9 #>"},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"Draw coefficients/odds ratio/hazard ratio plot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"","code":"modelPlot(   fit,   widths = NULL,   change.pointsize = TRUE,   show.OR = TRUE,   show.ref = TRUE,   bw = TRUE,   legend.position = \"top\",   ... )"},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"fit object class glm widths Numeric vector change.pointsize logical Whether change point size show.logical Whether show odds ratio show.ref logical Whether show reference bw logical true, use grey scale legend.position legend position default value 'top' ... arguments passed autoReg()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"modelPlot returns  object class \"modelPlot\" object class modelPlot list containing least following components: tab1 first table containing names tab2 2nd table containing levels tab3 3rd table containing coefficients odds ratio hazards ratio p ggplot widths widths tables ggplot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/modelPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw coefficients/odds ratio/hazard ratio plot — modelPlot","text":"","code":"fit=lm(mpg~wt*hp+am,data=mtcars) modelPlot(fit,widths=c(1,0,2,3))  modelPlot(fit,uni=TRUE,threshold=1,widths=c(1,0,2,3))  fit=lm(Sepal.Width~Sepal.Length*Species,data=iris) modelPlot(fit)  modelPlot(fit,uni=TRUE,change.pointsize=FALSE)  # \\donttest{ data(cancer,package=\"survival\") fit=glm(status~rx+age+sex+nodes+obstruct+perfor,data=colon,family=\"binomial\") modelPlot(fit)  modelPlot(fit,uni=TRUE,multi=TRUE,threshold=1)  modelPlot(fit,multi=TRUE,imputed=TRUE,change.pointsize=FALSE)  data(colon_s,package=\"finalfit\") fit=glm(mort_5yr~age.factor+sex.factor+obstruct.factor+perfor.factor,data=colon_s,family=\"binomial\") modelPlot(fit)  modelPlot(fit,uni=TRUE,multi=TRUE,threshold=1)  modelPlot(fit,uni=TRUE,multi=TRUE)  modelPlot(fit,uni=TRUE,multi=TRUE,threshold=1,show.ref=FALSE)  library(survival) fit=coxph(Surv(time,status)~age+sex+obstruct+perfor,data=colon) modelPlot(fit)  modelPlot(fit,uni=TRUE,threshold=1)  fit=coxph(Surv(time,status)~age.factor+sex.factor+obstruct.factor+perfor.factor,data=colon_s) modelPlot(fit)  modelPlot(fit,uni=TRUE,threshold=1)  modelPlot(fit,uni=TRUE,threshold=1,show.ref=FALSE)  modelPlot(fit,imputed=TRUE)  # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"Statistical test categorical variables Statistical test categorical variables","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"","code":"my.chisq.test2(x, y, catMethod = 2, all = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"x vector y vector catMethod integer indicating methods categorical variables. Possible values methods 0 Perform chisq.test first. warning present, perform fisher test 1 Perform chisq.test without continuity correction 2 Perform chisq.test continuity correction 3 perform fisher.test 4 perform prop.trend test Default value 2. logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.chisq.test2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical test for categorical variables\nStatistical test for categorical variables — my.chisq.test2","text":"","code":"library(moonBook) x=acs$sex y=acs$Dx my.chisq.test2(x,y) #> [1] 0.01228804"},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical test for continuous variables — my.t.test2","title":"Statistical test for continuous variables — my.t.test2","text":"Statistical test continuous variables","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical test for continuous variables — my.t.test2","text":"","code":"my.t.test2(y, x, method = 1, all = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical test for continuous variables — my.t.test2","text":"y categorical vector x numeric vector method method    integer indicating methods continuous variables. Possible values methods 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1. logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/my.t.test2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical test for continuous variables — my.t.test2","text":"","code":"library(moonBook) y=acs$sex x=acs$height my.t.test2(y,x) #> [1] 2.137925e-130"},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Simple Proportional Hazards Regression Model — mycphSimple","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"Fit Simple Proportional Hazards Regression Model","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"","code":"mycphSimple(fit, threshold = 0.2, digits = 2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"fit object class coxph threshold numeric p-value threshold enter multiple model digits integer indicating position decimal place","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/mycphSimple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Simple Proportional Hazards Regression Model — mycphSimple","text":"","code":"require(survival) data(cancer) fit=coxph(Surv(time,status)~age+sex+obstruct+perfor,data=colon)"},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert data.frame into flextable — myft","title":"Convert data.frame into flextable — myft","text":"Convert data.frame flextable","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert data.frame into flextable — myft","text":"","code":"myft(x, vanilla = TRUE, fontsize = 10, digits, showid = FALSE, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert data.frame into flextable — myft","text":"x data.frame vanilla logical fontsize Numeric digits integer indicating position decimal place showid logical TRUE, show id ... arguments passed df2flextable()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/myft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert data.frame into flextable — myft","text":"","code":"data(acs,package=\"moonBook\") library(dplyr) gaze(acs) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `stats`  #> header has 1 row(s)  #> body has 27 row(s)  #> original dataset sample:  #> —————————————————————————————————————————— #>        name         levels       stats     #> —————————————————————————————————————————— #> age               Mean ± SD    63.3 ± 11.7  #> sex               Female       287 (33.5%)  #>                   Male         570 (66.5%)  #> cardiogenicShock  No           805 (93.9%)  #>                   Yes            52 (6.1%)  #> —————————————————————————————————————————— gaze(sex~.,acs) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `Female (N=287)`, `Male (N=570)`, `p`  #> header has 1 row(s)  #> body has 25 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————————————— #>   Dependent:sex     levels        Female          Male        p    #>        (N)                       (N=287)        (N=570)            #> —————————————————————————————————————————————————————————————————— #> age               Mean ± SD       68.7 ± 10.7   60.6 ± 11.2  <.001  #> cardiogenicShock  No              275 (95.8%)     530 (93%)   .136  #>                   Yes               12 (4.2%)       40 (7%)         #> entry             Femoral         119 (41.5%)   193 (33.9%)   .035  #>                   Radial          168 (58.5%)   377 (66.1%)         #> —————————————————————————————————————————————————————————————————— # \\donttest{ gaze(sex+Dx~.,data=acs,show.p=TRUE,show.total=TRUE,show.n=TRUE,shiw.missing=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `N`, `NSTEMI (N=50)`, `STEMI (N=84)`, `Unstable Angina (N=153)`, `total (N=287)`, `p`, `N  `, `NSTEMI (N=103)`, `STEMI (N=220)`, `Unstable Angina (N=247)`, `total (N=570)`, `p  `  #> header has 2 row(s)  #> body has 22 row(s)  #> original dataset sample:  #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>            sex (N)                                            Female (N=287)                                                                     Male (N=570)                                      #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>    Dependent:Dx     levels     N      NSTEMI         STEMI          Unstable Angina          total        p     N       NSTEMI          STEMI          Unstable Angina          total        p    #>        (N)                            (N=50)         (N=84)             (N=153)             (N=287)                    (N=103)         (N=220)             (N=247)             (N=570)            #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD    287    70.9 ± 11.4   69.1 ± 10.4              67.7 ± 10.7    68.7 ± 10.7   .177  570     61.1 ± 11.6    59.4 ± 11.7              61.4 ± 10.6    60.6 ± 11.2   .133  #> cardiogenicShock  No           287       49 (98%)    73 (86.9%)               153 (100%)    275 (95.8%)  <.001  570     100 (97.1%)    183 (83.2%)               247 (100%)      530 (93%)  <.001  #>                   Yes                      1 (2%)    11 (13.1%)                   0 (0%)      12 (4.2%)                    3 (2.9%)     37 (16.8%)                   0 (0%)        40 (7%)         #> entry             Femoral      287       22 (44%)    45 (53.6%)                 52 (34%)    119 (41.5%)   .013  570        36 (35%)       88 (40%)               69 (27.9%)    193 (33.9%)   .022  #>                   Radial                 28 (56%)    39 (46.4%)                101 (66%)    168 (58.5%)                    67 (65%)      132 (60%)              178 (72.1%)    377 (66.1%)         #> ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(Dx+sex~cardiogenicShock,data=acs,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `Female (N=50)`, `Male (N=103)`, `p`, `Female (N=84)`, `Male (N=220)`, `p  `, `Female (N=153)`, `Male (N=247)`, `p   `  #> header has 2 row(s)  #> body has 2 row(s)  #> original dataset sample:  #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>           Dx (N)                     NSTEMI (N=153)                      STEMI (N=304)                  Unstable Angina (N=400)         #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:sex    levels     Female          Male        p       Female          Male       p        Female          Male        p    #>        (N)                    (N=50)        (N=103)               (N=84)        (N=220)              (N=153)        (N=247)            #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> cardiogenicShock  No             49 (98%)   100 (97.1%)  1.000     73 (86.9%)   183 (83.2%)  .535      153 (100%)    247 (100%)  1.000  #>                   Yes              1 (2%)      3 (2.9%)            11 (13.1%)    37 (16.8%)                0 (0%)        0 (0%)         #> —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(Dx+sex+HBP~cardiogenicShock,data=acs,show.p=TRUE) %>% myft() #> a flextable object. #> col_keys: `name`, `levels`, `No (N=19)`, `Yes (N=31)`, `p`, `No (N=43)`, `Yes (N=60)`, `p  `, `No (N=28)`, `Yes (N=56)`, `p   `, `No (N=122)`, `Yes (N=98)`, `p    `, `No (N=36)`, `Yes (N=117)`, `p     `, `No (N=108)`, `Yes (N=139)`, `p      `  #> header has 2 row(s)  #> body has 2 row(s)  #> original dataset sample:  #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>             Dx                        NSTEMI                        NSTEMI                         STEMI                          STEMI                      Unstable Angina                  Unstable Angina            #>            sex                        Female                         Male                          Female                          Male                           Female                            Male                 #>            (N)                        (N=50)                        (N=103)                        (N=84)                        (N=220)                         (N=153)                          (N=247)                #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:HBP    levels     No         Yes        p        No         Yes        p        No         Yes       p        No          Yes        p       No          Yes        p         No          Yes         p     #>        (N)                  (N=19)      (N=31)             (N=43)      (N=60)             (N=28)      (N=56)            (N=122)      (N=98)            (N=36)      (N=117)             (N=108)      (N=139)             #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> cardiogenicShock  No        19 (100%)  30 (96.8%)  1.000  42 (97.7%)  58 (96.7%)  1.000  23 (82.1%)  50 (89.3%)  .567  106 (86.9%)  77 (78.6%)   .145  36 (100%)   117 (100%)   1.000  108 (100%)   139 (100%)    1.000  #>                   Yes          0 (0%)    1 (3.2%)           1 (2.3%)    2 (3.3%)          5 (17.9%)   6 (10.7%)         16 (13.1%)  21 (21.4%)            0 (0%)       0 (0%)              0 (0%)       0 (0%)           #> ——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize numeric vector to statistical summary — num2stat","title":"Summarize numeric vector to statistical summary — num2stat","text":"Summarize numeric vector statistical summary","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize numeric vector to statistical summary — num2stat","text":"","code":"num2stat(x, digits = 1, method = 1, p = NULL)"},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize numeric vector to statistical summary — num2stat","text":"x numeric vector digits integer indicating number decimal places method integer indicating methods continuous variables. Possible values methods 1 forces analysis normal-distributed 2 forces analysis continuous non-normal 3 performs Shapiro-Wilk test nortest::ad.test decide normal non-normal Default value 1. p numeric","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/num2stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize numeric vector to statistical summary — num2stat","text":"","code":"library(moonBook) num2stat(acs$age) #> [1] \"63.3 ± 11.7\" num2stat(acs$age,method=2) #> [1] \"64.0 (55.0 to 72.0)\""},{"path":"https://cardiomoon.github.io/autoReg/reference/p2character2.html","id":null,"dir":"Reference","previous_headings":"","what":"Change p value to string — p2character2","title":"Change p value to string — p2character2","text":"Change p value string","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/p2character2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change p value to string — p2character2","text":"","code":"p2character2(x, digits = 3, add.p = TRUE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/p2character2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change p value to string — p2character2","text":"x numeric digits integer indicating decimal place add.p logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method print for an object of class autoReg — print.autoReg","title":"S3 method print for an object of class autoReg — print.autoReg","text":"S3 method print object class autoReg","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method print for an object of class autoReg — print.autoReg","text":"","code":"# S3 method for autoReg print(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method print for an object of class autoReg — print.autoReg","text":"x object class autoReg ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.autoReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method print for an object of class autoReg — print.autoReg","text":"","code":"data(cancer,package=\"survival\") fit=glm(status~rx+sex+age+obstruct+nodes,data=colon,family=\"binomial\") autoReg(fit) #> —————————————————————————————————————————————————————————————————————————————————— #>  Dependent: status              0 (N=925)    1 (N=897)      OR (multivariable)      #> —————————————————————————————————————————————————————————————————————————————————— #> rx                 Obs          282 (30.5%)  342 (38.1%)                            #>                    Lev          285 (30.8%)    323 (36%)  0.94 (0.74-1.18, p=.576)  #>                    Lev+5FU      358 (38.7%)  232 (25.9%)  0.53 (0.42-0.68, p<.001)  #> sex                Mean ± SD      0.5 ± 0.5    0.5 ± 0.5  0.95 (0.78-1.15, p=.589)  #> age                Mean ± SD    60.1 ± 11.5  59.5 ± 12.3  1.00 (0.99-1.01, p=.583)  #> obstruct           Mean ± SD      0.2 ± 0.4    0.2 ± 0.4  1.34 (1.05-1.72, p=.018)  #> nodes              Mean ± SD      2.7 ± 2.4    4.6 ± 4.2  1.21 (1.17-1.26, p<.001)  #> ——————————————————————————————————————————————————————————————————————————————————"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method print for an object of class gaze — print.gaze","title":"S3 method print for an object of class gaze — print.gaze","text":"S3 method print object class gaze","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method print for an object of class gaze — print.gaze","text":"","code":"# S3 method for gaze print(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method print for an object of class gaze — print.gaze","text":"x object class gaze ... arguments","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.gaze.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S3 method print for an object of class gaze — print.gaze","text":"","code":"data(acs,package=\"moonBook\") x=gaze(acs,show.n=TRUE,show.missing=TRUE) gaze(sex~.,acs,show.p=TRUE,show.n=TRUE,show.missing=TRUE,show.total=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:sex        levels        N    Missing        Female          Male          total        p    #>        (N)                                              (N=287)        (N=570)        (N=857)            #> ———————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD          857     0(0.0%)     68.7 ± 10.7   60.6 ± 11.2    63.3 ± 11.7  <.001  #> cardiogenicShock  No                 857     0(0.0%)     275 (95.8%)     530 (93%)    805 (93.9%)   .136  #>                   Yes                                      12 (4.2%)       40 (7%)      52 (6.1%)         #> entry             Femoral            857     0(0.0%)     119 (41.5%)   193 (33.9%)    312 (36.4%)   .035  #>                   Radial                                 168 (58.5%)   377 (66.1%)    545 (63.6%)         #> Dx                NSTEMI             857     0(0.0%)      50 (17.4%)   103 (18.1%)    153 (17.9%)   .012  #>                   STEMI                                   84 (29.3%)   220 (38.6%)    304 (35.5%)         #>                   Unstable Angina                        153 (53.3%)   247 (43.3%)    400 (46.7%)         #> EF                Mean ± SD          723  134(15.6%)     56.3 ± 10.1    55.6 ± 9.4     55.8 ± 9.6   .387  #> height            Mean ± SD          764   93(10.9%)     153.8 ± 6.2   167.9 ± 6.1    163.2 ± 9.1  <.001  #> weight            Mean ± SD          766   91(10.6%)      57.2 ± 9.3   68.7 ± 10.3    64.8 ± 11.4  <.001  #> BMI               Mean ± SD          764   93(10.9%)      24.2 ± 3.6    24.3 ± 3.2     24.3 ± 3.3   .611  #> obesity           No                 857     0(0.0%)     194 (67.6%)   373 (65.4%)    567 (66.2%)   .580  #>                   Yes                                     93 (32.4%)   197 (34.6%)    290 (33.8%)         #> TC                Mean ± SD          834    23(2.7%)    188.9 ± 51.1  183.3 ± 45.9   185.2 ± 47.8   .124  #> LDLC              Mean ± SD          833    24(2.8%)    117.8 ± 41.2  116.0 ± 41.1   116.6 ± 41.1   .561  #> HDLC              Mean ± SD          834    23(2.7%)     39.0 ± 11.5   37.8 ± 10.9    38.2 ± 11.1   .145  #> TG                Mean ± SD          842    15(1.8%)    119.9 ± 76.2  127.9 ± 97.3   125.2 ± 90.9   .195  #> DM                No                 857     0(0.0%)     173 (60.3%)   380 (66.7%)    553 (64.5%)   .077  #>                   Yes                                    114 (39.7%)   190 (33.3%)    304 (35.5%)         #> HBP               No                 857     0(0.0%)      83 (28.9%)   273 (47.9%)    356 (41.5%)  <.001  #>                   Yes                                    204 (71.1%)   297 (52.1%)    501 (58.5%)         #> smoking           Ex-smoker          857     0(0.0%)      49 (17.1%)   155 (27.2%)    204 (23.8%)  <.001  #>                   Never                                  209 (72.8%)   123 (21.6%)    332 (38.7%)         #>                   Smoker                                  29 (10.1%)   292 (51.2%)    321 (37.5%)         #> ———————————————————————————————————————————————————————————————————————————————————————————————————————— # \\donttest{ gaze(Dx+sex~.,acs,show.p=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>            Dx (N)                       NSTEMI (N=153)                       STEMI (N=304)                   Unstable Angina (N=400)          #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:sex     levels       Female          Male         p       Female          Male        p        Female          Male         p    #>        (N)                       (N=50)         (N=103)               (N=84)        (N=220)               (N=153)         (N=247)            #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD      70.9 ± 11.4    61.1 ± 11.6  <.001    69.1 ± 10.4   59.4 ± 11.7  <.001     67.7 ± 10.7    61.4 ± 10.6  <.001  #> cardiogenicShock  No                49 (98%)    100 (97.1%)  1.000     73 (86.9%)   183 (83.2%)   .535      153 (100%)     247 (100%)  1.000  #>                   Yes                 1 (2%)       3 (2.9%)            11 (13.1%)    37 (16.8%)                 0 (0%)         0 (0%)         #> entry             Femoral           22 (44%)       36 (35%)   .366     45 (53.6%)      88 (40%)   .045        52 (34%)     69 (27.9%)   .243  #>                   Radial            28 (56%)       67 (65%)            39 (46.4%)     132 (60%)              101 (66%)    178 (72.1%)         #> EF                Mean ± SD       54.8 ± 9.1     55.1 ± 9.4   .891    52.3 ± 10.9    52.4 ± 8.9   .970      59.4 ± 8.8     59.1 ± 8.7   .798  #> height            Mean ± SD      154.2 ± 5.1    167.5 ± 5.7  <.001    155.7 ± 5.4   168.7 ± 6.0  <.001     152.6 ± 6.7    167.3 ± 6.4  <.001  #> weight            Mean ± SD      57.2 ± 10.3     67.5 ± 8.4  <.001     57.4 ± 9.0   68.8 ± 10.9  <.001      57.1 ± 9.1    69.0 ± 10.6  <.001  #> BMI               Mean ± SD       24.1 ± 4.3     24.1 ± 2.6   .967     23.6 ± 3.2    24.1 ± 3.4   .282      24.5 ± 3.5     24.6 ± 3.4   .816  #> obesity           No                35 (70%)     71 (68.9%)  1.000     60 (71.4%)   149 (67.7%)   .628      99 (64.7%)    153 (61.9%)   .653  #>                   Yes               15 (30%)     32 (31.1%)            24 (28.6%)    71 (32.3%)             54 (35.3%)     94 (38.1%)         #> TC                Mean ± SD     196.3 ± 52.7   192.6 ± 54.3   .697   180.7 ± 45.7  184.1 ± 42.6   .542    191.1 ± 53.1   178.7 ± 44.6   .018  #> LDLC              Mean ± SD     127.7 ± 39.5   125.4 ± 47.1   .774   111.0 ± 40.0  118.9 ± 39.1   .128    118.3 ± 41.8   109.5 ± 39.2   .035  #> HDLC              Mean ± SD      40.1 ± 13.8    38.4 ± 10.9   .414    39.5 ± 11.2   38.1 ± 10.9   .338     38.5 ± 10.8    37.4 ± 10.9   .338  #> TG                Mean ± SD     112.5 ± 51.1  138.0 ± 100.2   .042   112.3 ± 87.2  104.3 ± 65.5   .454    126.3 ± 76.0  144.3 ± 114.2   .060  #> DM                No                25 (50%)     71 (68.9%)   .036     54 (64.3%)     154 (70%)   .412      94 (61.4%)    155 (62.8%)   .875  #>                   Yes               25 (50%)     32 (31.1%)            30 (35.7%)      66 (30%)             59 (38.6%)     92 (37.2%)         #> HBP               No                19 (38%)     43 (41.7%)   .789     28 (33.3%)   122 (55.5%)  <.001      36 (23.5%)    108 (43.7%)  <.001  #>                   Yes               31 (62%)     60 (58.3%)            56 (66.7%)    98 (44.5%)            117 (76.5%)    139 (56.3%)         #> smoking           Ex-smoker          8 (16%)       34 (33%)  <.001     13 (15.5%)    53 (24.1%)  <.001      28 (18.3%)     68 (27.5%)  <.001  #>                   Never             37 (74%)     13 (12.6%)            57 (67.9%)    40 (18.2%)            115 (75.2%)     70 (28.3%)         #>                   Smoker             5 (10%)     56 (54.4%)            14 (16.7%)   127 (57.7%)              10 (6.5%)    109 (44.1%)         #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— gaze(sex+Dx+HBP~.,acs,show.p=TRUE) #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>              sex                           Female                             Female                             Female                               Male                                Male                                 Male                   #>              Dx                            NSTEMI                              STEMI                         Unstable Angina                         NSTEMI                              STEMI                           Unstable Angina              #>              (N)                           (N=50)                             (N=84)                             (N=153)                            (N=103)                             (N=220)                              (N=247)                  #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #>   Dependent:HBP     levels         No           Yes         p         No           Yes         p         No           Yes         p         No            Yes         p         No           Yes         p          No            Yes          p     #>        (N)                       (N=19)        (N=31)               (N=28)        (N=56)               (N=36)       (N=117)               (N=43)        (N=60)               (N=122)        (N=98)                (N=108)       (N=139)              #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— #> age               Mean ± SD     69.9 ± 12.8   71.5 ± 10.5   .636   66.8 ± 12.6    70.3 ± 9.0   .191   67.9 ± 12.1   67.6 ± 10.3   .885   57.5 ± 10.0    63.7 ± 12.0   .007   56.3 ± 11.8   63.3 ± 10.4   <.001    58.9 ± 11.0    63.5 ± 9.8    <.001  #> cardiogenicShock  No              19 (100%)    30 (96.8%)  1.000    23 (82.1%)    50 (89.3%)   .567     36 (100%)    117 (100%)  1.000    42 (97.7%)     58 (96.7%)  1.000   106 (86.9%)    77 (78.6%)    .145     108 (100%)    139 (100%)    1.000  #>                   Yes                0 (0%)      1 (3.2%)            5 (17.9%)     6 (10.7%)               0 (0%)        0 (0%)             1 (2.3%)       2 (3.3%)           16 (13.1%)    21 (21.4%)                 0 (0%)        0 (0%)           #> entry             Femoral         7 (36.8%)    15 (48.4%)   .614      14 (50%)    31 (55.4%)   .817    10 (27.8%)    42 (35.9%)   .485    16 (37.2%)     20 (33.3%)   .844    49 (40.2%)    39 (39.8%)   1.000     32 (29.6%)    37 (26.6%)     .704  #>                   Radial         12 (63.2%)    16 (51.6%)             14 (50%)    25 (44.6%)           26 (72.2%)    75 (64.1%)           27 (62.8%)     40 (66.7%)           73 (59.8%)    59 (60.2%)             76 (70.4%)   102 (73.4%)           #> EF                Mean ± SD     56.3 ± 10.4    54.0 ± 8.4   .421   50.8 ± 11.7   53.1 ± 10.5   .378    60.2 ± 6.8    59.1 ± 9.4   .566    56.4 ± 8.1    54.1 ± 10.2   .236    52.5 ± 9.1    52.2 ± 8.7    .831     60.6 ± 8.2    58.1 ± 8.9     .045  #> height            Mean ± SD     154.2 ± 5.5   154.2 ± 5.0   .972   155.4 ± 5.8   155.9 ± 5.2   .748   153.1 ± 8.5   152.4 ± 6.1   .666   167.8 ± 4.9    167.3 ± 6.1   .660   169.9 ± 6.5   167.3 ± 4.9    .003    168.0 ± 6.3   166.8 ± 6.5     .159  #> weight            Mean ± SD     56.4 ± 13.7    57.9 ± 7.2   .676    54.5 ± 8.5    59.0 ± 9.0   .037   58.4 ± 11.4    56.7 ± 8.3   .442    67.5 ± 8.4     67.6 ± 8.4   .964   69.4 ± 11.7    68.1 ± 9.9    .414    68.2 ± 11.8    69.7 ± 9.6     .318  #> BMI               Mean ± SD      23.6 ± 5.1    24.4 ± 3.7   .536    22.5 ± 3.3    24.2 ± 3.1   .029    24.8 ± 4.2    24.4 ± 3.2   .583    23.9 ± 2.4     24.1 ± 2.7   .688    24.0 ± 3.6    24.3 ± 3.1    .582     24.0 ± 3.3    25.1 ± 3.4     .025  #> obesity           No             14 (73.7%)    21 (67.7%)   .899    24 (85.7%)    36 (64.3%)   .073    21 (58.3%)    78 (66.7%)   .474    32 (74.4%)       39 (65%)   .422    86 (70.5%)    63 (64.3%)    .405     73 (67.6%)    80 (57.6%)     .139  #>                   Yes             5 (26.3%)    10 (32.3%)            4 (14.3%)    20 (35.7%)           15 (41.7%)    39 (33.3%)           11 (25.6%)       21 (35%)           36 (29.5%)    35 (35.7%)             35 (32.4%)    59 (42.4%)           #> TC                Mean ± SD    199.8 ± 49.8  194.4 ± 54.9   .743  182.0 ± 45.4  180.0 ± 46.2   .858  173.2 ± 52.2  196.5 ± 52.4   .022  203.0 ± 68.1   185.0 ± 40.3   .127  188.8 ± 42.7  178.3 ± 41.8    .071   184.9 ± 46.6  173.7 ± 42.3     .053  #> LDLC              Mean ± SD    131.4 ± 49.6  125.7 ± 33.7   .642  109.2 ± 42.9  111.9 ± 38.9   .776  106.6 ± 38.3  121.9 ± 42.4   .057  139.9 ± 58.7   114.8 ± 33.1   .014  124.1 ± 40.7  112.3 ± 36.2    .028   115.4 ± 44.3  104.7 ± 33.8     .041  #> HDLC              Mean ± SD      43.0 ± 9.1   38.6 ± 15.6   .235   39.9 ± 12.4   39.3 ± 10.7   .805   37.1 ± 10.4   38.9 ± 11.0   .407   37.7 ± 10.1    38.9 ± 11.6   .557   37.3 ± 11.5   39.1 ± 10.1    .216    38.3 ± 12.1    36.6 ± 9.7     .244  #> TG                Mean ± SD     98.0 ± 23.1  120.3 ± 59.9   .079  106.9 ± 86.1  115.1 ± 88.4   .690  121.8 ± 70.9  127.6 ± 77.8   .694  138.8 ± 77.8  137.5 ± 114.5   .945  105.6 ± 65.1  102.6 ± 66.2    .741  147.3 ± 132.2  141.9 ± 98.2     .724  #> DM                No             11 (57.9%)    14 (45.2%)   .560    18 (64.3%)    36 (64.3%)  1.000    25 (69.4%)      69 (59%)   .351    33 (76.7%)     38 (63.3%)   .217    93 (76.2%)    61 (62.2%)    .036     79 (73.1%)    76 (54.7%)     .004  #>                   Yes             8 (42.1%)    17 (54.8%)           10 (35.7%)    20 (35.7%)           11 (30.6%)      48 (41%)           10 (23.3%)     22 (36.7%)           29 (23.8%)    37 (37.8%)             29 (26.9%)    63 (45.3%)           #> smoking           Ex-smoker       3 (15.8%)     5 (16.1%)   .995     3 (10.7%)    10 (17.9%)   .025       9 (25%)    19 (16.2%)   .043    11 (25.6%)     23 (38.3%)   .017    23 (18.9%)    30 (30.6%)    .029     32 (29.6%)    36 (25.9%)     .418  #>                   Never          14 (73.7%)    23 (74.2%)           16 (57.1%)    41 (73.2%)           22 (61.1%)    93 (79.5%)             2 (4.7%)     11 (18.3%)           19 (15.6%)    21 (21.4%)             26 (24.1%)    44 (31.7%)           #>                   Smoker          2 (10.5%)      3 (9.7%)            9 (32.1%)      5 (8.9%)            5 (13.9%)      5 (4.3%)           30 (69.8%)     26 (43.3%)           80 (65.6%)      47 (48%)             50 (46.3%)    59 (42.4%)           #> ———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————— # }"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.modelPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 method for an class modelPlot — print.modelPlot","title":"S3 method for an class modelPlot — print.modelPlot","text":"S3 method class modelPlot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/print.modelPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 method for an class modelPlot — print.modelPlot","text":"","code":"# S3 method for modelPlot print(x, ...)"},{"path":"https://cardiomoon.github.io/autoReg/reference/print.modelPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 method for an class modelPlot — print.modelPlot","text":"x object class modelPlot ... arguments passed plot()","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/printdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Print function for data.frame — printdf","title":"Print function for data.frame — printdf","text":"Print function data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/printdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print function for data.frame — printdf","text":"","code":"printdf(x, showid = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/printdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print function for data.frame — printdf","text":"x data.frame showid logical TRUE, show id","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicated term — removeDup","title":"Remove duplicated term — removeDup","text":"Remove duplicated term","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicated term — removeDup","text":"","code":"removeDup(x, replacement = \"\")"},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicated term — removeDup","text":"x vector replacement character replaced NA","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/removeDup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove duplicated term — removeDup","text":"","code":"x=rep(1:5,each=3) removeDup(x) #>  [1] \"1\" \"\"  \"\"  \"2\" \"\"  \"\"  \"3\" \"\"  \"\"  \"4\" \"\"  \"\"  \"5\" \"\"  \"\""},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a martingale residual plot with an object of class coxph — residualPlot","title":"Draw a martingale residual plot with an object of class coxph — residualPlot","text":"Draw martingale residual plot object class coxph","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a martingale residual plot with an object of class coxph — residualPlot","text":"","code":"residualPlot(fit, mode = 1)"},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a martingale residual plot with an object of class coxph — residualPlot","text":"fit object class coxph mode Integer mode 1, draw martingale residual plot. mode 2, draw dfbeta plot. mode 3, draw risk score plot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a martingale residual plot with an object of class coxph — residualPlot","text":"ggplot","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/residualPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw a martingale residual plot with an object of class coxph — residualPlot","text":"","code":"require(survival) fit=coxph(Surv(time,status==2)~log(bili)+age+cluster(edema),data=pbc) residualPlot(fit)"},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData.html","id":null,"dir":"Reference","previous_headings":"","what":"restore data with factor in column name — restoreData","title":"restore data with factor in column name — restoreData","text":"restore data factor column name","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restore data with factor in column name — restoreData","text":"","code":"restoreData(data)"},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restore data with factor in column name — restoreData","text":"data data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData2.html","id":null,"dir":"Reference","previous_headings":"","what":"restore data with I() in column name — restoreData2","title":"restore data with I() in column name — restoreData2","text":"restore data () column name","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restore data with I() in column name — restoreData2","text":"","code":"restoreData2(df)"},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restore data with I() in column name — restoreData2","text":"df data.frame","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData3.html","id":null,"dir":"Reference","previous_headings":"","what":"restore data with operator in column name — restoreData3","title":"restore data with operator in column name — restoreData3","text":"restore data operator column name","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restore data with operator in column name — restoreData3","text":"","code":"restoreData3(df, changeLabel = FALSE)"},{"path":"https://cardiomoon.github.io/autoReg/reference/restoreData3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restore data with operator in column name — restoreData3","text":"df data.frame changeLabel logical","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/revOperator.html","id":null,"dir":"Reference","previous_headings":"","what":"get opposite arithmetic operator — revOperator","title":"get opposite arithmetic operator — revOperator","text":"get opposite arithmetic operator","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/revOperator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get opposite arithmetic operator — revOperator","text":"","code":"revOperator(operator)"},{"path":"https://cardiomoon.github.io/autoReg/reference/revOperator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get opposite arithmetic operator — revOperator","text":"operator character","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/roundDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric columns of data.frame to character — roundDf","title":"Convert numeric columns of data.frame to character — roundDf","text":"Convert numeric columns data.frame character","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/roundDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric columns of data.frame to character — roundDf","text":"","code":"roundDf(df, digits = 2)"},{"path":"https://cardiomoon.github.io/autoReg/reference/roundDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric columns of data.frame to character — roundDf","text":"df data.frame digits integer indicating number decimal places","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/setLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Add label to a vector — setLabel","title":"Add label to a vector — setLabel","text":"Add label vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/setLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add label to a vector — setLabel","text":"","code":"setLabel(x, label = \"\")"},{"path":"https://cardiomoon.github.io/autoReg/reference/setLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add label to a vector — setLabel","text":"x vector label string","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/setLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add label to a vector — setLabel","text":"labelled vector","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":null,"dir":"Reference","previous_headings":"","what":"Shorten an object of class gaze — shorten","title":"Shorten an object of class gaze — shorten","text":"Shorten object class gaze","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shorten an object of class gaze — shorten","text":"","code":"shorten(x, xname = NULL, ref = 1)"},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shorten an object of class gaze — shorten","text":"x object class gaze xname variable name ref Numeric Th number used reference","code":""},{"path":"https://cardiomoon.github.io/autoReg/reference/shorten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shorten an object of class gaze — shorten","text":"","code":"data(acs,package=\"moonBook\") x=gaze(sex~.,data=acs) shorten(x) #> ———————————————————————————————————————————————————————————————————————— #>   Dependent:sex        levels           Female          Male        p    #>        (N)                             (N=287)        (N=570)            #> ———————————————————————————————————————————————————————————————————————— #> age               Mean ± SD             68.7 ± 10.7   60.6 ± 11.2  <.001  #> cardiogenicShock  Yes                     12 (4.2%)       40 (7%)         #> entry             Radial                168 (58.5%)   377 (66.1%)         #> Dx                STEMI                  84 (29.3%)   220 (38.6%)         #>                   Unstable Angina       153 (53.3%)   247 (43.3%)         #> EF                Mean ± SD             56.3 ± 10.1    55.6 ± 9.4   .387  #> height            Mean ± SD             153.8 ± 6.2   167.9 ± 6.1  <.001  #> weight            Mean ± SD              57.2 ± 9.3   68.7 ± 10.3  <.001  #> BMI               Mean ± SD              24.2 ± 3.6    24.3 ± 3.2   .611  #> obesity           Yes                    93 (32.4%)   197 (34.6%)         #> TC                Mean ± SD            188.9 ± 51.1  183.3 ± 45.9   .124  #> LDLC              Mean ± SD            117.8 ± 41.2  116.0 ± 41.1   .561  #> HDLC              Mean ± SD             39.0 ± 11.5   37.8 ± 10.9   .145  #> TG                Mean ± SD            119.9 ± 76.2  127.9 ± 97.3   .195  #> DM                Yes                   114 (39.7%)   190 (33.3%)         #> HBP               Yes                   204 (71.1%)   297 (52.1%)         #> smoking           Never                 209 (72.8%)   123 (21.6%)         #>                   Smoker                 29 (10.1%)   292 (51.2%)         #> ————————————————————————————————————————————————————————————————————————"}]
